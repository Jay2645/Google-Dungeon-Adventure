<!--Saved by Quest 5.5.5173.27901-->
<asl version="550">
  <implied element="object" property="alt" type="simplestringlist" />
  <implied element="command" property="pattern" type="simplepattern" />
  <implied element="command" property="script" type="script" />
  <implied element="command" property="multiple" type="AssociatedScope" />
  <implied element="object" property="displayverbs" type="simplestringlist" />
  <implied element="object" property="inventoryverbs" type="simplestringlist" />
  <implied element="walkthrough" property="steps" type="simplestringlist" />
  <implied element="timer" property="interval" type="int" />
  <implied element="timer" property="script" type="script" />
  <implied element="turnscript" property="script" type="script" />
  <template name="LanguageId">en</template>
  <template name="UnresolvedObject">I can't see that.</template>
  <template name="UnresolvedLocation">You can't go there.</template>
  <template name="DefaultObjectDescription">Nothing out of the ordinary.</template>
  <template name="DefaultSelfDescription">Looking good.</template>
  <template name="SeeListHeader">You can see</template>
  <template name="GoListHeader">You can go</template>
  <template name="And">and</template>
  <template name="Or">or</template>
  <template name="NothingToUndo">Nothing to undo!</template>
  <template name="NotCarryingAnything">You are not carrying anything.</template>
  <template name="CarryingListHeader">You are carrying</template>
  <template name="UnrecognisedCommand">I don't understand your command.</template>
  <template name="YouAreIn">You are in</template>
  <template name="LookAt">Look at</template>
  <template name="Take">Take</template>
  <template name="SpeakTo">Speak to</template>
  <template name="Use">Use</template>
  <template name="Drop">Drop</template>
  <template name="GoTo">Go to</template>
  <template name="Go">Go</template>
  <template name="SwitchOn">Switch on</template>
  <template name="SwitchOff">Switch off</template>
  <template name="Open">Open</template>
  <template name="Close">Close</template>
  <template name="Eat">Eat</template>
  <template name="NeutralGender">it</template>
  <template name="MaleGender">he</template>
  <template name="FemaleGender">she</template>
  <template name="SelfGender">you</template>
  <template name="NeutralPluralGender">they</template>
  <template name="MalePluralGender">they</template>
  <template name="FemalePluralGender">they</template>
  <template name="NeutralArticle">it</template>
  <template name="MaleArticle">him</template>
  <template name="FemaleArticle">her</template>
  <template name="SelfArticle">yourself</template>
  <template name="NeutralPluralArticle">them</template>
  <template name="MalePluralArticle">them</template>
  <template name="FemalePluralArticle">them</template>
  <template name="SelfAlias">me</template>
  <template name="SelfAlt">myself; self</template>
  <template name="AllObjects">all; everything</template>
  <template name="ParserIgnorePrefixes">the; a; an</template>
  <template name="CannotDoThat">You can't do that.</template>
  <template name="Done">Done.</template>
  <template name="ContainerContentsPrefix">containing</template>
  <template name="SurfaceContentsPrefix">on which there is</template>
  <template name="LockedExit">That way is locked.</template>
  <template name="NoKey">You do not have the key.</template>
  <template name="UnlockMessage">Unlocked.</template>
  <template name="LockMessage">Locked.</template>
  <template name="DefaultOops">There is nothing to correct.</template>
  <template name="VerbObjectSeparator">with; using</template>
  <template name="DefaultMultiObjectVerb">That doesn't work.</template>
  <template name="MultiObjectVerbMenu">With which object?</template>
  <template name="UseOnMenu">On which object?</template>
  <template name="GiveToMenu">To which object?</template>
  <template name="NoObjectsAvailable">There are no objects available to do that with.</template>
  <template name="Yes">Yes</template>
  <template name="No">No</template>
  <template name="By">by</template>
  <template name="CompassNW">northwest</template>
  <template name="CompassN">north</template>
  <template name="CompassNE">northeast</template>
  <template name="CompassW">west</template>
  <template name="CompassE">east</template>
  <template name="CompassSW">southwest</template>
  <template name="CompassS">south</template>
  <template name="CompassSE">southeast</template>
  <template name="CompassUp">up</template>
  <template name="CompassDown">down</template>
  <template name="CompassIn">in</template>
  <template name="CompassOut">out</template>
  <template name="CompassDirectionPrefix"></template>
  <template name="CompassDirectionSuffix"></template>
  <template name="UpDownDirectionPrefix"></template>
  <template name="UpDownDirectionSuffix"></template>
  <template name="InOutDirectionPrefix"></template>
  <template name="InOutDirectionSuffix"></template>
  <template name="CompassNWShort">nw</template>
  <template name="CompassNShort">n</template>
  <template name="CompassNEShort">ne</template>
  <template name="CompassWShort">w</template>
  <template name="CompassEShort">e</template>
  <template name="CompassSWShort">sw</template>
  <template name="CompassSShort">s</template>
  <template name="CompassSEShort">se</template>
  <template name="CompassUpShort">u</template>
  <template name="CompassDownShort">d</template>
  <template name="CompassInShort"></template>
  <template name="CompassOutShort">o</template>
  <template name="InventoryLabel">Inventory</template>
  <template name="StatusLabel">Status</template>
  <template name="PlacesObjectsLabel">Places and Objects</template>
  <template name="CompassLabel">Compass</template>
  <template name="InButtonLabel">in</template>
  <template name="OutButtonLabel">out</template>
  <template name="EmptyListLabel">(empty)</template>
  <template name="NothingSelectedLabel">(nothing selected)</template>
  <template name="TypeHereLabel">Type here...</template>
  <template name="ContinueLabel">Continue...</template>
  <template name="go"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></template>
  <template name="lookdir"><![CDATA[^look (?<exit>north|east|south|west|northeast|northwest|southeast|southwest|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></template>
  <template name="look">^look$|^l$</template>
  <template name="lookat">look at; x; examine; exam; ex</template>
  <template name="take">take; get; pick up</template>
  <template name="undo">^undo$</template>
  <template name="inventory">^i$|^inv$|^inventory$</template>
  <template name="quit">^quit$</template>
  <template name="drop">drop</template>
  <template name="use">use</template>
  <template name="speakto">speak to; speak; talk to; talk</template>
  <template name="open">open</template>
  <template name="close">close</template>
  <template name="put"><![CDATA[^put (?<object1>.*) (on|in) (?<object2>.*)$]]></template>
  <template name="removefrom"><![CDATA[^remove (?<object1>.*) from (?<object2>.*)$]]></template>
  <template name="ask"><![CDATA[^ask (?<object>.*) about (?<text>.*)$]]></template>
  <template name="tell"><![CDATA[^tell (?<object>.*) about (?<text>.*)$]]></template>
  <template name="oops"><![CDATA[^oops (?<text>.*)$]]></template>
  <template name="buy">buy</template>
  <template name="climb">climb</template>
  <template name="drink">drink</template>
  <template name="eat">eat</template>
  <template name="givesingle">give</template>
  <template name="give"><![CDATA[^give (?<object1>.*) to (?<object2>.*)$]]></template>
  <template name="hit">hit</template>
  <template name="kill">kill</template>
  <template name="kiss">kiss</template>
  <template name="knock">knock</template>
  <template name="lick">lick</template>
  <template name="lie">lie on; lie upon; lie down on; lie down upon</template>
  <template name="listento">listen to</template>
  <template name="lock">lock</template>
  <template name="move">move</template>
  <template name="pull">pull</template>
  <template name="push">push</template>
  <template name="read">read</template>
  <template name="search">search</template>
  <template name="show">show</template>
  <template name="sit">sit on; sit upon; sit down on; sit down upon</template>
  <template name="smell">smell; sniff</template>
  <template name="taste">taste</template>
  <template name="throw">throw</template>
  <template name="tie">tie</template>
  <template name="touch">touch</template>
  <template name="turnon">turn on; turn #object# on; switch on; switch #object# on</template>
  <template name="turnoff">turn off; turn #object# off; switch off; switch #object# off</template>
  <template name="turn">turn</template>
  <template name="unlock">unlock</template>
  <template name="untie">untie</template>
  <template name="useon"><![CDATA[^use (?<object1>.*) (on|with) (?<object2>.*)$]]></template>
  <template name="wear">wear</template>
  <template name="listen">^listen$</template>
  <template name="DefaultListen">You can't hear much.</template>
  <template name="jump">^jump$</template>
  <template name="DefaultJump">You jump, but nothing happens.</template>
  <template name="sitdown">^sit$|^sit down$</template>
  <template name="DefaultSitDown">No time for lounging about now.</template>
  <template name="liedown">^lie$|^lie down$</template>
  <template name="DefaultLieDown">No time for lounging about now.</template>
  <template name="sleep">^sleep$|^rest$</template>
  <template name="DefaultSleep">No time for lounging about now.</template>
  <template name="wait">^wait$|^z$</template>
  <template name="DefaultWait">Time passes.</template>
  <template name="xyzzy">^xyzzy$</template>
  <template name="DefaultXyzzy">Surprisingly, absolutely nothing happens.</template>
  <template name="help">^help$|^\?$</template>
  <template name="save">^save$</template>
  <template name="DefaultHelp"><![CDATA[<u>Quick Help</u><br/><br/>
<b>- Objects:</b>  Try LOOK AT..., SPEAK TO..., TAKE..., DROP..., OPEN..., GIVE... TO..., USE... ON/WITH...<br/>
<b>- Inventory:</b>  See which items you are carrying by typing I, INV or INVENTORY.<br/>
<b>- Moving around:</b>  Press the compass buttons, or type GO NORTH, SOUTH, E, GO TO...<br/>
<b>- Shortcuts:</b>  Press the up arrow and down arrow to scroll through commands you have already typed in. Try X... as a shortcut for LOOK AT...]]></template>
  <template name="LanguageSpecificObjectTypes"></template>
  <template name="EditorVerbDefaultExpression">"You can't #verb# " + object.article + "."</template>
  <dynamictemplate name="TakeSuccessful">"You pick " + object.article + " up."</dynamictemplate>
  <dynamictemplate name="TakeUnsuccessful">"You can't take " + object.article + "."</dynamictemplate>
  <dynamictemplate name="FullInventory">WriteVerb(object, "be") + " too heavy to be taken."</dynamictemplate>
  <dynamictemplate name="MaxObjectsInInventory">"You can't carry any more items."</dynamictemplate>
  <dynamictemplate name="MaxObjectsInContainer">"You can't put more items in " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DropSuccessful">"You drop " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DropUnsuccessful">"You can't drop " + object.article + "."</dynamictemplate>
  <dynamictemplate name="AlreadyTaken">"You are already carrying " + object.article + "."</dynamictemplate>
  <dynamictemplate name="NotCarrying">"You are not carrying " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantUse">"You can't use " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantGive">"You can't give " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSpeakTo">WriteVerb(object, "say") + " nothing."</dynamictemplate>
  <dynamictemplate name="ObjectNotOpen">CapFirst(GetDisplayAlias(object)) + " " + Conjugate(object, "be") + " not open."</dynamictemplate>
  <dynamictemplate name="AlreadyOpen">WriteVerb(object, "be") + " already open."</dynamictemplate>
  <dynamictemplate name="AlreadyClosed">WriteVerb(object, "be") + " already closed."</dynamictemplate>
  <dynamictemplate name="CantOpen">"You can't open " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CantClose">"You can't close " + object.article + "."</dynamictemplate>
  <dynamictemplate name="OpenSuccessful">"You open " + object.article + "."</dynamictemplate>
  <dynamictemplate name="CloseSuccessful">"You close " + object.article + "."</dynamictemplate>
  <dynamictemplate name="AlreadyThere">WriteVerb(object, "be") + " already there."</dynamictemplate>
  <dynamictemplate name="ObjectContains">WriteVerb(object, "contain")</dynamictemplate>
  <dynamictemplate name="ContainerFull">WriteVerb(object, "be") + " full."</dynamictemplate>
  <dynamictemplate name="DisambiguateMenu">"Please choose which '" + text + "' you mean:"</dynamictemplate>
  <dynamictemplate name="UndoTurn">"Undo: " + text</dynamictemplate>
  <dynamictemplate name="DefaultAsk">WriteVerb(object, "do") + " not reply."</dynamictemplate>
  <dynamictemplate name="DefaultTell">WriteVerb(object, "do") + " not reply."</dynamictemplate>
  <dynamictemplate name="LockedObject">WriteVerb(object, "be") + " locked."</dynamictemplate>
  <dynamictemplate name="AlreadyLocked">WriteVerb(object, "be") + " already locked."</dynamictemplate>
  <dynamictemplate name="AlreadyUnlocked">WriteVerb(object, "be") + " already unlocked."</dynamictemplate>
  <dynamictemplate name="CannotLockOpen">"You cannot lock " + object.article + " when " + object.gender + " " + Conjugate(object, "be") + " open."</dynamictemplate>
  <dynamictemplate name="AlreadySwitchedOn">WriteVerb(object, "be") + " already switched on."</dynamictemplate>
  <dynamictemplate name="AlreadySwitchedOff">WriteVerb(object, "be") + " already switched off."</dynamictemplate>
  <dynamictemplate name="SwitchedOn">"You switch " + object.article + " on."</dynamictemplate>
  <dynamictemplate name="SwitchedOff">"You switch " + object.article + " off."</dynamictemplate>
  <dynamictemplate name="Eaten">"You eat " + object.article + "."</dynamictemplate>
  <dynamictemplate name="ObjectDoesNotContain">CapFirst(GetDisplayAlias(object1)) + " " + Conjugate(object1, "do") + " not contain " + GetDisplayAlias(object2) + "."</dynamictemplate>
  <dynamictemplate name="YouLooking">"You are looking " + text +"."</dynamictemplate>
  <dynamictemplate name="LookAtDarkness">"It is too dark to make anything out."</dynamictemplate>
  <dynamictemplate name="DefaultBuy">"You can't buy " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultClimb">"You can't climb " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultDrink">"You can't drink " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultEat">"You can't eat " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultGive">WriteVerb(object1, "do") + " not want " + object2.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultHit">"You can't hit " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKill">"You can't kill " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKiss">"You can't kiss " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultKnock">"You can't knock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultLick">"You can't lick " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultLie">"You can't lie on " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultListenTo">"You listen, but " + object.article + " makes no sound."</dynamictemplate>
  <dynamictemplate name="DefaultLock">"You can't lock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultMove">"You can't move " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultPull">"You can't pull " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultPush">"You can't push " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultRead">"You can't read " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSearch">"You can't search " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultShow">"You can't show " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSit">"You can't sit on " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultSmell">"You sniff, but " + object.article + " doesn't smell of much."</dynamictemplate>
  <dynamictemplate name="DefaultTaste">"You can't taste " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultThrow">"You can't throw " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTie">"You can't tie " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTouch">"You can't touch " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultTurnOn">"You can't turn " + object.article + " on."</dynamictemplate>
  <dynamictemplate name="DefaultTurnOff">"You can't turn " + object.article + " off."</dynamictemplate>
  <dynamictemplate name="DefaultTurn">"You can't turn " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUnlock">"You can't unlock " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUntie">"You can't untie " + object.article + "."</dynamictemplate>
  <dynamictemplate name="DefaultUseOn">"You can't use " + object2.article + " that way."</dynamictemplate>
  <dynamictemplate name="DefaultWear">"You can't wear " + object.article + "."</dynamictemplate>
  <delegate name="AddScript" parameters="object" type="" />
  <delegate name="AssociatedScope" parameters="" type="objectlist" />
  <game name="A Story of Salvation">
    <inherit name="theme_typewriter" />
    <gameid>cb3d9d6c-dca1-46c0-9863-05234c34f0c3</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <subtitle type="string"></subtitle>
    <author>Leonard Spitt</author>
    <showscore type="boolean">false</showscore>
    <attr name="feature_asktell" type="boolean">false</attr>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <attr name="autodescription_description" type="int">2</attr>
    <category>Horror</category>
    <difficulty>Medium</difficulty>
    <cruelty type="string"></cruelty>
    <description>An abandoned island, a derelict theme park and the crumbling ruin of a mental asylum... you are an 'urban explorer' who likes nothing better than to investigate these sorts of places.  Enjoy your visit to Salvation...</description>
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <autodescription_youarein_newline />
    <autodescription_youcansee_newline />
    <autodescription_youcango_newline />
    <autodescription_description_newline />
    <command_newline />
    <povstatusattributes type="stringdictionary" />
    <defaultbackground>LightGrey</defaultbackground>
    <setbackgroundopacity />
    <menubackground>LightGrey</menubackground>
    <defaultforeground>Black</defaultforeground>
    <backgroundopacity type="double">1</backgroundopacity>
    <defaultfontsize type="int">11</defaultfontsize>
    <defaultlinkforeground>Red</defaultlinkforeground>
    <cover>salvation front cover v2.png</cover>
    <backgroundimage type="string"></backgroundimage>
    <pov type="object">player</pov>
  </game>
  <command name="lookat">
    <pattern>look at #object#; x #object#; examine #object#; exam #object#; ex #object#</pattern>
    <script>
      if (GetBoolean(object, "hidechildren")) {
        object.hidechildren = false
      }
      if (TypeOf(object, "look") = "script") {
        do (object, "look")
      }
      else {
        lookdesc = ""
        if (HasString(object, "look")) {
          lookdesc = object.look
        }
        if (LengthOf(lookdesc) = 0) {
          lookdesc = Template("DefaultObjectDescription")
        }
        if (GetBoolean(object, "switchedon")) {
          if (HasString(object, "switchedondesc")) {
            lookdesc = lookdesc + " " + object.switchedondesc
          }
        }
        else {
          if (HasString(object, "switchedoffdesc")) {
            lookdesc = lookdesc + " " + object.switchedoffdesc
          }
        }
        isDark = CheckDarkness()
        if (isDark and not GetBoolean(object, "lightsource")) {
          lookdesc = DynamicTemplate("LookAtDarkness", object)
        }
        msg (lookdesc)
      }
      ListObjectContents (object)
    </script>
  </command>
  <command name="take">
    <pattern>take #object#; get #object#; pick up #object#</pattern>
    <multiple>
      takeList = NewObjectList()
      foreach (obj, ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov)) {
        if (obj.parent = game.pov.parent) {
          list add (takeList, obj)
        }
      }
      return (takeList)
    </multiple>
    <script>
      foreach (obj, object) {
        DoTake (obj, multiple)
      }
    </script>
  </command>
  <command name="drop">
    <pattern>drop #object#</pattern>
    <multiple>
      return (GetDirectChildren(game.pov))
    </multiple>
    <script>
      foreach (obj, object) {
        DoDrop (obj, multiple)
      }
    </script>
  </command>
  <command name="use">
    <pattern>use #object#</pattern>
    <script><![CDATA[
      if (HasScript(object, "use")) {
        do (object, "use")
      }
      else {
        if (GetBoolean(object, "use")) {
          menu = NewStringDictionary()
          candidates = NewObjectList()
          candidates = CreateUseMenuList (object)
          if (ListCount(candidates) = 0) {
            msg (Template("NoObjectsAvailable"))
          }
          else {
            GenerateMenuChoices (menu, candidates)
            game.pov.usemenuobject = object
            if (HasString(object, "usemenuprompt")) {
              menucaption = object.usemenuprompt
            }
            else {
              menucaption = Template("UseOnMenu")
            }
            ShowMenu (menucaption, menu, true) {
              if (result <> null) {
                HandleUseOn (game.pov.usemenuobject, GetObject(result))
                game.pov.usemenuobject = null
              }
            }
          }
        }
        else {
          msg (DynamicTemplate("CantUse", object))
        }
      }
    ]]></script>
  </command>
  <command name="undo">
    <pattern type="string">^undo$</pattern>
    <isundo />
    <script>
      undo
    </script>
  </command>
  <command name="inventory">
    <pattern type="string">^i$|^inv$|^inventory$</pattern>
    <script>
      list = FormatObjectList(Template("CarryingListHeader"), game.pov, Template("And"), ".")
      if (list = "") {
        msg (Template("NotCarryingAnything"))
      }
      else {
        msg (list)
      }
    </script>
  </command>
  <command name="look">
    <pattern type="string">^look$|^l$</pattern>
    <script>
      ShowRoomDescription
    </script>
  </command>
  <command name="lookdir">
    <pattern type="string"><![CDATA[^look (?<exit>north|east|south|west|northeast|northwest|southeast|southwest|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <script><![CDATA[
      if (HasScript(exit, "look")) {
        do (exit, "look")
      }
      else {
        message = DynamicTemplate("YouLooking",exit.alias)
        if (HasString(exit, "look")) {
          if (exit.look <> "") {
            message = exit.look
          }
        }
        if (exit.locked) {
          if (HasString(exit,"lockmessage")) {
            lockmessage = exit.lockmessage
          }
          else {
            lockmessage = Template("LockedExit")
          }
          msg (message+" "+lockmessage)
        }
        else {
          msg (message)
        }
      }
    ]]></script>
  </command>
  <command name="quit">
    <pattern type="string">^quit$</pattern>
    <script>
      request (Quit, "")
    </script>
  </command>
  <command name="go">
    <pattern type="string"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <unresolved>You can't go there.</unresolved>
    <script>
      if (exit.visible) {
        if (exit.locked) {
          msg (exit.lockmessage)
        }
        else if (exit.runscript) {
          if (HasScript(exit, "script")) {
            do (exit, "script")
          }
        }
        else if (exit.lookonly) {
          msg ("You can't go there.")
        }
        else {
          game.pov.parent = exit.to
        }
      }
      else {
        msg ("You can't go there.")
      }
    </script>
  </command>
  <command name="open">
    <pattern>open #object#</pattern>
    <script>
      TryOpenClose (true, object)
    </script>
  </command>
  <command name="close">
    <pattern>close #object#</pattern>
    <script>
      TryOpenClose (false, object)
    </script>
  </command>
  <command name="put">
    <pattern type="string"><![CDATA[^put (?<object1>.*) (on|in) (?<object2>.*)$]]></pattern>
    <script>
      // put object1 in/on object 2
      if (object1.parent = object2) {
        msg (DynamicTemplate("AlreadyThere", object1))
      }
      else if (not ListContains(ScopeInventory(), object1)) {
        msg (DynamicTemplate("NotCarrying", object1))
      }
      else if (not ListContains(ScopeReachable(), object1)) {
        msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object1)))
      }
      else if (not ListContains(ScopeReachable(), object2)) {
        msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object2)))
      }
      else if (not object2.container) {
        msg (Template("CannotDoThat"))
      }
      else if (not object2.isopen) {
        msg (DynamicTemplate("ObjectNotOpen", object2))
      }
      else {
        if (GetBoolean(object2, "hidechildren")) {
          object2.hidechildren = false
        }
        if (HasDelegateImplementation(object2, "addscript")) {
          rundelegate (object2, "addscript", object1)
        }
        else {
          object1.parent = object2
          msg (Template("Done"))
        }
      }
      // must be carrying object1
      // object1 must not be inside a closed container
      // object2 must not be inside a closed container
      // object2 must be an open container or surface
    </script>
  </command>
  <command name="removefrom">
    <pattern type="string"><![CDATA[^remove (?<object1>.*) from (?<object2>.*)$]]></pattern>
    <script>
      // remove object1 from object2
      // if object2 does indeed contain object1, this is a synonym for "take object1"
      if (not Contains(object2, object1)) {
        msg (DynamicTemplate("ObjectDoesNotContain", object2, object1))
      }
      else {
        DoTake (object1, false)
      }
    </script>
  </command>
  <command name="givesingle">
    <pattern>give #object#</pattern>
    <script><![CDATA[
      if (HasScript(object, "givesingle")) {
        do (object, "givesingle")
      }
      else {
        if (GetBoolean(object, "givesingle")) {
          menu = NewStringDictionary()
          candidates = NewObjectList()
          candidates = CreateGiveMenuList (object)
          if (ListCount(candidates) = 0) {
            msg (Template("NoObjectsAvailable"))
          }
          else {
            GenerateMenuChoices (menu, candidates)
            game.pov.givemenuobject = object
            if (HasString(object, "givemenuprompt")) {
              menucaption = object.givemenuprompt
            }
            else {
              menucaption = Template("GiveToMenu")
            }
            ShowMenu (menucaption, menu, true) {
              if (result <> null) {
                HandleGiveTo (game.pov.givemenuobject, GetObject(result))
                game.pov.givemenuobject = null
              }
            }
          }
        }
        else {
          msg (DynamicTemplate("CantGive", object))
        }
      }
    ]]></script>
  </command>
  <command name="give">
    <pattern type="string"><![CDATA[^give (?<object1>.*) to (?<object2>.*)$]]></pattern>
    <script>
      HandleGiveTo (object1, object2)
    </script>
  </command>
  <command name="useon">
    <pattern type="string"><![CDATA[^use (?<object1>.*) (on|with) (?<object2>.*)$]]></pattern>
    <script>
      HandleUseOn (object1, object2)
    </script>
  </command>
  <command name="ask">
    <pattern type="string"><![CDATA[^ask (?<object>.*) about (?<text>.*)$]]></pattern>
    <script>
      DoAskTell (object, text, "ask", "askdefault", "DefaultAsk")
    </script>
  </command>
  <command name="tell">
    <pattern type="string"><![CDATA[^tell (?<object>.*) about (?<text>.*)$]]></pattern>
    <script>
      DoAskTell (object, text, "tell", "telldefault", "DefaultTell")
    </script>
  </command>
  <command name="oops">
    <pattern type="string"><![CDATA[^oops (?<text>.*)$]]></pattern>
    <isoops />
    <script><![CDATA[
      hasoops = false
      if (HasAttribute(game, "unresolvedcommand")) {
        if (game.unresolvedcommand <> null) {
          hasoops = true
        }
      }
      if (not hasoops) {
        msg (Template("DefaultOops"))
      }
      else {
        dictionary remove (game.unresolvedcommandvarlist, game.unresolvedcommandkey)
        dictionary add (game.unresolvedcommandvarlist, game.unresolvedcommandkey, text)
        HandleSingleCommandPattern ("", game.unresolvedcommand, game.unresolvedcommandvarlist)
      }
    ]]></script>
  </command>
  <verb name="speak">
    <pattern>speak to #object#; speak #object#; talk to #object#; talk #object#</pattern>
    <property>speak</property>
    <defaulttemplate>DefaultSpeakTo</defaulttemplate>
  </verb>
  <verb name="buy">
    <pattern>buy #object#</pattern>
    <property>buy</property>
    <defaulttemplate>DefaultBuy</defaulttemplate>
  </verb>
  <verb name="climb">
    <pattern>climb #object#</pattern>
    <property>climb</property>
    <defaulttemplate>DefaultClimb</defaulttemplate>
  </verb>
  <verb name="drink">
    <pattern>drink #object#</pattern>
    <property>drink</property>
    <defaulttemplate>DefaultDrink</defaulttemplate>
  </verb>
  <verb name="eat">
    <pattern>eat #object#</pattern>
    <property>eat</property>
    <defaulttemplate>DefaultEat</defaulttemplate>
  </verb>
  <verb name="hit">
    <pattern>hit #object#</pattern>
    <property>hit</property>
    <defaulttemplate>DefaultHit</defaulttemplate>
  </verb>
  <verb name="kill">
    <pattern>kill #object#</pattern>
    <property>kill</property>
    <defaulttemplate>DefaultKill</defaulttemplate>
  </verb>
  <verb name="kiss">
    <pattern>kiss #object#</pattern>
    <property>kiss</property>
    <defaulttemplate>DefaultKiss</defaulttemplate>
  </verb>
  <verb name="knock">
    <pattern>knock #object#</pattern>
    <property>knock</property>
    <defaulttemplate>DefaultKnock</defaulttemplate>
  </verb>
  <verb name="lick">
    <pattern>lick #object#</pattern>
    <property>lick</property>
    <defaulttemplate>DefaultLick</defaulttemplate>
  </verb>
  <verb name="lieon">
    <pattern>lie on #object#; lie upon #object#; lie down on #object#; lie down upon #object#</pattern>
    <property>lie</property>
    <defaulttemplate>DefaultLie</defaulttemplate>
  </verb>
  <verb name="listento">
    <pattern>listen to #object#</pattern>
    <property>listen</property>
    <defaulttemplate>DefaultListenTo</defaulttemplate>
  </verb>
  <verb name="lock">
    <pattern>lock #object#</pattern>
    <property>lock</property>
    <defaulttemplate>DefaultLock</defaulttemplate>
  </verb>
  <verb name="move">
    <pattern>move #object#</pattern>
    <property>move</property>
    <defaulttemplate>DefaultMove</defaulttemplate>
  </verb>
  <verb name="pull">
    <pattern>pull #object#</pattern>
    <property>pull</property>
    <defaulttemplate>DefaultPull</defaulttemplate>
  </verb>
  <verb name="push">
    <pattern>push #object#</pattern>
    <property>push</property>
    <defaulttemplate>DefaultPush</defaulttemplate>
  </verb>
  <verb name="read">
    <pattern>read #object#</pattern>
    <property>read</property>
    <defaulttemplate>DefaultRead</defaulttemplate>
  </verb>
  <verb name="search">
    <pattern>search #object#</pattern>
    <property>search</property>
    <defaulttemplate>DefaultSearch</defaulttemplate>
  </verb>
  <verb name="show">
    <pattern>show #object#</pattern>
    <property>show</property>
    <defaulttemplate>DefaultShow</defaulttemplate>
  </verb>
  <verb name="siton">
    <pattern>sit on #object#; sit upon #object#; sit down on #object#; sit down upon #object#</pattern>
    <property>sit</property>
    <defaulttemplate>DefaultSit</defaulttemplate>
  </verb>
  <verb name="smell">
    <pattern>smell #object#; sniff #object#</pattern>
    <property>smell</property>
    <defaulttemplate>DefaultSmell</defaulttemplate>
  </verb>
  <verb name="taste">
    <pattern>taste #object#</pattern>
    <property>taste</property>
    <defaulttemplate>DefaultTaste</defaulttemplate>
  </verb>
  <verb name="throw">
    <pattern>throw #object#</pattern>
    <property>throw</property>
    <defaulttemplate>DefaultThrow</defaulttemplate>
  </verb>
  <verb name="tie">
    <pattern>tie #object#</pattern>
    <property>tie</property>
    <defaulttemplate>DefaultTie</defaulttemplate>
  </verb>
  <verb name="touch">
    <pattern>touch #object#</pattern>
    <property>touch</property>
    <defaulttemplate>DefaultTouch</defaulttemplate>
  </verb>
  <verb name="turnon">
    <pattern>turn on #object#; turn #object# on; switch on #object#; switch #object# on</pattern>
    <property>turnon</property>
    <defaulttemplate>DefaultTurnOn</defaulttemplate>
  </verb>
  <verb name="turnoff">
    <pattern>turn off #object#; turn #object# off; switch off #object#; switch #object# off</pattern>
    <property>turnoff</property>
    <defaulttemplate>DefaultTurnOff</defaulttemplate>
  </verb>
  <verb name="turn">
    <pattern>turn #object#</pattern>
    <property>turn</property>
    <defaulttemplate>DefaultTurn</defaulttemplate>
  </verb>
  <verb name="unlock">
    <pattern>unlock #object#</pattern>
    <property>unlock</property>
    <defaulttemplate>DefaultUnlock</defaulttemplate>
  </verb>
  <verb name="untie">
    <pattern>untie #object#</pattern>
    <property>untie</property>
    <defaulttemplate>DefaultUntie</defaulttemplate>
  </verb>
  <verb name="wear">
    <pattern>wear #object#</pattern>
    <property>wear</property>
    <defaulttemplate>DefaultWear</defaulttemplate>
  </verb>
  <command name="listen">
    <pattern type="string">^listen$</pattern>
    <script>
      msg (Template("DefaultListen"))
    </script>
  </command>
  <command name="jump">
    <pattern type="string">^jump$</pattern>
    <script>
      msg (Template("DefaultJump"))
    </script>
  </command>
  <command name="sit">
    <pattern type="string">^sit$|^sit down$</pattern>
    <script>
      msg (Template("DefaultSitDown"))
    </script>
  </command>
  <command name="lie">
    <pattern type="string">^lie$|^lie down$</pattern>
    <script>
      msg (Template("DefaultLieDown"))
    </script>
  </command>
  <command name="sleep">
    <pattern type="string">^sleep$|^rest$</pattern>
    <script>
      msg (Template("DefaultSleep"))
    </script>
  </command>
  <command name="wait">
    <pattern type="string">^wait$|^z$</pattern>
    <script>
      msg (Template("DefaultWait"))
    </script>
  </command>
  <command name="xyzzy">
    <pattern type="string">^xyzzy$</pattern>
    <script>
      msg (Template("DefaultXyzzy"))
    </script>
  </command>
  <command name="help">
    <pattern type="string">^help$|^\?$</pattern>
    <script>
      msg (Template("DefaultHelp"))
    </script>
  </command>
  <command name="save">
    <pattern type="string">^save$</pattern>
    <script>
      request (RequestSave, "")
    </script>
  </command>
  <object name="jetty">
    <alias>jetty</alias>
    <descprefix>You are standing on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "twilight")) {
        msg ("<br/>The wood groans ominously beneath your feet.<br/><br/>Behind you, to the north, the island lurks like a deathly shadow.<br/><br/>To the south, the fog is thicker than ever - will the ferry even be able to reach the island in this weather?<br/>")
      }
      else {
        msg ("<br/>The wood groans ominously beneath your feet.<br/><br/>To the north the island of Salvation looms above you - you can make out the crumbling facades and faded signs of the shopfronts along the promenade.  To get to the island you will need to proceed through the gift shop - the smiling face of a pink rabbit painted on the side of the little hut seems strangely sinister in the sickly daylight.<br/><br/>To the south, the still and silent sea is visible for a few metres before the cloying fog devours it, as though the island's perimeter is in fact the end of the world.<br/>")
      }
    ]]></description>
    <firstenter type="script">
    </firstenter>
    <beforefirstenter type="script"><![CDATA[
      msg ("The island emerges ominously from the fog, the pier jutting towards you like an accusing finger (or a beckoning one?)  The only sounds are the soft creak of the small ferry bobbing on the water, and the grunts of the ferryman as he tugs on the oars - but you can't help thinking that it is the island itself that is drawing you closer, as though exerting some kind of sinister gravitational pull...<br/><br/><br/>Welcome to Salvation Island.  The music for this interactive text adventure is provided with kind permission by the talented composers at Broken Notes - please visit their site at www.broken-notes.com.  Additional sound effects are provided with kind permission from Nino Scuderi and SoundEffectsFactory - make sure you check out their YouTube channels.<br/><br/><br/>This story is dedicated to Faye and Natalie, my twin sisters, with thanks for their eternal support and enthusiasm for my horror projects!<br/><br/><br/>")
      play sound ("crimson paintings.mp3", false, true)
      wait {
        msg ("The island has certainly had you under its spell ever since you read about it online: formerly home to one of Britain's leading mental institutions, now a desolate and mist-shrouded ruin.  After its population of asylum workers and inmates was wiped out by a Nazi bombing raid during World War II, it was left abandoned for over a decade.  A strange twist of fate saw a population of rabbits grow from the ashes of the bombing to spread rampantly across the island, unchecked by predators and human interference and amply nourished by Salvation's dense woodland.  Many claim that it was these cute and inquisitive creatures that charmed Edward Hardacre, a wealthy entrepreneur, into buying the island to develop it as a seaside resort.<br/><br/>Throughout the sixties and seventies the island was a successful attraction, tourists flocking from the nearby Devonshire mainland to visit 'Bunny Island', and also to rub the gleaming foot of the bronze statue that still sits atop the hill in the island's centre.  Saint Drogo is the patron saint of the healing of mental illness - legend had it that to rub his foot was to guarantee good health and fortune.  Hardacre had also converted the bombed-out ruins of the asylum into a war museum, focusing on psychiatric treatment and the plight of those suffering from mental health issues during the War, and had even built a theme park on the island's south west coast.  You can already discern the outline of the ferris wheel, like a huge skeletal creature outlined against the stony sky.<br/><br/>But gradually the number of visitors had dwindled, and so had Hardacre's fortune.  Salvation's death-knell sounded in the late eighties when the proprietor himself mysteriously vanished - many believe that the unmarried Hardacre had preferred to throw himself into the bay rather than see his dreams crumble around him.  But his disappearance did not abate the island's decay, and now in the first decade of the new millennium the only occasional visitors are curious explorers such as you, and the surly ferryman of course, who still runs daily trips to the island for a frankly extortionate fee.<br/>")
        wait {
          msg ("The ferryman grunts again as he steps off the craft and ties it to one of the jetty's wooden posts.  \"Don't forget - be back 'ere at six or you'll be spendin' the night,\" he mutters as you disembark.  Without another word, he sets off again, and he and his vessel are soon swallowed up by the mist.<br/>")
        }
      }
    ]]></beforefirstenter>
    <enter type="script">
      if (GetBoolean(time of day, "twilight")) {
        SetObjectFlagOff (time of day, "twilight")
        SetObjectFlagOn (time of day, "nightfall")
      }
    </enter>
    <exit alias="north" to="gift shop">
      <inherit name="northdirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "tempnight")) {
          msg ("You do not want to miss your ferry.")
        }
        else {
          MoveObject (player, gift shop)
        }
      </script>
    </exit>
    <object name="pier">
      <scenery />
      <look>The pier is old and rotten and you worry slightly that it may collapse beneath you if you linger for too long.</look>
      <alt type="stringlist">
        <value>ground</value>
        <value>floor</value>
        <value>jetty</value>
        <value>wood</value>
      </alt>
    </object>
    <object name="gift shop1">
      <alias>gift shop</alias>
      <scenery />
      <look>The gift shop is a small wooden shack on the shore.  The jetty runs up to it, and then a wooden gate bars your progress, diverting you inside - presumably visitors used to have to pass through the shop and pay a fee in order to enter the island.</look>
    </object>
    <object name="rabbit">
      <scenery />
      <look>The faded design of a pink rabbit on the side of the gift shop was presumably supposed to set the tone for a jolly day out, but its expression seems odd - its smile somehow menacing, its eyes drawn as two crosses making it appear as though it has been blinded.</look>
    </object>
    <object name="ferris wheel">
      <scenery />
      <look>The outline of the ferris wheel is visible to the west, like a weird fungus that has grown out of the island during its long period of neglect.</look>
    </object>
    <object name="sky">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="mist">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <look>The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.</look>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
    </object>
    <object name="weapon">
      <visible type="boolean">false</visible>
    </object>
    <object name="sea">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <look>The ocean is quickly swallowed up by the mist.</look>
      <scenery />
    </object>
    <object name="player">
      <feature_player />
      <drop type="boolean">false</drop>
      <visible type="boolean">false</visible>
      <attr name="pov_look" type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("You are a tall, slim male in your early thirties.  Your T-shirt and jogging bottoms have been soaked by the rain and cling to your skin.  You are still wearing your watch and bag.")
        }
        else {
          msg ("You suppose you look fairly nondescript: a tall, slim male in his early thirties dressed in a comfortable T-shirt and jogging bottoms.  The bag slung over your shoulder is a comforting weight against your left side, as is your trusty watch against your wrist.")
        }
      </attr>
      <object name="bag">
        <inherit name="container_closed" />
        <visible />
        <look>The cheap imitation leather satchel has been on countless adventures with you.  It contains only the bare necessities of your visit so as not to weigh you down or ruin the sense of isolation.</look>
        <drop type="boolean">false</drop>
        <dropmsg>That would be silly - you'd only need to buy a new one.</dropmsg>
        <feature_container />
        <openmsg>You unzip your bag.</openmsg>
        <closemsg>You zip your bag shut.</closemsg>
        <listchildren />
        <listchildrenprefix>It contains</listchildrenprefix>
        <hidechildren />
        <take type="boolean">false</take>
        <alt type="stringlist">
          <value>satchel</value>
        </alt>
        <unzip type="script">
          if (bag.isopen) {
            msg ("Your bag is already open.")
          }
          else {
            HelperOpenObject (bag)
            msg ("You unzip your bag.")
          }
        </unzip>
        <zip type="script">
          if (not bag.isopen) {
            msg ("Your bag is already zipped shut.")
          }
          else {
            HelperCloseObject (bag)
            msg ("You zip your bag shut.")
          }
        </zip>
        <lookin type="script">
          if (not bag.isopen) {
            msg ("Your bag is zipped shut.")
          }
          else {
            msg ("Your bag contains various useful items.")
          }
        </lookin>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Open</value>
          <value>Close</value>
        </displayverbs>
        <object name="first aid kit">
          <look>The small plastic box contains a roll of bandages, some plasters, and a few safety pins - hardly enough to splint a broken leg but useful if you manage to cut yourself.</look>
          <takemsg>You don't need the first aid kit at the moment.</takemsg>
          <drop type="boolean">false</drop>
          <dropmsg>You might need that later - better safe than sorry.</dropmsg>
          <attr name="feature_switchable" type="boolean">false</attr>
        </object>
        <object name="mobile phone">
          <takemsg>You don't need to make any calls at the moment.  You think about Sarah... has it been two years already?</takemsg>
          <drop type="boolean">false</drop>
          <dropmsg>That would be a pretty stupid thing to do.</dropmsg>
          <attr name="feature_switchable" type="boolean">false</attr>
          <scenery type="boolean">false</scenery>
          <look type="script">
            if (GetBoolean(time of day, "nightfall4")) {
              msg ("The phone doesn't seem to be able to get a signal on the island.  You curse at your stupidity in relying on it.")
            }
            else {
              msg ("The phone is an old Blackberry - nothing fancy but it does the job.  You always take it with you when exploring, just in case.")
            }
          </look>
          <take type="script">
            if (GetBoolean(time of day, "impending doom")) {
              msg ("There's no time for making calls now - you just need to get out of this place.  Once you've caught the ferry, and you're back on dry land...")
            }
            else if (GetBoolean(time of day, "twilight")) {
              msg ("There's no time for making calls now - you just need to get out of this place.  Once you've caught the ferry, and you're back on dry land...")
            }
            else if (GetBoolean(time of day, "nightfall3")) {
              msg ("There's no time for making calls now - you just need to get out of this place.  Once you've caught the ferry, and you're back on dry land...")
            }
            else if (GetBoolean(time of day, "nightfall4")) {
              msg ("You take out the device and wave it in the air... but still no signal to speak of.  Aghast, you put it back into the bag.")
            }
            else if (GetBoolean(time of day, "nightfall35")) {
              msg ("You take out the device and wave it in the air... but still no signal to speak of.  Aghast, you put it back into the bag.")
            }
            else {
              msg ("You don't need to make any calls right now.  You think about Sarah... has it been two years already?")
            }
          </take>
        </object>
        <object name="torch">
          <takemsg>You do not need your torch right now.</takemsg>
          <drop type="boolean">false</drop>
          <dropmsg>That would be a pretty stupid thing to do.</dropmsg>
          <look type="script">
            if (GetBoolean(torch, "nowon")) {
              msg ("Your torch is a slim, lightweight model with a little handle for recharging the batteries.  It is currently switched on.")
            }
            else {
              msg ("Your torch is a slim, lightweight model with a little handle for recharging the batteries.  It is currently switched off.")
            }
          </look>
          <turnon type="script">
            if (GetBoolean(torch, "nowon")) {
              msg ("Your torch is already switched on.")
            }
            else {
              msg ("You do not need your torch to see in this area.")
            }
          </turnon>
          <turnoff type="script">
            if (GetBoolean(torch, "nowon")) {
              msg ("You won't be able to see if you switch it off.")
            }
            else {
              msg ("Your torch is already switched off.")
            }
          </turnoff>
        </object>
      </object>
      <object name="watch">
        <visible />
        <scenery />
        <drop type="boolean">false</drop>
        <dropmsg>That would be a silly thing to do.</dropmsg>
        <alt type="stringlist">
          <value>time</value>
          <value>wristwatch</value>
        </alt>
        <look type="script">
          if (GetBoolean(time of day, "tempnight")) {
            msg ("Your ferry should be here by now.")
          }
          else if (GetBoolean(time of day, "nightfall4")) {
            msg ("Your watch reminds you that it is the middle of the night.  You should be safely back in bed by now, not stuck in this hellhole.")
          }
          else if (GetBoolean(time of day, "twilight")) {
            msg ("It is time to head back to catch your ferry.")
          }
          else {
            msg ("It isn't time to catch your ferry yet.")
          }
        </look>
      </object>
      <object name="clothes">
        <alt type="stringlist">
          <value>shoes</value>
          <value>clothing</value>
          <value>jogging bottoms</value>
          <value>trainers</value>
          <value>T-shirt</value>
          <value>socks</value>
          <value>jogging pants</value>
          <value>tracksuit pants</value>
          <value>tracksuit bottoms</value>
          <value>trousers</value>
          <value>pockets</value>
        </alt>
        <scenery />
        <look>Your clothes are pretty basic - a comfortable T-shirt you bought at a Moldy Peaches gig, jogging bottoms, and trainers worn down by years of solitary 'urban exploration' outings.</look>
        <drop type="boolean">false</drop>
        <dropmsg>Although the rabbits probably wouldn't mind, taking your clothes off seems a rather odd thing to do.</dropmsg>
        <takeoff>Although the rabbits probably wouldn't mind, taking your clothes off seems a rather odd thing to do.</takeoff>
        <remove>Although the rabbits probably wouldn't mind, taking your clothes off seems a rather odd thing to do.</remove>
      </object>
    </object>
    <object name="gift shop door2">
      <scenery />
      <alias>gift shop door</alias>
      <look>The door to the gift shop has been pulled off its hinges and is nowhere to be seen.</look>
    </object>
    <object name="gate1">
      <inherit name="container_open" />
      <alias>gate</alias>
      <scenery />
      <look>The wooden gate would be easy to climb over, but you may as well just pass through the gift shop instead.</look>
      <climb>The wooden gate would be easy to climb over, but you may as well just pass through the gift shop instead.</climb>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The gate is locked - you could climb over it easily, but you may as well just pass through the gift shop.</openmsg>
      <closemsg>The gate is already closed.</closemsg>
      <onopen type="script">
        HelperCloseObject (gate1)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="time of day">
      <visible type="boolean">false</visible>
    </object>
    <object name="rain">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="gift shop">
    <description><![CDATA[<br/>The little building has been ruined by vandalism and neglect.  Broken glass litters the mouldy carpet, and crude graffiti has been sprayed all over the walls.<br/><br/>Very little of value has been left behind, but a single keyring dangling from a stand in the corner seems particularly sad, somehow.<br/><br/>Through the northern exit is the island of Salvation, while to the south, the pier leads away into the mist.<br/>]]></description>
    <firstenter type="script">
      SetObjectFlagOn (time of day, "day")
    </firstenter>
    <exit alias="south" to="jetty">
      <inherit name="southdirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("There's no point going back to that dead end - you'll freeze to death if you try to spend the night outside in this rain.")
        }
        else {
          MoveObject (player, jetty)
        }
      </script>
    </exit>
    <object name="keyring">
      <drop type="boolean">false</drop>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <look>Looking more closely at the keyring, you can see that it bears the name 'Cheryl'.  You wonder briefly what your own daughter would have been called... but then dismiss the painful thought from your mind.</look>
      <scenery type="boolean">false</scenery>
      <take type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The lonely keyring won't be much help with your current predicament.")
        }
        else {
          msg ("You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.")
        }
      </take>
    </object>
    <object name="carpet">
      <look>The carpet is threadbare and festering, and contributes to the stench of mould in the room.</look>
      <scenery />
      <alt type="stringlist">
        <value>floor</value>
        <value>ground</value>
      </alt>
    </object>
    <object name="walls">
      <look>The walls are grubby and covered with graffiti, some of it cryptic and much of it obscene.</look>
      <scenery />
    </object>
    <object name="glass">
      <look>Broken glass is strewn across the floor.  Some of it has come from the broken windows, and some from the smashed display cabinet at the side of the room, near the till.</look>
      <scenery type="boolean">false</scenery>
      <takemsg>You'll cut yourself if you try to carry shards of broken glass around.</takemsg>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <alt type="stringlist">
        <value>fragments</value>
      </alt>
    </object>
    <object name="till">
      <inherit name="container_open" />
      <look>The till is lying on the floor near the display cabinet, hanging open and empty, any takings long since stolen.</look>
      <takemsg>The till is too heavy for you to lift.</takemsg>
      <feature_container />
      <isopen />
      <close />
      <open />
      <openmsg>The till is already open.</openmsg>
      <closemsg>You don't see the need to mess around with it - it's clearly empty.</closemsg>
      <onclose type="script">
        HelperOpenObject (till)
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="cabinet">
      <scenery />
      <look>The display cabinet's glass has been shattered, presumably to enable its contents to be stolen - it is now a useless and abandoned piece of furniture.</look>
      <alt type="stringlist">
        <value>display cabinet</value>
      </alt>
    </object>
    <exit alias="north" to="prom1">
      <inherit name="northdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The oily rain continues to teem down outside... you briefly consider spending the night here in the gift shop, curled up on the mouldy carpet.  But it will be freezing, with the wind and rain coming through the broken doors and windows...  Maybe you ought to sleep in the asylum?  No.  You dispel that awful thought from your mind immediately.  But you have to do something... perhaps you can find a way into the old hotel, or one of the other buildings?<br/><br/>Gritting your teeth against the cold, and the fear gnawing at the pit of your stomach like a peculiar hunger, you step outside once again onto the promenade.<br/>")
          MoveObject (player, prom1)
        }
        else {
          MoveObject (player, prom1)
        }
      ]]></script>
    </exit>
    <object name="stand">
      <scenery />
      <look>Presumably the stand used to be covered in cheap souvenirs, but now only one keyring remains hanging there.</look>
      <takemsg>The stand is too heavy for you to carry.</takemsg>
    </object>
    <object name="gift shop door3">
      <inherit name="container_open" />
      <alias>gift shop door</alias>
      <scenery />
      <look>The door to the south is missing, and you can see the jetty leading away into the mist.  The door to the north is hanging open, and leads onwards into the island.</look>
      <feature_container />
      <isopen />
      <openmsg>The door to the north is already open.</openmsg>
      <closemsg>There's no point closing the door - you need to head north in a minute.</closemsg>
      <onclose type="script">
        HelperOpenObject (gift shop door3)
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="windows2">
      <alias>windows</alias>
      <look>The gift shop's windows have all been smashed, and broken glass litters the floor.</look>
      <scenery />
    </object>
    <object name="pier1">
      <alias>pier</alias>
      <scenery />
      <look>Through the empty doorframe, you can see the rotting pier disappearing into the mist to the south.</look>
    </object>
    <object name="graffiti">
      <alt type="stringlist">
        <value>spraypaint</value>
      </alt>
      <look>This is hardly the stuff of professional New York taggers, to put it mildly.</look>
      <scenery />
    </object>
  </object>
  <verb>
    <property>breathe</property>
    <pattern>breathe</pattern>
    <defaultexpression>"You can't breathe " + object.article + "."</defaultexpression>
  </verb>
  <command name="say1">
    <pattern>say #text#</pattern>
    <script>
      msg ("You say \"" + text + "\", but nobody replies.")
    </script>
  </command>
  <command name="shout1">
    <pattern>shout #text#</pattern>
    <script>
      msg ("You shout \"" + text + "\", but hear only a haunting echo in reply.")
    </script>
  </command>
  <command name="yell1">
    <pattern>yell #text#</pattern>
    <script>
      msg ("You yell \"" + text + "\", but hear only a haunting echo in reply.")
    </script>
  </command>
  <command name="scream1">
    <pattern>scream #text#</pattern>
    <script>
      msg ("You scream \"" + text + "\", but hear only a haunting echo in reply.")
    </script>
  </command>
  <object name="prom1">
    <alias>promenade</alias>
    <descprefix>You are on</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("No longer do you feel a sense of melancholic isolation; instead, with the absolute darkness surrounding you, you feel a strong sensation that something evil is lurking just outside the beam of your torch.  Your frayed nerves turn even the rabbits into visions of terror, and you begin to dread every sight of them - the fact that there seem to be more than there were before only adds to your sense of vague horror.  They come out of the woods at night... almost as if they are deliberately massing, like an audience taking their seats.<br/><br/>The rain continues to hammer down around you.<br/><br/>To the south is the gift shop.<br/><br/>To the north is the Salvation Island Resort Hotel.<br/><br/>The promenade continues to the east and west.<br/>")
      }
      else {
        msg ("The silence is absolute - even the seagulls seem to have abandoned this place.  The rabbits haven't though - you can see several of them lying around on the ground, and a couple hop over to you inquisitively, presumably wondering if you have any food.<br/><br/>To the south is the gift shop.<br/><br/>To the north is a building whose faded sign announces it as the Salvation Island Resort Hotel.<br/><br/>The promenade continues to the east and west.<br/>")
      }
    ]]></description>
    <beforefirstenter type="script"><![CDATA[
      msg ("You exit the gift shop and gaze along the promenade at the rows of rotting facades and derelict buildings.  Detritus is strewn across the ground: old bits of packaging and drinks cartons, popcorn and sweet wrappers, blown along by the breeze that seems to have suddenly picked up.  You shiver, reminding yourself how exciting the asylum will be, and hoping you have enough time to explore it properly before it's time to head back to catch your ferry.<br/><br/>The asylum is on the north side of Salvation, so you will have to find a way past the buildings to get there - hopefully via the hill in the centre of the island so that you can take a look at the statue on the way.<br/>")
    ]]></beforefirstenter>
    <object name="hotel">
      <scenery />
      <look>The hotel looks just as dilapidated and empty as all of the other buildings, its windows covered by metal grilles.</look>
    </object>
    <object name="gift shop2">
      <alias>gift shop</alias>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The gift shop leads back to the jetty... and the bottomless dark of the ocean.")
        }
        else {
          msg ("You'll have to go through the gift shop again to get back to the jetty when you're ready to leave.")
        }
      </look>
    </object>
    <object name="ferris wheel1">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the ferris wheel... somehow the knowledge that it is there, lurking behind the darkness, is unsettling.")
        }
        else {
          msg ("The outline of the ferris wheel is visible to the west, like a weird fungus that has grown out of the island during its long period of neglect.")
        }
      </look>
    </object>
    <object name="rabbits">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
    </object>
    <object name="ground">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="sky1">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="sign">
      <scenery />
      <look>The hotel sign reads 'Salvation Island Resort Hotel', and hangs over the main entrance door.</look>
    </object>
    <exit alias="south" to="gift shop">
      <inherit name="southdirection" />
      <locked type="boolean">false</locked>
      <lockmessage>It isn't time for your ferry yet - and you feel as though there is more to see before you leave.</lockmessage>
      <visible />
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("You hurry through the gift shop, glancing at your watch to see that there are just minutes to spare before the ferry is due to return to collect you.  Your mind is still reeling from what you saw in the asylum... you just need to make it back to shore and then head immediately to a police station.")
          MoveObject (player, jetty)
          SetObjectFlagOn (time of day, "tempnight")
          stop sound
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("There is no point going back that way - the gift shop isn't warm and dry enough for you to spend the night.")
        }
        else {
          msg ("It isn't time for your ferry yet - and you feel as though there is more to see before you leave.")
        }
      </script>
    </exit>
    <exit alias="north" to="hotel foyer">
      <inherit name="northdirection" />
      <lockmessage>The door to the hotel is locked.</lockmessage>
      <locked />
      <visible />
    </exit>
    <object name="gift shop door">
      <inherit name="container_open" />
      <visible />
      <scenery />
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <feature_container />
      <isopen />
      <openmsg>The door is already open.</openmsg>
      <closemsg>There's no point closing it - you'll be heading back that way later.</closemsg>
      <pull>The door is already hanging open.</pull>
      <push>You close the door, but it just creaks open again on broken hinges.</push>
      <knockon>That seems a little pointless.</knockon>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The door to the gift shop hangs open.")
        }
        else {
          msg ("The door to the gift shop hangs open - you look through into the empty, vandalised space inside and feel a wave of sadness wash over you.")
        }
      </look>
      <onclose type="script">
        HelperOpenObject (gift shop door)
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="hotel door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look>The wooden door is decorated with carvings around its edges, and looks like a sturdy barrier.</look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <pull>The door will not open - it is securely locked.</pull>
      <push>The door will not open - it is securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The hotel door is locked.</openmsg>
      <closemsg>The hotel door is already closed.</closemsg>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <nokeymessage>You don't have a key for the hotel door.</nokeymessage>
      <alt type="stringlist">
        <value>carvings</value>
      </alt>
      <onopen type="script">
        HelperCloseObject (hotel door)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="east" to="prom2">
      <inherit name="eastdirection" />
    </exit>
    <object name="mist1">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="grilles">
      <inherit name="plural" />
      <scenery />
      <look>Metal sheets have been nailed across the windows to prevent any access by vandals, squatters, or even curious explorers such as you.</look>
      <alt type="stringlist">
        <value>windows</value>
        <value>boards</value>
        <value>boarding</value>
        <value>sheeting</value>
        <value>metal</value>
      </alt>
      <pull>You can't reach the windows.</pull>
      <break>You can't reach the windows.</break>
      <kick>You can't reach the windows.</kick>
      <takemsg>You can't reach the windows.</takemsg>
    </object>
    <exit alias="west" to="prom4">
      <inherit name="westdirection" />
    </exit>
    <object name="litter">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="sea1">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="promenade">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade stretches from east to west.")
        }
        else {
          msg ("The abandoned promenade stretches from east to west.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="rabbitsX0">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="rain1">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
    <object name="handle2">
      <alias>handle</alias>
      <scenery />
      <look>The door has no visible handle or keyhole from this side.</look>
      <alt type="stringlist">
        <value>lock</value>
        <value>keyhole</value>
      </alt>
    </object>
  </object>
  <verb>
    <property>kick</property>
    <pattern>kick</pattern>
    <defaultexpression>"You can't kick " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>hurt</property>
    <pattern>hurt</pattern>
    <defaultexpression>"You can't hurt " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>stroke</property>
    <pattern>stroke</pattern>
    <defaultexpression>"You can't stroke " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>feed</property>
    <pattern>feed</pattern>
    <defaultexpression>"You can't feed " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>pet</property>
    <pattern>pet</pattern>
    <defaultexpression>"You can't pet " + object.article + "."</defaultexpression>
  </verb>
  <object name="hotel foyer">
    <exit alias="south" to="prom1">
      <inherit name="southdirection" />
      <locked />
    </exit>
    <exit alias="west" to="alley">
      <inherit name="westdirection" />
    </exit>
    <exit alias="north" to="golf course">
      <inherit name="northdirection" />
    </exit>
  </object>
  <verb>
    <property>break</property>
    <pattern>break</pattern>
    <defaultexpression>"You can't break " + object.article + "."</defaultexpression>
  </verb>
  <object name="prom2">
    <descprefix>You are on</descprefix>
    <alias>promenade</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>It stretches to the east and west.  Rain falls incessantly around you as you peer into the darkness, your vision restricted to the slender triangle of light emitted by your torch.  When you point the beam northwards, you can see a crumbling building connected to the hotel.  Its neon sign, long since switched off, reads 'Rumours' - so presumably the dismal-looking place was once a bar.  Its door and windows are covered by metal grilles.<br/><br/>Nearby, several rabbits are huddled beneath a wooden bench.<br/>")
      }
      else {
        msg ("<br/>The deathly silence continues to reign here, almost as though the mist is absorbing all sound - even your footfalls seem strangely muted.  A few more rabbits are huddled beneath a wooden bench.<br/><br/>To the north is a crumbling building connected to the hotel.  Its neon sign, long since switched off, reads 'Rumours' - so presumably the dismal-looking place was once a bar.  Its door and windows are covered by metal grilles.<br/><br/>The promenade continues to the east and west.<br/>")
      }
    ]]></description>
    <exit alias="west" to="prom1">
      <inherit name="westdirection" />
    </exit>
    <object name="rabbits1">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="ground1">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="bench">
      <takemsg>The bench is attached to the ground.</takemsg>
      <look>Just a nondescript wooden bench, which the rabbits seem to be using as shelter.  A plaque denotes it as a memorial bench to someone named David Darbyshire, who apparently died ten years ago in his fifties, and 'finally found his peace here on our tranquil island'.</look>
      <sit>You don't want to waste time sitting around here.</sit>
    </object>
    <object name="grilles1">
      <inherit name="plural" />
      <scenery />
      <look>Metal sheets have been nailed across the door and windows to prevent any access by vandals, squatters, or even curious explorers such as you.</look>
      <alt type="stringlist">
        <value>windows</value>
        <value>sheeting</value>
        <value>door</value>
        <value>boards</value>
        <value>boarding</value>
        <value>metal</value>
      </alt>
      <kick>The grilles are firmly fixed in place.</kick>
      <break>The grilles are firmly fixed in place.</break>
      <pull>The grilles are firmly fixed in place.</pull>
      <takemsg>The grilles are firmly fixed in place.</takemsg>
    </object>
    <exit alias="east" to="prom3">
      <inherit name="eastdirection" />
    </exit>
    <object name="bar">
      <alt type="stringlist">
        <value>Rumours</value>
      </alt>
      <scenery />
      <look>The building looks run-down, empty and completely impenetrable.</look>
    </object>
    <exit alias="north" to="rumours">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door to the bar is covered by a sheet of metal.</lockmessage>
    </exit>
    <object name="mist2">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="sky2">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rabbitsX1">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="sea2">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="litter1">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="promenade1">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade stretches from east to west.")
        }
        else {
          msg ("The abandoned promenade stretches from east to west.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="rain2">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="prom3">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>promenade</alias>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>You are in the southeast corner of the island.  Even the rabbits seem to have abandoned this area - the only movement is the tumbling rain, which seems to be getting heavier by the minute.  To the north stands a boarded-up pub, with a few bits and pieces lying outside it.<br/><br/>The promenade leads back to the west.<br/>")
      }
      else {
        msg ("<br/>You are in the southeast corner of the island.  Even the rabbits seem to have abandoned this area; except for the mist, the only thing to look at is the boarded-up pub to the north, and the bits and pieces lying outside it.<br/><br/>The promenade leads back to the west.<br/>")
      }
    ]]></description>
    <exit alias="west" to="prom2">
      <inherit name="westdirection" />
    </exit>
    <object name="pub">
      <alt type="stringlist" />
      <scenery />
      <look>The building looks run-down, empty and completely impenetrable.</look>
    </object>
    <object name="grilles2">
      <inherit name="plural" />
      <scenery />
      <look>Metal sheets have been nailed across the door and windows to prevent any access by vandals, squatters, or even curious explorers such as you.</look>
      <alt type="stringlist">
        <value>windows</value>
        <value>sheeting</value>
        <value>door</value>
        <value>boards</value>
        <value>boarding</value>
        <value>metal</value>
      </alt>
      <kick>The grilles are firmly fixed in place.</kick>
      <break>The grilles are firmly fixed in place.</break>
      <pull>The grilles are firmly fixed in place.</pull>
      <takemsg>The grilles are firmly fixed in place.</takemsg>
      <article>the metal sheets</article>
    </object>
    <object name="table">
      <look>The metal table has been upended and left lying outside the pub.  Maybe the table and chair constituted the 'smoking area'.</look>
      <takemsg>The table is too heavy for you to take.</takemsg>
    </object>
    <object name="chair">
      <takemsg>The chair is too unwieldy for you to carry.</takemsg>
      <look>The chair has a metal frame with wooden slats forming the backrest, and has been knocked or blown over and left lying outside the bar.</look>
      <sit>You don't want to waste time sitting around here.</sit>
    </object>
    <object name="ground3">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <exit alias="north" to="brunswick">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door to the pub is covered by a sheet of metal.</lockmessage>
    </exit>
    <object name="pool cue">
      <alt type="stringlist" />
      <visible />
      <look>It's an old pool cue, with the grandiose title 'The Hammer' engraved on the side.  It doesn't look much use now though - it's a little warped from lying outside, and its chalk tip is missing.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <attr name="feature_usegive" type="boolean">false</attr>
      <take type="boolean">false</take>
      <drop type="boolean">false</drop>
      <ontake type="script">
        armed = 1
      </ontake>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
      </selfuseon>
    </object>
    <object name="pool cue2">
      <alt type="stringlist" />
      <visible type="boolean">false</visible>
      <look>It's an old pool cue, with the grandiose title 'The Hammer' engraved on the side.  It doesn't look much use now though - it's a little warped from lying outside, and its chalk tip is missing.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <feature_usegive />
      <alias>pool cue</alias>
      <take type="script">
        if (GetBoolean(weapon, "armed")) {
          msg ("You are already carrying a weapon.")
        }
        else {
          msg ("After what you've seen so far on the island, you decide to forego your usual ban on taking souvenirs, and snatch the weapon from the ground.")
          SetObjectFlagOn (weapon, "armed")
          AddToInventory (pool cue2)
        }
      </take>
      <ontake type="script">
        armed = 1
      </ontake>
      <drop type="script">
        msg ("You drop the pool cue on the ground.")
        SetObjectFlagOff (weapon, "armed")
        MoveObjectHere (pool cue2)
      </drop>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
        <item key="thing"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("This seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the pool cue, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the cue, which has snapped in two, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="thing1"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the pool cue at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the cue, which has snapped completely in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </selfuseon>
    </object>
    <object name="sky3">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="mist3">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="sea3">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="litter2">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="promenade2">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade leads away to the west.")
        }
        else {
          msg ("The abandoned promenade leads away to the west.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="rain3">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="prom4">
    <alias>promenade</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>It stretches from east to west.  To the north stands the visitors' centre, with an alleyway running alongside it to the northeast.  The gaudy bunny rabbits that decorate it seem to be grinning cruelly at your plight.<br/><br/>The rain seems to be getting heavier, soaking you to the bone.<br/>")
      }
      else {
        msg ("<br/>The visitors' centre stands to the north, decorated with pictures of bunny rabbits, which smile down at their congregated brethren outside.  An alleyway runs alongside it to the northeast.<br/><br/>The promenade continues east and west.<br/>")
      }
    ]]></description>
    <exit alias="east" to="prom1">
      <inherit name="eastdirection" />
    </exit>
    <object name="ground2">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="rabbits2">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="alleyway">
      <alt type="stringlist">
        <value>alley</value>
      </alt>
      <scenery />
      <visible />
      <look>The narrow alley leads between the visitors' centre and the hotel.</look>
    </object>
    <object name="centre">
      <alt type="stringlist">
        <value>visitors' centre</value>
      </alt>
      <scenery />
      <look>The visitors' centre was painted in gaudy colours, but they have long since faded.  Now, like everything else on Salvation, it just looks a little sad.  Its windows and doors have been boarded up with metal grilles nailed in place.</look>
    </object>
    <object name="grilles3">
      <scenery />
      <look>Metal sheets have been nailed across the door and windows to prevent any access by vandals, squatters, or even curious explorers such as you.</look>
      <alt type="stringlist">
        <value>windows</value>
        <value>sheeting</value>
        <value>door</value>
        <value>boards</value>
        <value>boarding</value>
        <value>metal</value>
      </alt>
      <kick>The grilles are firmly fixed in place.</kick>
      <break>The grilles are firmly fixed in place.</break>
      <pull>The grilles are firmly fixed in place.</pull>
      <takemsg>The grilles are firmly fixed in place.</takemsg>
      <article>the metal sheets</article>
    </object>
    <object name="painted rabbits">
      <scenery />
      <alt type="stringlist">
        <value>paintings</value>
      </alt>
      <listalias type="string"></listalias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The garishly-coloured rabbits grin down at you like demons.")
        }
        else {
          msg ("The painted rabbits were presumably meant to be cute, but have ended up looking somehow sinister.")
        }
      </look>
    </object>
    <exit alias="west" to="prom5">
      <inherit name="westdirection" />
    </exit>
    <exit alias="northeast" to="alley">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="north" to="visitors centre">
      <inherit name="northdirection" />
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>The door to the visitors' centre is boarded up with metal sheeting.</lockmessage>
    </exit>
    <object name="sky4">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rabbitsX2">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="mist4">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="litter3">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="promenade3">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade stretches from east to west.")
        }
        else {
          msg ("The abandoned promenade stretches from east to west.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="sea4">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="ferris wheel2">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the ferris wheel... somehow the knowledge that it is there, lurking behind the darkness, is unsettling.")
        }
        else {
          msg ("The outline of the ferris wheel is visible to the west, like a weird fungus that has grown out of the island during its long period of neglect.")
        }
      </look>
    </object>
    <object name="rain4">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="prom5">
    <alias>promenade</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>It runs from east to west, past the boarded up shops to the north.  You feel as though you are wandering through a nightmare of darkness and rain.<br/><br/>Between the shops, a pathway leads north, deeper into the island.<br/>")
      }
      else {
        msg ("<br/>The street leads past a number of shops to the north, all boarded up.  More rabbits hop along the flagstones, sniffing at pieces of litter as though searching for food.<br/><br/>A pathway leads north between the shops.<br/><br/>The promenade continues to run east and west.<br/>")
      }
    ]]></description>
    <exit alias="east" to="prom4">
      <inherit name="eastdirection" />
    </exit>
    <object name="rabbits3">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="ground4">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="grilles4">
      <inherit name="plural" />
      <scenery />
      <look>Metal sheets have been nailed across the doors and windows to prevent any access by vandals, squatters, or even curious explorers such as you.</look>
      <alt type="stringlist">
        <value>windows</value>
        <value>sheeting</value>
        <value>door</value>
        <value>boards</value>
        <value>boarding</value>
        <value>metal</value>
      </alt>
      <kick>The grilles are firmly fixed in place.</kick>
      <break>The grilles are firmly fixed in place.</break>
      <pull>The grilles are firmly fixed in place.</pull>
      <takemsg>The grilles are firmly fixed in place.</takemsg>
    </object>
    <object name="shops">
      <inherit name="plural" />
      <visible />
      <scenery />
      <look>The shops have fallen into ruin and long since been boarded up.</look>
    </object>
    <object name="pathway">
      <scenery />
      <look>The path runs between two shops that seem to be leaning together, and leads deeper into the island.</look>
      <alias>path</alias>
      <alt type="stringlist">
        <value>pathway</value>
      </alt>
    </object>
    <exit alias="west" to="prom6">
      <inherit name="westdirection" />
    </exit>
    <exit alias="north" to="pathway1">
      <inherit name="northdirection" />
      <runscript type="boolean">false</runscript>
    </exit>
    <object name="rabbitsX3">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="sky5">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="mist5">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="ferris wheel3">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the ferris wheel... somehow the knowledge that it is there, lurking behind the darkness, is unsettling.")
        }
        else {
          msg ("The outline of the ferris wheel is visible to the west, like a weird fungus that has grown out of the island during its long period of neglect.")
        }
      </look>
    </object>
    <object name="sea5">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="litter4">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="promenade4">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade stretches from east to west.")
        }
        else {
          msg ("The abandoned promenade stretches from east to west.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="rain5">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="prom6">
    <descprefix>You are on</descprefix>
    <alias>promenade</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>You are in the island's southwest corner.<br/><br/>To the east, the promenade leads back along the seafront.<br/><br/>To the north stands the amusement park, surrounded by a sturdy-looking chainlink fence.  A padlocked gate bars entry... although the idea of venturing into the amusement park in the pitch dark is hardly appealing.<br/><br/>Around you, rain continues to fall - you really need to find some shelter.<br/>")
      }
      else {
        msg ("<br/>You are in the island's southwest corner.  A few rabbits scurry out of your path as a sudden gust of wind frightens them.<br/><br/>To the east, the promenade leads back along the seafront.<br/><br/>To the north stands the amusement park.  A sturdy-looking chainlink fence surrounds it, with a padlocked gate barring entry.<br/>")
      }
    ]]></description>
    <object name="ground5">
      <scenery />
      <look>The ground is covered in simple paving stones and stained by a million pieces of old chewing gum.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="rabbits4">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="park">
      <alt type="stringlist">
        <value>amusement park</value>
        <value>stalls</value>
        <value>rides</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Your torch beam doesn't reach very far beyond the fence, but the outlines of abandoned stalls and rides are sinister.  You catch a glimpse of movement, and hope it is just another rabbit.")
        }
        else {
          msg ("Through the fence you can make out the abandoned stalls and rides, and of course the ferris wheel - this would be a creepy, but very cool place to explore.  Maybe they even had a haunted house?")
        }
      </look>
    </object>
    <object name="fence">
      <scenery />
      <look>The fence is high and topped with barbed wire - there doesn't seem to be an obvious way in.</look>
      <climb>You won't be able to get past the barbed wire.</climb>
      <break>You don't vandalise the places you visit, and besides, the fence looks far too sturdy to break.</break>
    </object>
    <object name="gate">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <scenery />
      <look>The gate is high and topped with barbed wire, and locked shut with a heavy chain and padlock.  There doesn't seem to be an obvious way in.</look>
      <break>You don't vandalise the places you visit, and besides, the fence looks far too sturdy to break.</break>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The gate is padlocked shut.</openmsg>
      <closemsg>The gate is already closed.</closemsg>
      <nokeymessage>You do not have a key for the padlock.</nokeymessage>
      <onopen type="script">
        HelperCloseObject (gate)
      </onopen>
      <onclose type="script">
        HelperCloseObject
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="padlock">
      <scenery />
      <look>The padlock is rusted solid - you would need a pretty heavy-duty tool if you were going to break it.</look>
      <takemsg>The padlock is firmly attached to the gate by the chain.</takemsg>
      <break>The padlock is rusted solid - you'd need the right tool to break it open.</break>
      <hit>The padlock is rusted solid - you'd need the right tool to break it open.</hit>
      <smash>The padlock is rusted solid - you'd need the right tool to break it open.</smash>
      <unlock>You do not have a key for the padlock.</unlock>
    </object>
    <object name="chain">
      <look>The chain tightly secures the gate.</look>
      <scenery />
      <takemsg>The chain is attached to the gate by the padlock.</takemsg>
      <break>The chain is heavy and won't break without some heavy-duty bolt cutters.</break>
      <cut>The chain is heavy and won't break without some heavy-duty bolt cutters.</cut>
    </object>
    <object name="wire">
      <alt type="stringlist">
        <value>barbed wire</value>
      </alt>
      <scenery />
      <look>The barbed wire looks rusty, sharp and unpleasant.</look>
    </object>
    <exit alias="east" to="prom5">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="north" to="amusement park stalls">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>You cannot get past the padlocked gate.</lockmessage>
    </exit>
    <object name="ferris wheel4">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the ferris wheel... somehow the knowledge that it is there, lurking behind the darkness, is unsettling.")
        }
        else {
          msg ("The ferris wheel looms above you like a bizarre sculpture.  Or a tombstone.")
        }
      </look>
    </object>
    <object name="mist6">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="sky6">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rabbitsX4">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="sea6">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <alias>sea</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to see the sea.  Or, more accurately, the darkness of the ocean and the darkness of the sky are indistinguishable, as though you are floating in space.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="litter5">
      <visible />
      <scenery />
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
      </alt>
      <alias>litter</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Despite the rain, the breeze seems to have completely died, so the litter has temporarily ceased its endless dance.")
        }
        else {
          msg ("The litter is pushed around by the breeze, moving aimlessly around as though trying to figure out what went wrong.")
        }
      </look>
    </object>
    <object name="promenade5">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The abandoned promenade leads away to the east.")
        }
        else {
          msg ("The abandoned promenade leads away to the east.  Wind blows litter along it, and here and there you can see rabbits hopping about.")
        }
      </look>
    </object>
    <object name="rain6">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <verb>
    <property>cut</property>
    <pattern>cut</pattern>
    <defaultexpression>"You can't cut " + object.article + "."</defaultexpression>
  </verb>
  <object name="alley">
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        if (GetBoolean(creature1, "sighted")) {
          msg ("<br/>The alley curves around to the north.  The smell is awful, as before.  Your torch beam is trained on the dumpsters as you approach them, terrified that the hairless, faceless thing that you saw earlier will have returned to continue its rummaging.<br/>")
        }
        else {
          msg ("<br/>The alley curves around to the north.  It smells dreadful, a stench that you quickly realise is emanating from the dumpsters crowded at its end, between two fire exits that lead into the buildings to your left and right.  Behind the dumpsters stands a high wooden fence that blocks the way north.<br/><br/>However, none of these things command your attention for very long.  Instead, your eyes are drawn to the figure that is hunched over one of the bins, scrabbling and sniffing at its contents.  Disturbed, the flies are buzzing crazily around its naked back, which seems horribly twisted as though the person suffers from a severe spinal disorder.  The figure is extremely thin, skin stretched like flimsy canvas across the jutting bones of its vertebrae.  And they must be freezing, out here in this weather in the dead of night.<br/><br/>Before you can help yourself, you cry out to the strange apparition.<br/><br/>It stops rooting in the garbage, and lifts its head.  As the completely bald cranium turns slowly towards you, you realise that the figure has no arms.  Instead, pale skin simply stretches down from its shoulders to its waist, ribs protruding uncomfortably beneath.<br/><br/>But even more horrific are the features of its face... or rather, the absence of them.<br/><br/>In the brief glimpse you are afforded before the thing leaps like a kangaroo onto the lid of one of the dumpsters, and then soundlessly away over the fence in a single huge bound, you are chilled by the completely blank oval of flesh where eyes, nose, mouth, ears should have been... the thing looked like a person wearing a morph suit.<br/><br/>Part of your brain screams WHATTHEHELLWASTHATWHATTHEHELLWASTHATWHATTHEHELL<br/><br/>Part of your brain wonders how it could possibly have consumed the detritus it was sniffing in...<br/><br/>Another part of your brain wants to run screaming from the alleyway and dive into the cold embrace of the sea...<br/><br/>And the part that wins out, the rational part that wants to stay alive, that wants to pass unnoticed amongst the horrors of this island, simply stands, trembling, pointing the torch beam at the place where an impossible creature had stood just moments before.<br/><br/>The only evidence that it had ever existed is a cloud of angrily buzzing flies.<br/>")
          SetObjectFlagOn (creature1, "sighted")
        }
      }
      else {
        msg ("<br/>The alley curves around to the north.  It smells dreadful, a stench that you quickly realise is emanating from the dumpsters crowded at its end like drunks outside a bar.  They are piled high with rotting garbage that has not been disposed of for months, perhaps even years, and have attracted hundreds of buzzing flies.<br/><br/>A high wooden fence blocks any further passage north, but to the east is a fire exit leading into the hotel, and opposite it a similar door leading into the visitors' centre.<br/>")
      }
    ]]></description>
    <exit alias="southwest" to="prom4">
      <inherit name="southwestdirection" />
    </exit>
    <exit alias="west" to="visitors centre">
      <inherit name="westdirection" />
      <locked type="boolean">false</locked>
      <scenery type="boolean">false</scenery>
      <lockmessage>The fire exit door is closed, and there is no handle to open it from the outside.</lockmessage>
      <runscript />
      <script type="script">
        msg ("The fire exit door is closed, and there is no handle to open it from the outside.")
      </script>
    </exit>
    <exit alias="east" to="hotel foyer">
      <inherit name="eastdirection" />
      <locked type="boolean">false</locked>
      <lockmessage>The fire exit door is closed, and there is no handle to open it from the outside.</lockmessage>
      <runscript />
      <script type="script">
        msg ("The fire exit door is closed, and there is no handle to open it from the outside.")
      </script>
    </exit>
    <exit alias="north" to="lane">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The way north is blocked by the wooden fence.</lockmessage>
    </exit>
    <object name="ground6">
      <alias>ground</alias>
      <scenery />
      <look>The floor of the alley is littered with festering rubbish.  Even the rabbits aren't interested in picking through this mess.</look>
      <alt type="stringlist">
        <value>floor</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
    </object>
    <object name="fence1">
      <alias>fence</alias>
      <scenery />
      <look>The fence is high and made of simple wooden boards.</look>
      <climb>The fence is too high, and has no obvious handholds.</climb>
    </object>
    <object name="dumpsters">
      <inherit name="plural" />
      <inherit name="container_open" />
      <scenery />
      <look>The dumpsters are revolting - you do not wish to go anywhere near them.</look>
      <climb>The dumpsters are revolting - you do not wish to go anywhere near them.</climb>
      <geton>The dumpsters are revolting - you do not wish to go anywhere near them.</geton>
      <alt type="stringlist">
        <value>bins</value>
      </alt>
      <feature_container />
      <open />
      <close />
      <openmsg>The dumpsters are revolting - you do not wish to go anywhere near them.</openmsg>
      <closemsg>The dumpsters are revolting - you do not wish to go anywhere near them.</closemsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="hotel door1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alias>hotel door</alias>
      <alt type="stringlist">
        <value>hotel fire exit</value>
      </alt>
      <scenery />
      <look>The fire exit is tightly closed, with no handle to open it from this side.</look>
      <break>The fire exit door is far too solid to break.</break>
      <kick>The fire exit door is far too solid to break.</kick>
      <pull>The door will not open - it is securely locked.</pull>
      <push>The door will not open - it is securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The fire exit door is closed, and there is no handle to open it from the outside.</openmsg>
      <closemsg>The fire exit is already closed.</closemsg>
      <nokeymessage>There is no way to open the door from this side.</nokeymessage>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <onopen type="script">
        HelperCloseObject (hotel door1)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="visitors centre door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist">
        <value>visitors centre fire exit</value>
        <value>centre fire exit</value>
        <value>centre door</value>
      </alt>
      <scenery />
      <look>The fire exit is tightly closed, with no handle to open it from this side.</look>
      <break>The fire exit door is far too solid to break.</break>
      <kick>The fire exit door is far too solid to break.</kick>
      <pull>The door will not open - it is securely locked.</pull>
      <push>The door will not open - it is securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The fire exit door is closed, and there is no handle to open it from the outside.</openmsg>
      <closemsg>The fire exit is already closed.</closemsg>
      <nokeymessage>There is no way to open the door from this side.</nokeymessage>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <onopen type="script">
        HelperCloseObject (visitors centre door)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="litter10">
      <visible />
      <scenery />
      <look>The rubbish overflows from the dumpsters at the end of the alley, and reeks to high heaven.</look>
      <takemsg>You don't want to pick up any of the litter.</takemsg>
      <alt type="stringlist">
        <value>detritus</value>
        <value>garbage</value>
        <value>wrappers</value>
        <value>cartons</value>
        <value>cans</value>
        <value>packaging</value>
        <value>popcorn</value>
        <value>sweets</value>
        <value>drinks</value>
        <value>rubbish</value>
      </alt>
    </object>
    <object name="sea9">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <look>The ocean is quickly swallowed up by the mist.</look>
      <scenery />
    </object>
    <object name="creature1">
      <alias>creature</alias>
      <visible type="boolean">false</visible>
      <look>The hideous thing has fled over the fence, presumably into the woods... but you really don't fancy waiting around for it to return.</look>
      <scenery />
      <alt type="stringlist">
        <value>monster</value>
        <value>person</value>
        <value>figure</value>
        <value>pale thing</value>
      </alt>
    </object>
    <object name="sky7">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="mist7">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="flies">
      <inherit name="plural" />
      <scenery />
      <look>The flies buzz angrily around the dumpsters.</look>
      <alt type="stringlist">
        <value>fly</value>
      </alt>
    </object>
    <object name="rain7">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="visitors centre">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <exit alias="east" to="alley">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="south" to="prom4">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="lane">
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The lane leads from the north to the south, bounded to the west by the dense trees of the forest, and to the east by the fence that surrounds the hotel's modest 'pitch and putt' golf course.  The course is overgrown and pocked by rabbit holes, although all of the rabbits seem to have taken shelter for the night.<br/><br/>To the south, the way is blocked by a high wooden fence.<br/>")
      }
      else {
        msg ("<br/>The lane leads from the north to the south, bounded to the west by the dense trees of the forest, and to the east by the fence that surrounds the hotel's modest 'pitch and putt' golf course.  You can see lots of rabbits hopping around on the overgrown grass.<br/><br/>To the south, the way is blocked by a high wooden fence.<br/>")
      }
    ]]></description>
    <exit alias="south" to="alley">
      <inherit name="southdirection" />
      <locked />
      <lockmessage>The way south is blocked by a high wooden fence.</lockmessage>
    </exit>
    <exit alias="north" to="pathway3">
      <inherit name="northdirection" />
    </exit>
    <object name="fence4">
      <alias>wooden fence</alias>
      <scenery />
      <look>The fence is high and made of simple wooden boards.  Peering between the boards, you can see (and smell) some overflowing dumpsters on the other side.</look>
      <climb>The fence is too high, and has no obvious handholds.</climb>
    </object>
    <object name="fence5">
      <alias>wire fence</alias>
      <scenery />
      <climb>The fence is too high for you to climb.</climb>
      <break>The wire is too sturdy for you to break without the right tool.</break>
      <cut>The wire is too sturdy for you to break without the right tool.</cut>
      <alt type="stringlist">
        <value>mesh</value>
        <value>wire</value>
      </alt>
      <look type="script">
        msg ("The fence is made from wire mesh and looks fairly impenetrable.  However, you can see a gap in the fence that you might be able to squeeze through into the golf course.")
        MakeExitVisible (throughthefence)
        MakeObjectVisible (gap)
      </look>
    </object>
    <object name="ground11">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>lane</value>
        <value>flagstones</value>
        <value>paving stones</value>
      </alt>
      <scenery />
      <look>The paving stones gradually give way to dirt as the lane leads to the north into the woods.</look>
    </object>
    <exit name="throughthefence" alias="east" to="golf course">
      <inherit name="eastdirection" />
      <visible type="boolean">false</visible>
      <runscript />
      <script type="script">
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
        MoveObject (player, golf course)
      </script>
    </exit>
    <object name="golf course2">
      <alias>golf course</alias>
      <alt type="stringlist">
        <value>course</value>
        <value>holes</value>
        <value>grass</value>
        <value>rabbit holes</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Through the fence, you can see that the golf course is overgrown and poorly maintained, and the ground pocked by rabbit holes.")
        }
        else {
          msg ("Through the fence, you can see that the golf course is overgrown and poorly maintained... and of course, hopping with rabbits.")
        }
      </look>
    </object>
    <object name="gap">
      <alt type="stringlist">
        <value>opening</value>
        <value>hole</value>
      </alt>
      <visible type="boolean">false</visible>
      <look>On the lane's east side, a section of the fence seems to have been cut away.</look>
      <scenery />
      <squeezethrough type="script">
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
        MoveObject (player, golf course)
      </squeezethrough>
      <climbthrough type="script">
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
        MoveObject (player, golf course)
      </climbthrough>
    </object>
    <object name="trees2">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
      </alt>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="rabbits10">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits look like they have made the golf course something of a base - the ground is pocked with dozens of rabbit holes, and you wonder about the network of warrens that is doubtless beneath your feet.</look>
      <takemsg>You can't reach the rabbits through the fence.</takemsg>
      <kick>You can't reach the rabbits through the fence.</kick>
      <hit>You can't reach the rabbits through the fence.</hit>
      <hurt>You can't reach the rabbits through the fence.</hurt>
      <stroke>You can't reach the rabbits through the fence.</stroke>
      <feed>You can't reach the rabbits through the fence.</feed>
      <pet>You can't reach the rabbits through the fence.</pet>
      <alias>rabbits</alias>
      <alt type="stringlist">
        <value>rabbit holes</value>
      </alt>
    </object>
    <object name="sky12">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain8">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <verb>
    <property>geton</property>
    <pattern>get on</pattern>
    <defaultexpression>"You can't get on " + object.article + "."</defaultexpression>
  </verb>
  <object name="pathway1">
    <descprefix>You are on</descprefix>
    <alias>path</alias>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The pathway runs between two shops and leads out to the promenade to the south, and up into the woods to the north.<br/><br/>The rabbits seem to have taken shelter from the weather... you wish you could find somewhere to do the same.<br/>")
      }
      else {
        msg ("<br/>The pathway runs between two shops and leads out to the promenade to the south, and up into the woods to the north.<br/><br/>You can see a pair of brown rabbits sitting on the ground.<br/>")
      }
    ]]></description>
    <exit alias="south" to="prom5">
      <inherit name="southdirection" />
    </exit>
    <object name="rabbits5">
      <inherit name="plural" />
      <scenery />
      <look>You wonder, rather foolishly, whether the rabbits are a couple, or whether they are related - and then realise that they are quite possibly both.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="ground7">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
      </alt>
      <scenery />
      <look>The paved street gives way to dirt as the pathway leads to the north into the woods.</look>
    </object>
    <object name="walls1">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <alt type="stringlist">
        <value>shops</value>
      </alt>
      <look>The shops' walls are featureless, pebbledashed stone, with no doors or windows.</look>
    </object>
    <exit alias="north" to="pathway2">
      <inherit name="northdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("You wait for a moment, steeling your nerves before you enter the forest.  'They come out of the woods at night'...<br/>")
          MoveObject (player, pathway2)
        }
        else {
          MoveObject (player, pathway2)
        }
      ]]></script>
    </exit>
    <object name="sky8">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="promenade6">
      <scenery />
      <alt type="stringlist">
        <value>seafront</value>
        <value>street</value>
      </alt>
      <alias>promenade</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The promenade is visible to the south.")
        }
        else {
          msg ("The promenade is visible to the south.")
        }
      </look>
    </object>
    <object name="rain9">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="pathway2">
    <alias>path</alias>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The pathway leads south back to the promenade, or curves around to the northeast, deeper into the woods.  The trees form a dense barrier on either side of the dirt track.<br/>")
      }
      else {
        msg ("<br/>The pathway leads south back to the promenade, or curves around to the northeast, deeper into the woods.  The trees form a dense barrier on either side of the dirt track.  No rabbits are visible here, but there must be lots of them hiding in the undergrowth.<br/>")
      }
    ]]></description>
    <exit alias="south" to="pathway1">
      <inherit name="southdirection" />
    </exit>
    <object name="sky9">
      <scenery />
      <look>The canopy of the trees is so tightly woven above your head that you can barely see the sky.</look>
    </object>
    <object name="ground8">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="trees">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="northeast" to="pathway3">
      <inherit name="northeastdirection" />
    </exit>
    <object name="rain10">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="pathway3">
    <alias>path</alias>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("The track leads to the southwest back towards the promenade, or opens out into three other pathways - one leading north deeper into the woods, the other leading east, and the other leading south where the trees thin out.<br/>")
      }
      else {
        msg ("<br/>The track leads to the southwest back towards the promenade, or opens out into three other pathways - one leading north deeper into the woods, the other leading east, and the other leading south where the trees thin out.<br/><br/>No rabbits are visible here, but there must be lots of them hiding in the undergrowth.<br/>")
      }
    ]]></description>
    <object name="sky10">
      <scenery />
      <look>The canopy of the trees is so tightly woven above your head that you can barely see the sky.</look>
    </object>
    <object name="ground9">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <exit alias="southwest" to="pathway2">
      <inherit name="southwestdirection" />
      <scenery type="boolean">false</scenery>
    </exit>
    <exit alias="east" to="pathway4">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="south" to="lane">
      <inherit name="southdirection" />
    </exit>
    <object name="trees1">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="north" to="pathway6">
      <inherit name="northdirection" />
    </exit>
    <object name="rain11">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="pathway4">
    <alias>path</alias>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The path runs from west to east through the trees, alongside a high fence that bounds the hotel's modest 'pitch and putt' golf course to the south.  At its eastern end the path curves to the north away from the golf course.<br/><br/>Through the fence, you can see that the course is pitted with many rabbit holes, but all of the bunnies have had the sense to take shelter from the rain.<br/>")
      }
      else {
        msg ("<br/>The path runs from west to east through the trees, alongside a high fence that bounds the hotel's modest 'pitch and putt' golf course to the south.  At its eastern end the path curves to the north away from the golf course.<br/><br/>Lots of rabbits are visible through the fence, lounging in the weak afternoon sunlight amongst the overgrown grass.<br/>")
      }
    ]]></description>
    <exit alias="west" to="pathway3">
      <inherit name="westdirection" />
    </exit>
    <object name="ground10">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbits6">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits look like they have made the golf course something of a base - the ground is pocked with dozens of rabbit holes, and you wonder about the network of warrens that is doubtless beneath your feet.</look>
      <takemsg>You can't reach the rabbits through the fence.</takemsg>
      <kick>You can't reach the rabbits through the fence.</kick>
      <hit>You can't reach the rabbits through the fence.</hit>
      <hurt>You can't reach the rabbits through the fence.</hurt>
      <stroke>You can't reach the rabbits through the fence.</stroke>
      <feed>You can't reach the rabbits through the fence.</feed>
      <pet>You can't reach the rabbits through the fence.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="fence2">
      <alias>fence</alias>
      <scenery />
      <look>The fence is made from wire mesh and looks fairly impenetrable.</look>
      <climb>The fence is too high for you to climb.</climb>
      <break>The wire is too sturdy for you to break without the right tool.</break>
      <cut>The wire is too sturdy for you to break without the right tool.</cut>
      <alt type="stringlist">
        <value>mesh</value>
        <value>wire</value>
      </alt>
    </object>
    <exit alias="south" to="golf course">
      <inherit name="southdirection" />
      <locked />
      <lockmessage>The fence is too high for you to climb.</lockmessage>
    </exit>
    <object name="trees4">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="north" to="pathway5">
      <inherit name="northdirection" />
    </exit>
    <object name="sky11">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="golf course1">
      <alias>golf course</alias>
      <alt type="stringlist">
        <value>course</value>
        <value>holes</value>
        <value>grass</value>
        <value>rabbit holes</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Through the fence, you can see that the golf course is overgrown and poorly maintained, and the ground pocked by rabbit holes.")
        }
        else {
          msg ("Through the fence, you can see that the golf course is overgrown and poorly maintained... and of course, hopping with rabbits.")
        }
      </look>
    </object>
    <object name="rain12">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="golf course">
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("You are standing on the hotel's tiny pitch and putt golf course.  Rain soaks the unkempt greens all around you.<br/><br/>You are surrounded to the north, east and west by a high wire mesh fence, although to the west your torch reveals a hole that you could squeeze through to get back into the forest.<br/><br/>To the south is the hotel itself.  Some wooden decking with a few plastic chairs must have been a patio from which the guests could watch the games of golf - behind this area is a set of double glass doors leading into the hotel.<br/>")
      }
      else {
        msg ("You are standing on the hotel's tiny pitch and putt golf course, which is in a state of significant disrepair.  The grass is overgrown despite the appetite of the rampant bunnies, and dead in parts as though not getting enough water.<br/><br/>You are surrounded to the north, east and west by a high wire mesh fence, although to the west you can see a hole that you could squeeze through to get back into the forest.<br/><br/>To the south is the hotel itself.  Some wooden decking with a few plastic chairs must have been a patio from which the guests could watch the games of golf - behind this area is a set of double glass doors leading into the hotel.<br/>")
      }
    ]]></description>
    <beforefirstenter type="script">
    </beforefirstenter>
    <exit alias="north" to="pathway4">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The fence is too high for you to climb.</lockmessage>
      <runscript type="boolean">false</runscript>
      <script type="script">
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
      </script>
    </exit>
    <object name="fence3">
      <alias>fence</alias>
      <scenery />
      <look>The fence is made from wire mesh and looks fairly impenetrable, except for a small gap cut into the fence to the west.</look>
      <climb>The fence is too high for you to climb.</climb>
      <break>The wire is too sturdy for you to break without the right tool.</break>
      <cut>The wire is too sturdy for you to break without the right tool.</cut>
      <alt type="stringlist">
        <value>mesh</value>
        <value>wire</value>
      </alt>
    </object>
    <object name="rabbits7">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits look like they have made the golf course something of a base - the ground is pocked with dozens of rabbit holes, and you wonder about the network of warrens that is doubtless beneath your feet.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
      <alt type="stringlist">
        <value>holes</value>
        <value>rabbit holes</value>
      </alt>
    </object>
    <object name="ground12">
      <alias>ground</alias>
      <scenery />
      <alt type="stringlist">
        <value>floor</value>
        <value>golf course</value>
        <value>course</value>
        <value>grass</value>
      </alt>
      <look>The grass is overgrown and dead in patches - you wouldn't fancy a game of golf here.</look>
    </object>
    <object name="golf club">
      <alt type="stringlist" />
      <visible />
      <look>It's a 5 iron, and looks a little bent - still, it seems an odd thing to discard.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <attr name="feature_usegive" type="boolean">false</attr>
      <take type="boolean">false</take>
      <drop type="boolean">false</drop>
      <ontake type="script">
        armed = 1
      </ontake>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
      </selfuseon>
    </object>
    <exit alias="west" to="lane">
      <inherit name="westdirection" />
      <runscript />
      <script type="script">
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
        MoveObject (player, lane)
      </script>
    </exit>
    <exit alias="south" to="hotel foyer">
      <inherit name="southdirection" />
      <locked />
      <lockmessage>The double doors are locked.</lockmessage>
    </exit>
    <object name="doors">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <inherit name="plural" />
      <scenery />
      <alt type="stringlist">
        <value>glass</value>
        <value>patio doors</value>
      </alt>
      <kick>You don't fancy cutting your leg to pieces on broken glass.</kick>
      <push>The doors are locked shut.</push>
      <pull>The doors are locked shut.</pull>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <closemsg>The doors are already closed.</closemsg>
      <openmsg>The doors are locked.</openmsg>
      <close />
      <open />
      <transparent />
      <autounlock type="boolean">false</autounlock>
      <autoopen type="boolean">false</autoopen>
      <nokeymessage>The hotel doors are locked.</nokeymessage>
      <lookthrough>The room visible through the doors has a collection of comfortable armchairs loosely arranged around a fireplace.  It might once have looked warm and welcoming, but now it just looks quiet and creepy.</lookthrough>
      <look type="script">
        if (GetBoolean(zombie found, "found")) {
          msg ("The room visible through the doors has a collection of comfortable armchairs loosely arranged around a fireplace... as well as the bizarre humanoid monstrosity, that is still watching you.  It is crouching, catlike, as if readying itself to pounce through the glass.  You have never known terror this absolute.")
        }
        else {
          msg ("Through the glass you can see some sort of sitting room inside the hotel, which is empty of course.")
        }
      </look>
      <break type="script"><![CDATA[
        if (not GetBoolean(weapon, "armed")) {
          msg ("You can't break it with your bare hands!")
        }
        else if (GetBoolean(zombie found, "found")) {
          msg ("You don't dare break it and release... that thing.")
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("You wouldn't normally vandalise the places you visit, but you are in a dire situation and need shelter... you raise your weapon, preparing to smash the glass so that you can get inside the hotel, when suddenly a hideous FACE slaps against the doors from the other side!<br/><br/>It is a human, or at least, humanoid... but this creature's skin is horribly pitted and scarred, and it seems to be crawling about on all fours.  As you watch, transfixed with horror, it extends a long and scabrous tongue and licks the glass, the unblinking coals of its eyes watching you intently.  Without warning, it rears back and drives its head into the window.  You leap back in shock, but mercifully the glass does not crack.  The abberation scowls in pain and continues to stare at you, baring the rotten stumps of its teeth.  But it does not attempt to break through the door again.  You cannot take your eyes off the monstrosity: it is naked, and every inch of its skin seems to be horrifically raw and burned, as if with acid.  Clumps of dark hair cling to the leprous dome of its head.  Its hands and feet are splayed outwards at what appear to be painful right angles, and the finger and toe nails are long and twisted, like claws.<br/><br/>You feel an overwhelming urge to scream and run.  Only the thought of the unimaginable horror of hearing shattering glass behind you compels you to back away slowly from the doors instead, training your torch beam on it all the while.<br/>")
          SetObjectFlagOn (zombie found, "found")
          MakeObjectVisible (creature)
        }
        else {
          msg ("You don't vandalise the places you visit.")
        }
      ]]></break>
      <smash type="script"><![CDATA[
        if (not GetBoolean(weapon, "armed")) {
          msg ("You can't break it with your bare hands!")
        }
        else if (GetBoolean(zombie found, "found")) {
          msg ("You don't dare break it and release... that thing.")
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("You wouldn't normally vandalise the places you visit, but you are in a dire situation and need shelter... you raise your weapon, preparing to smash the glass so that you can get inside the hotel, when suddenly a hideous FACE slaps against the doors from the other side!<br/><br/>It is a human, or at least, humanoid... but this creature's skin is horribly pitted and scarred, and it seems to be crawling about on all fours.  As you watch, transfixed with horror, it extends a long and scabrous tongue and licks the glass, the unblinking coals of its eyes watching you intently.  Without warning, it rears back and drives its head into the window.  You leap back in shock, but mercifully the glass does not crack.  The abberation scowls in pain and continues to stare at you, baring the rotten stumps of its teeth.  But it does not attempt to break through the door again.  You cannot take your eyes off the monstrosity: it is naked, and every inch of its skin seems to be horrifically raw and burned, as if with acid.  Clumps of dark hair cling to the leprous dome of its head.  Its hands and feet are splayed outwards at what appear to be painful right angles, and the finger and toe nails are long and twisted, like claws.<br/><br/>You feel an overwhelming urge to scream and run.  Only the thought of the unimaginable horror of hearing shattering glass behind you compels you to back away slowly from the doors instead, training your torch beam on it all the while.<br/>")
          SetObjectFlagOn (zombie found, "found")
          MakeObjectVisible (creature)
        }
        else {
          msg ("You don't vandalise the places you visit.")
        }
      ]]></smash>
      <knockon type="script"><![CDATA[
        if (GetBoolean(zombie found, "found")) {
          msg ("Tentatively you reach out to knock on the glass... the creature's head seems to follow your movements, its mouth lolling open as though hoping for a chance to bite at your hand.  The tapping sound seems to confuse it, and the very human frown that crosses its face is the most terrifying sight of all.")
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("You knock on the door... and are horrified to see a repulsive CREATURE come scuttling out from behind an armchair!!<br/><br/>It is a human, or at least, humanoid... but this creature's skin is horribly pitted and scarred, and it seems to be crawling about on all fours.  As you watch, transfixed with horror, it extends a long and scabrous tongue and licks the glass, the unblinking coals of its eyes watching you intently.  Without warning, it rears back and drives its head into the window.  You leap back in shock, but mercifully the glass does not crack.  The abberation scowls in pain and continues to stare at you, baring the rotten stumps of its teeth.  But it does not attempt to break through the door again.  You cannot take your eyes off the monstrosity: it is naked, and every inch of its skin seems to be horrifically raw and burned, as if with acid.  Clumps of dark hair cling to the leprous dome of its head.  Its hands and feet are splayed outwards at what appear to be painful right angles, and the finger and toe nails are long and twisted, like claws.<br/><br/>You feel an overwhelming urge to scream and run.  Only the thought of the unimaginable horror of hearing shattering glass behind you compels you to back away slowly from the doors instead, training your torch beam on it all the while.")
          SetObjectFlagOn (zombie found, "found")
          MakeObjectVisible (creature)
        }
        else {
          msg ("You knock on the door, half expecting a zombie porter to come shuffling up to let you in... but nothing happens.")
        }
      ]]></knockon>
      <onopen type="script">
        HelperCloseObject (doors)
      </onopen>
      <openscript type="script">
        msg ("The doors are locked.")
        HelperCloseObject (doors)
      </openscript>
      <closescript type="script">
        msg ("The doors are already closed.")
      </closescript>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="patio">
      <alt type="stringlist">
        <value>decking</value>
        <value>wood</value>
      </alt>
      <look>The decking looks a bit sodden and mouldy, and you'll need to be careful not to slip if you walk on it.</look>
      <scenery />
    </object>
    <object name="chairs">
      <inherit name="plural" />
      <scenery type="boolean">false</scenery>
      <look>The chairs are cheap items made of white plastic.</look>
      <takemsg>The chairs are very light, but a bit awkward to carry.</takemsg>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <object name="hotel1">
      <alias>hotel</alias>
      <scenery />
      <look>From this angle the hotel is just a nondescript grey building.  Several windows are visible and not boarded up, but you have no way to reach them.</look>
    </object>
    <object name="windows">
      <inherit name="plural" />
      <scenery />
      <look>The hotel has several windows visible from here, but you cannot reach them or see anything through them.</look>
    </object>
    <object name="gap1">
      <alt type="stringlist">
        <value>opening</value>
        <value>hole</value>
      </alt>
      <visible />
      <look>To the west, a section of the fence seems to have been strangely cut away.</look>
      <scenery />
      <squeezethrough type="script">
        MoveObject (player, lane)
        msg ("You squeeze through the gap in the fence, careful not to snag your clothing on the sharp wire.")
      </squeezethrough>
    </object>
    <object name="trees3">
      <inherit name="plural" />
      <look>The trees surrounding the course are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="golf club2">
      <alt type="stringlist" />
      <visible type="boolean">false</visible>
      <look>It's a 5 iron, and looks a little bent - still, it seems an odd thing to discard.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <feature_usegive />
      <alias>golf club</alias>
      <take type="script">
        if (GetBoolean(weapon, "armed")) {
          msg ("You are already carrying a weapon.")
        }
        else {
          msg ("After what you've seen so far on the island, you decide to forego your usual ban on taking souvenirs, and snatch the weapon from the ground.")
          SetObjectFlagOn (weapon, "armed")
          AddToInventory (golf club2)
        }
      </take>
      <ontake type="script">
        armed = 1
      </ontake>
      <drop type="script">
        msg ("You drop the golf club on the ground.")
        SetObjectFlagOff (weapon, "armed")
        MoveObjectHere (golf club2)
      </drop>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
        <item key="thing"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the piece of wood, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the piece of wood, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse1)
            RemoveObject (thing)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="thing1"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the golf club at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </selfuseon>
    </object>
    <object name="sitting room">
      <scenery />
      <alt type="stringlist">
        <value>armchairs</value>
        <value>fireplace</value>
      </alt>
      <visible />
      <look type="script">
        if (GetBoolean(zombie found, "found")) {
          msg ("The room visible through the doors has a collection of comfortable armchairs loosely arranged around a fireplace... as well as the bizarre humanoid monstrosity, that is still watching you.  It is crouching, catlike, as if readying itself to pounce through the glass.  You have never known terror this absolute.")
        }
        else {
          msg ("The room visible through the doors has a collection of comfortable armchairs loosely arranged around a fireplace.  It might once have looked warm and welcoming, but now it just looks quiet and creepy.")
        }
      </look>
    </object>
    <object name="zombie found">
      <visible type="boolean">false</visible>
    </object>
    <object name="creature">
      <visible type="boolean">false</visible>
      <look>The creature continues to stare at you though the glass, its expression a mixture of rage, pain, and... hunger.</look>
      <alt type="stringlist">
        <value>monster</value>
        <value>thing</value>
        <value>zombie</value>
        <value>horror</value>
        <value>man</value>
      </alt>
    </object>
    <object name="sky13">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain13">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
    <object name="handles">
      <inherit name="plural" />
      <scenery />
      <look>The doors each have a handle with a small keyhole beneath.</look>
      <alt type="stringlist">
        <value>locks</value>
        <value>keyholes</value>
      </alt>
      <lookthrough>The keyholes are far too small for you to see through.</lookthrough>
      <lookin>The keyholes are far too small for you to see through.</lookin>
      <turn>The handles are fixed in place.</turn>
      <twist>The handles are fixed in place.</twist>
    </object>
  </object>
  <verb>
    <property>smash</property>
    <pattern>smash</pattern>
    <defaultexpression>"You can't smash " + object.article + "."</defaultexpression>
  </verb>
  <object name="rumours">
    <exit alias="south" to="prom2">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="brunswick">
    <exit alias="south" to="prom3">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="pathway6">
    <alias>path</alias>
    <descprefix>You are on</descprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The path is long and leads up the hill in the centre of Salvation Island.  It curves around as it ascends through the thick undergrowth.<br/><br/>To the south the path leads down the hill back towards the promenade.<br/><br/>To the north, the path leads towards a clearing.<br/><br/>The rabbits seem to have hidden from the rain, which you can hear battering insistently on the canopy of leaves above your head.")
      }
      else {
        msg ("<br/>The path is long and leads up the hill in the centre of Salvation Island.  It curves around as it ascends through the thick undergrowth, and rabbits occasionally emerge from the leaves, noses and ears twitching.<br/><br/>To the south the path leads down the hill back towards the promenade.<br/><br/>To the north, the path leads towards a clearing.<br/>")
      }
    ]]></description>
    <exit alias="south" to="pathway3">
      <inherit name="southdirection" />
    </exit>
    <object name="rabbits8">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="sky14">
      <scenery />
      <look>The canopy of the trees is so tightly woven above your head that you can barely see the sky.</look>
    </object>
    <object name="ground13">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="clearing1">
      <scenery />
      <look>You can make out a clearing at the northern end of the path, where it presumably opens out onto the hilltop where the statue of Saint Drogo stands watch over the island.</look>
      <alias>clearing</alias>
    </object>
    <object name="trees5">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="north" to="clearing">
      <inherit name="northdirection" />
    </exit>
    <object name="rain14">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="pathway5">
    <descprefix>You are on</descprefix>
    <alias>path</alias>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The path leads from north to south, bounded to the west by tangled trees.<br/><br/>To the east, the ocean is shrouded in darkness.<br/><br/>As you swing your torch beam to the north, just before the path opens out into the large clearing where the ruins of the village stand like monuments, you are alarmed to see a group of around two dozen rabbits has congregated.  They are just sitting in the pathway, staring at you, not moving at all.  It is a very eerie sight, and again you feel irrational fear squeezing your spine.<br/>")
      }
      else {
        msg ("<br/>The path leads from north to south, bounded to the west by tangled trees.<br/><br/>To the east, you can see through the trees to the sea, and realise that you are on the island's east side, looking down at the stony grey expanse of the ocean, which is soon consumed by the blinding mist.<br/><br/>No rabbits are visible here, but there must be lots of them hiding in the undergrowth.<br/>")
      }
    ]]></description>
    <exit alias="south" to="pathway4">
      <inherit name="southdirection" />
    </exit>
    <object name="sky15">
      <scenery />
      <look>The canopy of the trees is so tightly woven above your head that you can barely see the sky.</look>
    </object>
    <object name="ground14">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="sea7">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The ocean is an ominous black expanse to the east.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="trees6">
      <inherit name="plural" />
      <look>The trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="north" to="village">
      <inherit name="northdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("You pick your way slowly past the rabbits.  You have no idea why they are there.  They don't seem frightened of you at all.<br/>")
          MoveObject (player, village)
        }
        else {
          MoveObject (player, village)
        }
      ]]></script>
    </exit>
    <object name="mist8">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="rabbitsX6">
      <inherit name="plural" />
      <scenery />
      <look><![CDATA[The rabbits do not move, even when you point your torch at them.  Somehow they look monstrous, rabid, as though their mouths are about to yawn open to reveal rows of fangs.<br/>]]></look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>You don't want to touch them.</kick>
      <hit>You don't want to touch them.</hit>
      <hurt>You don't want to touch them.</hurt>
      <stroke>You don't want to touch them.</stroke>
      <feed>You don't want to touch them.</feed>
      <pet>You don't want to touch them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
      <scare>The rabbits do not seem frightened of you at all.</scare>
      <frighten>The rabbits do not seem frightened of you at all.</frighten>
      <move>You don't want to touch them.</move>
      <kill>You don't want to touch them.</kill>
    </object>
    <object name="rain15">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="clearing">
    <description><![CDATA[<br/>The clearing is large, and opens out to the east where you can see a small chapel.<br/><br/>Standing in the centre of the clearing is the famous statue of Saint Drogo.  Despite his supposed healing abilities, he does not appear to be particularly benificent - he is depicted as a hunched, robed figure, one hand tightly clutching a staff as his snarling face peers out from beneath his cowl.  There are no rabbits here, as though they are frightened of the sculpture.<br/><br/>To the south, a pathway leads back down the hill towards the promenade.<br/>]]></description>
    <exit alias="south" to="pathway6">
      <inherit name="southdirection" />
    </exit>
    <object name="trees7">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground15">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>grass</value>
      </alt>
      <scenery />
      <look>The clearing is carpeted by lush green grass that does not seem blighted by the same malaise as the trees - perhaps Drogo does have healing powers, after all.</look>
    </object>
    <object name="statue">
      <alt type="stringlist">
        <value>Drogo</value>
        <value>Saint Drogo</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <look><![CDATA[Born of Flemish nobility, you remember reading about the physical deformation Drogo suffered after contracting a rare wasting disease during a pilgrimage to Rome.  So horribly deformed was he that his church built him a special annex in which to live, to protect the villagers from catching a glimpse of his hideous face.  Drogo lived there for decades, surviving on a diet of water, barley and the daily Eucharist.  He died aged eighty-one in 1186, after a life of penitence.<br/><br/>Ironically, the bronze statue has long since oxidised, and so the hunched figure appears to be coated in a sickly green malaise.  Only his right foot has avoided the ravages of time, polished to a gleaming shine by thousands of visitors to Salvation wishing to share in some of the Saint's supposed healing powers.<br/><br/>Only one of Drogo's eyes is visible from beneath his cowl, but you cannot help but feel as though he is watching you, angry with you for violating the serenity of his forgotten island.]]></look>
      <takemsg>The statue is far too heavy for you to budge.</takemsg>
      <visible />
    </object>
    <object name="foot">
      <scenery />
      <takemsg>Drogo's foot is very firmly attached, and the statue itself is far too heavy to be moved.</takemsg>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Drogo's outstretched foot gleams in the light of your torch.")
        }
        else {
          msg ("Drogo's outstretched foot shines brightly, even in the wan sunlight.")
        }
      </look>
      <rub type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("You rub Drogo's foot and mutter a feeble prayer for... salvation.  You almost laugh as the thought crosses your mind.  There is no sign that Drogo has heard your plea... just the ominous silence of the dark forest, and the whisper of the rain falling all around.")
        }
        else {
          msg ("You rub Drogo's foot and wish for good health.  A single loud caw from a seagull somewhere overhead makes you jump - for a second, you thought it was the statue, laughing cruelly at you.")
        }
      </rub>
    </object>
    <exit alias="east" to="outside chapel">
      <inherit name="eastdirection" />
    </exit>
    <object name="chapel">
      <scenery />
      <look>The chapel is an old, squat building built from grey bricks.</look>
      <drop />
    </object>
    <object name="sky16">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain16">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <verb>
    <property>rub</property>
    <pattern>rub</pattern>
    <defaultexpression>"You can't rub " + object.article + "."</defaultexpression>
  </verb>
  <object name="outside chapel">
    <descprefix>You are in</descprefix>
    <alias>clearing outside a chapel</alias>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The chapel stands before you, to the north.  The clearing also extends to the west, where you can make out the entrance to a path through the trees, and to the east, where you can see a small cemetery.<br/>")
      }
      else {
        msg ("<br/>The chapel stands before you, to the north.  The clearing also extends to the west, where you can make out the entrance to a path through the trees, and to the east, where you can see a small cemetery.  Rabbits are hopping amongst the headstones.<br/>")
      }
    ]]></description>
    <exit alias="west" to="clearing">
      <inherit name="westdirection" />
    </exit>
    <object name="trees8">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground16">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>grass</value>
      </alt>
      <scenery />
      <look>The clearing is carpeted by lush green grass that does not seem blighted by the same malaise as the trees - perhaps Drogo does have healing powers, after all.</look>
    </object>
    <object name="statue1">
      <alt type="stringlist">
        <value>Drogo</value>
        <value>Saint Drogo</value>
      </alt>
      <scenery />
      <look>You can still see the statue of Drogo to the west.  His back is towards you, but you are gripped momentarily by the strange feeling that he is going to turn around to watch what you're up to.</look>
      <takemsg>The statue is far too heavy for you to budge.</takemsg>
    </object>
    <object name="chapel1">
      <scenery />
      <look>Up close, you can see that the chapel is very old, and at the same time more solid and enduring that the island's other crumbling structures.  It has a wooden door, and several windows with wooden shutters across them.</look>
      <drop />
      <alias>chapel</alias>
      <alt type="stringlist">
        <value>walls</value>
      </alt>
    </object>
    <object name="chapel door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look>The door is made from sturdy oak planks.  A simple metal handle protrudes from above an old-fashioned keyhole.  You can see a small gap underneath the door, but bending down to take a look you can see only darkness beyond.</look>
      <visible />
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <alt type="stringlist">
        <value>planks</value>
        <value>oak</value>
        <value>metal</value>
        <value>gap</value>
      </alt>
      <nokeymessage>You do not have a key for the chapel.</nokeymessage>
      <lookunder>There is a small gap under the door, but it's too dark to see anything inside.</lookunder>
      <autounlock type="boolean">false</autounlock>
      <autoopen type="boolean">false</autoopen>
      <unlockmessage>The chapel door is now unlocked.</unlockmessage>
      <lockmessage>The chapel door is now locked.</lockmessage>
      <push>The door is </push>
      <key type="object">chapel key</key>
      <kick type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Try as you might, you cannot batter your way into the chapel - the ancient wood of the door stands firm.")
        }
        else {
          msg ("You do not vandalise the places that you visit.")
        }
      </kick>
      <break type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("Try as you might, you cannot batter your way into the chapel - the ancient wood of the door stands firm.")
        }
        else {
          msg ("You do not vandalise the places that you visit.")
        }
      </break>
      <onopen type="script">
      </onopen>
      <onunlock type="script">
        UnlockExit (doortothechapel)
        SetObjectFlagOn (handle, "unlocked")
      </onunlock>
      <onlock type="script">
        LockExit (doortothechapel)
        SetObjectFlagOff (handle, "unlocked")
      </onlock>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit name="doortothechapel" alias="north" to="chapel2">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door to the chapel is locked.</lockmessage>
      <runscript />
      <script type="script">
        if (Got(lighthouse key)) {
          SetObjectFlagOn (thing, "creepy")
          SetObjectFlagOn (time of day, "creepy")
          MoveObject (player, chapel2)
        }
        else {
          MoveObject (player, chapel2)
        }
      </script>
    </exit>
    <object name="keyhole">
      <scenery />
      <lookthrough>You peer through the keyhole, but it's too dark to see through - or maybe something is blocking it from the other side?</lookthrough>
      <lookin>You peer through the keyhole, but it's too dark to see through - or maybe something is blocking it from the other side?</lookin>
      <attr name="feature_container" type="boolean">false</attr>
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <alt type="stringlist">
        <value>lock</value>
      </alt>
      <look type="script">
        if (GetBoolean(keyhole, "cleared")) {
          msg ("Even though you've dislodged the blockage, it's still too dark to see through the keyhole.")
        }
        else if (GetBoolean(piece of paper, "plop")) {
          msg ("Even though you've dislodged the blockage, it's still too dark to see through the keyhole.")
        }
        else if (Got(chapel key)) {
          msg ("Even though you've dislodged the blockage, it's still too dark to see through the keyhole.")
        }
        else {
          msg ("It's too dark to see through the keyhole... or maybe something is blocking it from the other side?")
        }
      </look>
    </object>
    <object name="windows1">
      <inherit name="plural" />
      <alias>windows</alias>
      <scenery />
      <alt type="stringlist">
        <value>shutters</value>
      </alt>
      <look>The shutters are locked tight, and there seems to be no way to open them from the outside.</look>
    </object>
    <object name="graveyard">
      <alt type="stringlist">
        <value>cemetery</value>
      </alt>
      <scenery />
      <look>The gravestones huddle together as if trying to protect each other from the cold.</look>
    </object>
    <exit alias="east" to="graveyard1">
      <inherit name="eastdirection" />
    </exit>
    <object name="rabbits11">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits hop playfully amongst the headstones, munching the overgrown grass.</look>
      <takemsg>The rabbits are over in the graveyard.</takemsg>
      <kick>The rabbits are over in the graveyard.</kick>
      <hit>The rabbits are over in the graveyard.</hit>
      <hurt>The rabbits are over in the graveyard.</hurt>
      <stroke>The rabbits are over in the graveyard.</stroke>
      <feed>The rabbits are over in the graveyard.</feed>
      <pet>The rabbits are over in the graveyard.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="gravestones">
      <inherit name="plural" />
      <alt type="stringlist">
        <value>headstones</value>
      </alt>
      <scenery />
      <look>The gravestones huddle together as if trying to protect each other from the cold.</look>
    </object>
    <object name="sky17">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="handle">
      <scenery />
      <look>The simple metal handle has an old-fashioned keyhole underneath it.</look>
      <takemsg>The handle is attached to the door.</takemsg>
      <turn type="script">
        if (GetBoolean(handle, "unlocked")) {
          msg ("The handle twists easily in your grasp.  The door is unlocked, so you can enter the chapel if you want to.")
        }
        else {
          msg ("The handle twists easily in your grasp, but the door is locked firmly.")
        }
      </turn>
      <twist type="script">
        if (GetBoolean(handle, "unlocked")) {
          msg ("The handle twists easily in your grasp.  The door is unlocked, so you can enter the chapel if you want to.")
        }
        else {
          msg ("The handle twists easily in your grasp, but the door is locked firmly.")
        }
      </twist>
    </object>
    <object name="signpost3">
      <scenery type="boolean">false</scenery>
      <look>The sign explains that the chapel was built at the same time as its statue, and served as a place of worship for the island's small community, who either worked within the asylum itself or to support its upkeep.</look>
      <alt type="stringlist" />
      <read>The sign explains that the chapel was built at the same time as its statue, and served as a place of worship for the island's small community, who either worked within the asylum itself or to support its upkeep.</read>
      <alias>signpost</alias>
    </object>
    <object name="chapel key">
      <visible type="boolean">false</visible>
      <look>Just a simple, rusty old key.</look>
      <takemsg>You pick up the key.</takemsg>
      <dropmsg>The key is not heavy and fits easily into your pocket - there seems little point in discarding it.</dropmsg>
      <drop type="boolean">false</drop>
      <attr name="feature_usegive" type="boolean">false</attr>
      <take type="script">
        msg ("You pick up the key.")
        MoveObject (chapel key, player)
        SetObjectFlagOn (piece of paper, "on the floor with key removed")
        SetObjectFlagOff (piece of paper, "on the floor with key outside")
      </take>
    </object>
    <object name="rain17">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="chapel2">
    <alias>chapel</alias>
    <description><![CDATA[<br/>It smells musty and dank, like a tomb.  The darkness is absolute, dispelled only by the paltry light from your torch.  As you cast the beam around, you can see a small interior, with a few pews to the east facing the western wall, where a lectern stands with an open book upon it.  A thick coating of dust covers everything.<br/><br/>To the south, the door leads back outside into the forest.<br/><br/>To the north, another door leads deeper into the building.  You can make out footprints in the dust leading to and from the door.<br/>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <enter type="script"><![CDATA[
      if (GetBoolean(thing, "ready")) {
        if (GetBoolean(handle1, "locked")) {
          msg ("<br/>A noise from the door attracts your attention.  You watch, horrified, as the handle begins to turn slowly.  As if in frustration, the door begins to rattle, and whatever is outside bangs repeatedly on the wood... but the door holds firm.  After about a minute, the hammering stops, and the only sound is the rain continuing to fall outside.<br/><br/>You breathe a sigh of relief, thanking your foresight in locking the door from the inside.<br/>")
          SetObjectFlagOff (thing, "ready")
          play sound ("Scratching The Door- Creepy Horror Sound Effect - Halloween Scary SFX.mp3", false, false)
          SetObjectFlagOn (thing, "creepy")
        }
        else {
          msg ("<br/>The sound of the rain is louder than before... and you realise with a start that the door is hanging wide open, blowing gusts of freezing drizzle into the dusty chamber.  It must have blown open somehow.  Rattled, you stride towards the wooden door, not sure whether you intend to close it or simply leave the eerie chapel... and then you hear a hiss from somewhere to your left.<br/><br/>You whirl around, shining the torch towards the source of the sound.  Nothing.  Just the sound of your own rapid breathing.  And then...<br/>")
          wait {
            msg ("<br/>And then a nightmare emerges from between the pews.<br/><br/>It is a human, or at least, it is a human's body.  It no longer seems to possess any other shred of humanity.  The... thing... seems to have lost the use of its legs, and pulls itself along with its hands, lifting its chest and body up off the ground and wriggling along almost like a snake.  It is naked, and its pale skin looks horribly burned in patches, as though it has been splashed with acid.  You can see from its anatomy that it is a woman.  Clumps of thin grey hair cling to her head, and you wonder how old she is... or was.  Her hands make clammy slapping noises on the boards as she turns to face you, and her mouth yawns open in another malignant hiss.  Blood drips between her rotten teeth as though she has chewed through her own tongue, but it is her eyes that are the worst, her wide staring eyes that convey a mixture of rage and terror, as though somewhere inside her former self is still fully aware, still conscious of the horrors her body is enduring.<br/><br/>But there is no time for pity.  She drags herself across the floor towards you, snarling balefully, and you must defend yourself.<br/>")
            play sound ("Broken Notes Melancholy ~ Confrontation of the Mind.mp3", false, false)
            SetObjectFlagOff (thing, "ready")
            SetObjectFlagOn (thing, "attacking")
            MakeObjectVisible (thing)
            HelperOpenObject (chapel door1)
            SetTimeout (180) {
              if (GetBoolean(thing, "attacking")) {
                msg ("The old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
                finish
              }
            }
          }
        }
      }
      else {
      }
    ]]></enter>
    <firstenter type="script">
    </firstenter>
    <beforeenter type="script">
      stop sound
    </beforeenter>
    <exit name="doorfromchapel" alias="south" to="outside chapel">
      <inherit name="southdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(thing, "attacking")) {
          msg ("You try to run through the door but the old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
          finish
        }
        else {
          MoveObject (player, outside chapel)
          play sound ("Broken Notes ~ Cold Rain of Silent Hill.mp3", false, true)
          SetObjectFlagOff (thing, "creepy")
          SetObjectFlagOff (time of day, "creepy")
        }
      ]]></script>
    </exit>
    <exit alias="north" to="chapel4">
      <inherit name="northdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(thing, "attacking")) {
          msg ("You try to run through the door but the old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
          finish
        }
        else {
          MoveObject (player, chapel4)
        }
      ]]></script>
    </exit>
    <object name="chapel door1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <kick>There is little point trying to break down the door when you already have the key.</kick>
      <break>There is little point trying to break down the door when you already have the key.</break>
      <visible />
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <alt type="stringlist">
        <value>planks</value>
        <value>oak</value>
        <value>metal</value>
        <value>gap</value>
      </alt>
      <nokeymessage>You do not have a key for the chapel.</nokeymessage>
      <lookunder>There is a small gap under the door, but it's too dark to see anything inside.</lookunder>
      <autounlock type="boolean">false</autounlock>
      <autoopen type="boolean">false</autoopen>
      <unlockmessage>The chapel door is now unlocked.</unlockmessage>
      <lockmessage>The chapel door is now locked.</lockmessage>
      <alias>chapel door</alias>
      <locked type="boolean">false</locked>
      <key type="object">chapel key</key>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The door is made from sturdy oak planks.  A simple metal handle protrudes from above the old-fashioned keyhole.  There is a small gap under the door.")
        }
      </look>
      <onopen type="script">
      </onopen>
      <onunlock type="script">
        UnlockExit (doorfromchapel)
        SetObjectFlagOff (handle1, "locked")
      </onunlock>
      <onlock type="script">
        LockExit (doorfromchapel)
        SetObjectFlagOn (handle1, "locked")
      </onlock>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="floor10">
      <alias>floor</alias>
      <alt type="stringlist">
        <value>ground</value>
        <value>floorboards</value>
        <value>boards</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The floor is made from simple wooden boards.")
        }
      </look>
    </object>
    <object name="ceiling11">
      <alias>ceiling</alias>
      <scenery />
      <alt type="stringlist">
        <value>roof</value>
        <value>beams</value>
      </alt>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The chapel's roof is simple and unassuming, with thick wooden beams running across it.")
        }
      </look>
    </object>
    <object name="walls13">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate those right now!")
        }
        else {
          msg ("The chapel's walls seem just as solid from the inside.")
        }
      </look>
    </object>
    <object name="handle1">
      <scenery />
      <alias>handle</alias>
      <takemsg>The handle is attached to the door.</takemsg>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The simple metal handle has an old-fashioned keyhole underneath it.")
        }
      </look>
      <turn type="script"><![CDATA[
        if (GetBoolean(thing, "attacking")) {
          msg ("You try to run through the door but the old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
          finish
        }
        else if (GetBoolean(handle1, "locked")) {
          msg ("The handle twists easily in your grasp, but the door is locked firmly.")
        }
        else {
          msg ("The handle twists easily in your grasp.  The door is unlocked, so you can leave the chapel if you want to.")
        }
      ]]></turn>
      <twist type="script"><![CDATA[
        if (GetBoolean(thing, "attacking")) {
          msg ("You try to run through the door but the old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
          finish
        }
        else if (GetBoolean(handle1, "locked")) {
          msg ("The handle twists easily in your grasp, but the door is locked firmly.")
        }
        else {
          msg ("The handle twists easily in your grasp.  The door is unlocked, so you can leave the chapel if you want to.")
        }
      ]]></twist>
    </object>
    <object name="dust4">
      <alias>dust</alias>
      <scenery />
      <alt type="stringlist">
        <value>footprints</value>
      </alt>
      <takemsg>That seems a bit pointless.</takemsg>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("Everything here is coated in dust, but you can make out several trails of footprints leading to and from the north door.")
        }
      </look>
    </object>
    <object name="lectern">
      <takemsg>It's far too heavy for you to lift.</takemsg>
      <scenery type="boolean">false</scenery>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The lectern isn't ornate or special in any way, just a simple wooden podium for a priest to stand behind and address the small congregation.")
        }
      </look>
    </object>
    <object name="book">
      <scenery type="boolean">false</scenery>
      <alt type="stringlist">
        <value>Bible</value>
        <value>tome</value>
        <value>New Testament</value>
      </alt>
      <takemsg>A heavy Bible does not seem particularly useful right now.</takemsg>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("You half expect the book to be some sort of demonic Necronomicon, but it is simply a copy of the New Testament.")
        }
      </look>
      <read type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("The last time you read the Bible was in primary school, and you don't think now is a particularly good time to revisit it.")
        }
      </read>
    </object>
    <object name="pews">
      <inherit name="plural" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <takemsg>They're far too heavy for you to pick up.</takemsg>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate those right now!")
        }
        else {
          msg ("Just simple wooden seats for the congregation, covered in dust like everything else inside the chapel.")
        }
      </look>
    </object>
    <object name="door3">
      <inherit name="container_open" />
      <alias>north door</alias>
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("Just a nondescript wooden door.")
        }
      </look>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="thing">
      <visible type="boolean">false</visible>
      <look>The old woman's hideous face leers at you, the wide-eyed innocence of her stare belying the vicious appearance of her teeth and claw-like fingernails.</look>
      <alt type="stringlist">
        <value>old woman</value>
        <value>creature</value>
        <value>monster</value>
        <value>woman</value>
      </alt>
      <speak>The old woman does not seem interested in anything you say.  Her mouth widens into a cruel grin as she prepares to strike.</speak>
      <kick type="script">
        msg ("You aim a kick at the old woman, but she bats your clumsy blow aside and then lunges at you, grabbing your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.")
        finish
      </kick>
      <fight type="script">
        msg ("You aim a kick at the old woman, but she bats your clumsy blow aside and then lunges at you, grabbing your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.")
        finish
      </fight>
      <battle type="script">
        msg ("You aim a kick at the old woman, but she bats your clumsy blow aside and then lunges at you, grabbing your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.")
        finish
      </battle>
      <punch type="script">
        msg ("You aim a blow at the old woman, but she bats your fist aside and then lunges at you, grabbing your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.")
        finish
      </punch>
      <attack type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the golf club, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse1)
            RemoveObject (thing)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the piece of wood, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the piece of wood, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse1)
            RemoveObject (thing)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the prosthesis, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the prosthetic arm, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("This seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the pool cue, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the cue, which has snapped in two, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
      </attack>
      <kill type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the golf club, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the piece of wood, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the piece of wood, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the prosthesis, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the prosthetic arm, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("This seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the pool cue, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the cue, which has snapped in two, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
      </kill>
      <hit type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the golf club, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the piece of wood, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the piece of wood, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the prosthesis, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the prosthetic arm, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("This seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the pool cue, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the cue, which has snapped in two, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
      </hit>
    </object>
    <object name="corpse1">
      <alias>corpse</alias>
      <scenery type="boolean">false</scenery>
      <look>The old woman's corpse lies face down, a pool of thick blood spreading from her skull where you bashed it in.</look>
      <visible type="boolean">false</visible>
      <alt type="stringlist">
        <value>blood</value>
        <value>pool</value>
        <value>dead body</value>
        <value>cadaver</value>
        <value>woman</value>
        <value>thing</value>
        <value>old woman</value>
        <value>creature</value>
        <value>monster</value>
      </alt>
      <takemsg>You don't want to touch the vile cadaver.</takemsg>
      <hit>That seems a tad unnecessary - she's definitely dead.</hit>
      <attack>That seems a tad unnecessary - she's definitely dead.</attack>
      <kick>That seems a tad unnecessary - she's definitely dead.</kick>
      <punch>That seems a tad unnecessary - she's definitely dead.</punch>
    </object>
    <object name="keyhole1">
      <alias>keyhole</alias>
      <scenery />
      <lookin>All you can see through the keyhole is darkness outside.</lookin>
      <lookthrough>All you can see through the keyhole is darkness outside.</lookthrough>
      <alt type="stringlist">
        <value>lock</value>
      </alt>
      <look type="script">
        if (GetBoolean(thing, "attacking")) {
          msg ("There's no time to investigate that right now!")
        }
        else {
          msg ("All you can see through the keyhole is darkness outside.")
        }
      </look>
    </object>
    <object name="gap2">
      <alias>gap</alias>
      <scenery />
      <look>There is a small gap under the door, but it's too dark to see anything inside.</look>
    </object>
  </object>
  <object name="graveyard1">
    <alias>graveyard</alias>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>About a hundred graves surround you.  Grass and weeds thrust disrespectfully up amongst the headstones, adding to the cemetery's forgotten, neglected appearance.  The endless rain makes the scene seem even more melancholic.<br/><br/>To the west stands the chapel, and the way back through thee trees.  The forest surrounds you on all other sides.<br/><br/>(they come out of the trees at night)<br/>")
      }
      else {
        msg ("<br/>About a hundred graves surround you.  Grass and weeds thrust disrespectfully up amongst the headstones, adding to the cemetery's forgotten, neglected appearance.  The rabbits are equally disinterested in honouring the dead, and hop around happily.<br/><br/>To the west stands the chapel, and the way back through the trees.  The forest surrounds you on all other sides.<br/>")
      }
    ]]></description>
    <exit alias="west" to="outside chapel">
      <inherit name="westdirection" />
    </exit>
    <object name="chapel3">
      <scenery />
      <look>The chapel is an old, squat building built from grey bricks.</look>
      <drop />
    </object>
    <object name="rabbits9">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="trees9">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground17">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>grass</value>
        <value>weeds</value>
      </alt>
      <scenery />
      <look>Weeds and tufts of grass sprout haphazardly amongst the gravestones.</look>
    </object>
    <object name="graveyard2">
      <alt type="stringlist">
        <value>cemetery</value>
      </alt>
      <scenery />
      <look>The gravestones huddle together as if trying to protect each other from the cold.</look>
      <alias>graveyard</alias>
    </object>
    <object name="gravestones1">
      <inherit name="plural" />
      <alt type="stringlist">
        <value>headstones</value>
      </alt>
      <scenery />
      <look>The gravestones huddle together as if trying to protect each other from the cold.</look>
      <read>The names have worn away over time almost to illegibility, as though mirroring the slow fading of the deceased from living memory.</read>
      <alias>gravestones</alias>
    </object>
    <object name="sky18">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain18">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <command name="dig1">
    <pattern>dig #text#</pattern>
    <unresolved type="string"></unresolved>
    <script>
      msg ("You'd prefer to leave that to the bunnies!")
    </script>
  </command>
  <command name="dig2">
    <pattern>dig</pattern>
    <script>
      msg ("You'd prefer to leave that to the bunnies!")
    </script>
  </command>
  <command name="shout2">
    <pattern>shout</pattern>
    <script>
      msg ("You make a loud noise, but hear only a haunting echo in reply.")
    </script>
  </command>
  <command name="yell2">
    <pattern>yell</pattern>
    <script>
      msg ("You make a loud noise, but hear only a haunting echo in reply.")
    </script>
  </command>
  <command name="scream2">
    <pattern>scream</pattern>
    <script>
      msg ("You make a loud noise, but hear only a haunting echo in reply.")
    </script>
  </command>
  <object name="village">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>bombed out village</alias>
    <beforefirstenter type="script"><![CDATA[
      msg ("You emerge from the woods into a huge clearing full of small, ruined buildings.  This must be where the island-dwellers lived before it was destroyed.<br/>")
    ]]></beforefirstenter>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>It is frightening in the darkness, the misshapen husk of each wrecked building looking like a slumbering monster.<br/><br/>To the southwest, a single building seems to have survived the bombing.<br/><br/>To the south, a pathway leads back into the woods.<br/><br/>To the east, a steep slope leads straight down to the sea.<br/><br/>To the west the trees form an impenetrable barrier.<br/><br/>To the north, another pathway leads into the forest - you can't make it out, but you can feel the looming presence of the asylum above the trees.<br/>")
      }
      else {
        msg ("<br/>Rabbits are hopping amongst the wrecked houses around you.<br/><br/>To the southwest, a single building seems to have survived the bombing.<br/><br/>To the south, a pathway leads back into the woods.<br/><br/>To the east, a steep slope leads straight down to the sea.<br/><br/>To the west the trees form an impenetrable barrier.<br/><br/>To the north you can just make out the huge, imposing shape of the asylum looming above the forest.  Another pathway leads into the trees towards it.<br/>")
      }
    ]]></description>
    <exit alias="south" to="pathway5">
      <inherit name="southdirection" />
    </exit>
    <object name="rabbits12">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="trees10">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground18">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>grass</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The ground's long thirst is being sated by the downpour, the dusty earth turning to sludge beneath your feet.")
        }
        else {
          msg ("The ground is dusty and dry, with brown grass struggling to survive against the daily baking of the sun as it rises to the east.")
        }
      </look>
    </object>
    <object name="ruins">
      <inherit name="plural" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <alt type="stringlist">
        <value>buildings</value>
        <value>houses</value>
        <value>bricks</value>
        <value>homes</value>
        <value>village</value>
      </alt>
      <look>All of the buildings are virtually obliterated, the simple red-brick structures reduced to piles of blackened rubble, apart from one modest dwelling to the southwest that has remained more or less intact.</look>
    </object>
    <object name="mist16">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <look>The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.</look>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
    </object>
    <object name="dwelling">
      <alt type="stringlist">
        <value>house</value>
        <value>home</value>
        <value>roof</value>
        <value>doorway</value>
        <value>windows</value>
        <value>dwelling</value>
        <value>building</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <look>The one surviving building is a simple two-storey structure to the southwest.  There is no glass in the windows and no door attached to the entrance.  Its roof has caved in onto the upper floor but the lower storey is easily accessible if you decide to take the risk.</look>
      <visible />
      <alias>partially collapsed house</alias>
    </object>
    <exit name="doorway to house" alias="southwest" to="ruined house">
      <inherit name="southwestdirection" />
      <visible />
    </exit>
    <object name="asylum">
      <alt type="stringlist">
        <value>museum</value>
      </alt>
      <scenery />
      <look>The asylum/museum towers above the trees, a dark and malevolent shape like a slumbering monster.</look>
    </object>
    <exit alias="north" to="woodland crossroads">
      <inherit name="northdirection" />
    </exit>
    <object name="signpost">
      <scenery type="boolean">false</scenery>
      <look>The sign is somewhat faded, and the winking bunny rabbit logo in the corner in rather poor taste, but the story of the Nazi bombing raid that destroyed the village and killed hundreds of island-dwellers is told in eloquent detail.  You wonder why the Germans would have targeted such an insignificant and difficult-to-reach location.</look>
      <alt type="stringlist" />
      <read>The sign is somewhat faded, and the winking bunny rabbit logo in the corner in rather poor taste, but the story of the Nazi bombing raid that destroyed the village and killed hundreds of island-dwellers is told in eloquent detail.  You wonder why the Germans would have targeted such an insignificant and difficult-to-reach location.</read>
    </object>
    <object name="sky19">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="sea8">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The ocean is an ominous black expanse to the east.")
        }
        else {
          msg ("The ocean is quickly swallowed up by the mist.")
        }
      </look>
    </object>
    <object name="rain19">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
    <object name="rabbitsX17">
      <inherit name="plural" />
      <scenery />
      <look><![CDATA[The rabbits do not move, even when you point your torch at them.  Somehow they look monstrous, rabid, as though their mouths are about to yawn open to reveal rows of fangs.<br/>]]></look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>You don't want to touch them.</kick>
      <hit>You don't want to touch them.</hit>
      <hurt>You don't want to touch them.</hurt>
      <stroke>You don't want to touch them.</stroke>
      <feed>You don't want to touch them.</feed>
      <pet>You don't want to touch them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
      <scare>The rabbits do not seem frightened of you at all.</scare>
      <frighten>The rabbits do not seem frightened of you at all.</frighten>
      <move>You don't want to touch them.</move>
      <kill>You don't want to touch them.</kill>
    </object>
  </object>
  <object name="ruined house">
    <description><![CDATA[<br/>Inside the simple structure you find a couple of rooms, and a wooden staircase blocked with rubble from the upper floor.  One of the rooms - which might once have been a kitchen area - is completely empty, but the larger living room has some odd things in it.<br/>]]></description>
    <exit alias="northeast" to="village">
      <inherit name="northeastdirection" />
    </exit>
    <object name="rabbits13">
      <alias>rabbits</alias>
      <scenery />
      <look>There are no rabbits inside the house.</look>
    </object>
    <object name="ground19">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>floorboards</value>
      </alt>
      <scenery />
      <look>Simple wooden floorboards creak beneath your feet.</look>
    </object>
    <object name="circle of stones">
      <alt type="stringlist">
        <value>campfire</value>
        <value>fire</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <takemsg>The stones would make your bag far too heavy.</takemsg>
      <look type="script"><![CDATA[
        if (ListContains(ScopeVisible(), man)) {
          msg ("No time to go poking around now - you need to get out of here before the man wakes up!")
        }
        else if (GetBoolean(blackened meat, "found")) {
          msg ("This looks as though it was once used as a campfire of some sort.  Another explorer must have been here, but it seems risky to say the least to light a fire in a collapsing building with a wooden floor!")
        }
        else {
          msg ("This looks as though it was once used as a campfire of some sort.  Another explorer must have been here, but it seems risky to say the least to light a fire in a collapsing building with a wooden floor!<br/><br/>Amongst the ashes you can see the blackened remnants of what might be cooked meat.")
          MakeObjectVisible (blackened meat)
          SetObjectFlagOn (blackened meat, "found")
        }
      ]]></look>
    </object>
    <object name="doorway">
      <scenery />
      <look>To the northeast, the open doorway leads back out into the village.</look>
    </object>
    <object name="blackened meat">
      <visible type="boolean">false</visible>
      <alt type="stringlist">
        <value>meat</value>
        <value>remnants</value>
        <value>remains</value>
      </alt>
      <take type="boolean">false</take>
      <takemsg>You do not find the idea of carrying around some rotting meat remotely appealing.</takemsg>
      <eat>You'd have to be utterly starving before you'd consider eating that!</eat>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("You dread to think what the meat might be...")
        }
        else {
          msg ("The meat looks tough and gamey and thoroughly unappetising.")
        }
      </look>
    </object>
    <object name="pile of straw">
      <alt type="stringlist">
        <value>pile</value>
        <value>straw</value>
        <value>mattress</value>
        <value>bed</value>
      </alt>
      <takemsg>You do not want to carry around a load of manky old straw.</takemsg>
      <look type="script"><![CDATA[
        if (ListContains(ScopeVisible(), man)) {
          msg ("The man is still sleeping soundly - better get out of here before he wakes up.")
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("You aim your torch towards the makeshift mattress... and are horrified to see someone asleep on it!!<br/><br/>It seems to be a man, lying on his side and facing away from you.  His lower half is dressed in torn jeans, but his upper half is naked, his broad back covered only by the long strands of dirty black hair hanging from his head.  Where the flesh is visible, you can see it is covered with strange growths and discolourations.  Despite these strange afflictions he is powerfully built, and the long, muscular arm that lays along his side is almost simian in appearance, including the oversized hand at the end of it.<br/><br/>As you stare at him, he suddenly jerks in his sleep, nearly causing you to cry out.  Mercifully, he settles again, but as he does so the item clutched in his huge hand drops to the floor behind him... it is a screwdriver.  You suspect he wasn't planning to use it to do some DIY.<br/>")
          MakeObjectVisible (screwdriver)
          MakeObjectVisible (man)
        }
        else {
          msg ("The straw looks as though it might have been used as a bed - surely an explorer planning to stay the night would have had the sense to bring a sleeping bag??")
        }
      ]]></look>
    </object>
    <object name="walls2">
      <alias>walls</alias>
      <visible />
      <scenery />
      <look>The walls seem sturdy enough, but you are a little worried about the whole thing collapsing on your head...</look>
    </object>
    <object name="ceiling">
      <scenery />
      <look>You hope the ceiling will hold up the weight of the collapsed roof... at least until you've left!</look>
    </object>
    <object name="staircase">
      <alt type="stringlist">
        <value>stairs</value>
        <value>steps</value>
      </alt>
      <scenery />
      <look>The wooden staircase is blocked by a heap of rubble at the top, barring entry to the upper floor.</look>
      <climb>The wooden staircase is blocked by a heap of rubble at the top, barring entry to the upper floor.</climb>
      <ascend>The wooden staircase is blocked by a heap of rubble at the top, barring entry to the upper floor.</ascend>
    </object>
    <object name="rubble">
      <scenery />
      <look>The entire upper floor of the building has been destroyed, and chunks of rubble bar your way up the stairs.</look>
      <takemsg>The chunks of debris are too heavy for you to lift.</takemsg>
      <move>The chunks of debris are too heavy for you to lift.</move>
    </object>
    <object name="ashes">
      <inherit name="plural" />
      <visible type="boolean">false</visible>
      <look>The ashes of the fire are a black and grey pattern, like static on a TV screen.</look>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <scenery />
      <takemsg>You don't want to fill your bag with ash.</takemsg>
      <alt type="stringlist">
        <value>ash</value>
      </alt>
    </object>
    <object name="man">
      <visible type="boolean">false</visible>
      <alt type="stringlist">
        <value>creature</value>
        <value>figure</value>
        <value>monster</value>
        <value>person</value>
        <value>jeans</value>
        <value>arms</value>
        <value>legs</value>
        <value>back</value>
        <value>hair</value>
        <value>head</value>
      </alt>
      <look><![CDATA[The man is still asleep.  You hope he doesn't roll over to face you... in case his face is not entirely human.<br/>]]></look>
      <kick>Are you insane??  The last thing you want to do is wake him up!</kick>
      <hit>Are you insane??  The last thing you want to do is wake him up!</hit>
      <wake>Are you insane??  The last thing you want to do is wake him up!</wake>
      <awaken>Are you insane??  The last thing you want to do is wake him up!</awaken>
      <shake>Are you insane??  The last thing you want to do is wake him up!</shake>
      <touch>Are you insane??  The last thing you want to do is wake him up!</touch>
      <poke>Are you insane??  The last thing you want to do is wake him up!</poke>
      <prod>Are you insane??  The last thing you want to do is wake him up!</prod>
      <kill>You can't just murder a sleeping man... if it even is a man...</kill>
    </object>
    <object name="screwdriver">
      <visible type="boolean">false</visible>
      <look>It's a screwdriver with a very thin blade.  You hope that the reddish muck caking it is only rust.</look>
      <takemsg>You carefully pick up the screwdriver and put it into your pocket.</takemsg>
      <dropmsg>You drop the screwdriver on the ground.</dropmsg>
      <feature_usegive />
      <take />
      <ontake type="script">
      </ontake>
      <ondrop type="script">
      </ondrop>
      <selfuseon type="scriptdictionary">
        <item key="keyhole">
          if (GetBoolean(piece of paper, "on the floor without key")) {
            msg ("You insert the screwdriver blade into the keyhole, and hear a soft thump as whatever was stuck in the other end falls out on the other side.")
            MoveObject (screwdriver, player)
            SetObjectFlagOff (piece of paper, "on the floor without key")
            SetObjectFlagOn (piece of paper, "on the floor with key")
            SetObjectFlagOn (keyhole, "cleared")
          }
          else if (GetBoolean(piece of paper, "on the floor with key")) {
            msg ("You've already pushed whatever was stuck in the keyhole out onto the paper on the other side.")
          }
          else if (GetBoolean(piece of paper, "on the floor with key outside")) {
            msg ("You've already obtained the key from under the door.")
          }
          else if (Got(chapel key)) {
            msg ("You've already got the key.")
          }
          else {
            msg ("If you do that, then whatever is blocking the keyhole might fall out on the other side - wouldn't it be better to have something to catch it with?")
          }
        </item>
      </selfuseon>
    </object>
  </object>
  <verb>
    <property>ascend</property>
    <pattern>ascend</pattern>
    <defaultexpression>"You can't ascend " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>enter</property>
    <pattern>enter</pattern>
    <defaultexpression>"You can't enter " + object.article + "."</defaultexpression>
  </verb>
  <object name="woodland crossroads">
    <descprefix>You are at</descprefix>
    <description><![CDATA[<br/>Pathways branch out into the trees in several directions.  To the south you can discern the outline of ruined buildings.<br/><br/>To the east, an overgrown path leads towards a particularly large ruin.<br/><br/>To the west, a winding path disappears into the undergrowth.<br/><br/>To the northeast, another pathway ascends a steep hill.<br/><br/>To the north stands the asylum.<br/>]]></description>
    <exit alias="south" to="village">
      <inherit name="southdirection" />
    </exit>
    <object name="trees11">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground20">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>paths</value>
        <value>track</value>
        <value>crossroads</value>
      </alt>
      <look>A number of pathways crisscross at your feet.</look>
      <scenery />
    </object>
    <object name="asylum1">
      <alt type="stringlist">
        <value>museum</value>
      </alt>
      <scenery />
      <look>A short way to the north, the path emerges from the trees and opens out into the asylum's large gravel driveway.  The building is bigger than you imagined, its dark brown brickwork the colour of burnt meat.</look>
    </object>
    <exit alias="east" to="outside the power plant">
      <inherit name="eastdirection" />
    </exit>
    <object name="ruin">
      <scenery />
      <alt type="stringlist">
        <value>building</value>
        <value>power plant</value>
      </alt>
      <look>The ruin to the east was once an imposing, cubic building, now blackened and partially destroyed.  A high metal fence surrounds it.</look>
    </object>
    <object name="fence6">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
      </alt>
      <look>The fence is perhaps ten feet high, and has sharpened points at its top.</look>
      <climb>You will need to head east to get to the fence.</climb>
      <scenery />
    </object>
    <exit alias="northeast" to="steep hill">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="west" to="winding path">
      <inherit name="westdirection" />
    </exit>
    <exit alias="north" to="outside the gate to the asylum">
      <inherit name="northdirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("There is no way you're going back near that building, in the dark.")
        }
        else {
          MoveObject (player, outside the gate to the asylum)
        }
      </script>
    </exit>
    <object name="sky20">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain20">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the power plant">
    <descprefix>You are</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>The partially collapsed structure stands to the east, and is surrounded by a high steel fence.  The trees press in against the fence from all angles, as though trying to destroy the crumbling eyesore once and for all.<br/><br/>The rabbits either aren't interested in the building or are hiding from you, as you can't see any around here.]]></description>
    <beforefirstenter type="script"><![CDATA[
      msg ("As you approach the structure, you see another signpost placed by Hardacre for the benefit of his tourists.  It informs you that this was once the island's power plant.<br/>")
    ]]></beforefirstenter>
    <exit alias="west" to="woodland crossroads">
      <inherit name="westdirection" />
    </exit>
    <object name="fence7">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>spikes</value>
        <value>points</value>
      </alt>
      <look>The fence is perhaps ten feet high, and has sharpened points at its top.</look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="trees12">
      <inherit name="plural" />
      <look>The trees around the power plant look more sickly and gnarled than the others you have seen, dark branches reaching through the fence like grasping fingers.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ruin1">
      <scenery type="boolean">false</scenery>
      <alt type="stringlist">
        <value>building</value>
        <value>power plant</value>
        <value>structure</value>
      </alt>
      <look>The power plant is a dour, functional structure.  Its door is still intact, but there is no glass in the windows, and weeds and ivy seem to be doing their best to suffocate it.</look>
      <alias>ruined building</alias>
    </object>
    <object name="weeds">
      <inherit name="plural" />
      <scenery />
      <alt type="stringlist">
        <value>ivy</value>
      </alt>
      <look>The rampant undergrowth seems determined to drag the ruined power station down into the earth.</look>
    </object>
    <object name="sky21">
      <scenery />
      <look>The canopy of the trees is so tightly woven above your head that you can barely see the sky.</look>
    </object>
    <object name="ground21">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
        <value>earth</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="signpost1">
      <alias>signpost</alias>
      <scenery type="boolean">false</scenery>
      <look>The signpost explains that the power plant was used for all electricity on the island, and provided jobs for many of the villagers.  Its primary purpose was, of course, to enable the operation of the asylum itself - as well as the lighthouse in the island's northeast corner.</look>
      <read>The signpost explains that the power plant was used for all electricity on the island, and provided jobs for many of the villagers.  Its primary purpose was, of course, to enable the operation of the asylum itself - as well as the lighthouse in the island's northeast corner.</read>
    </object>
    <object name="door">
      <scenery />
      <look>The metal door hangs open, and a featureless corridor leads into the plant.</look>
      <alt type="stringlist">
        <value>metal</value>
        <value>corridor</value>
        <value>doorway</value>
      </alt>
    </object>
    <exit alias="east" to="power plant">
      <inherit name="eastdirection" />
      <locked />
      <lockmessage>There seems to be no gate, or other way past the high fence.</lockmessage>
    </exit>
    <object name="piece of timber">
      <alt type="stringlist" />
      <visible />
      <look>The sturdy plank of wood rests against the fence, a few rusty nails jutting out of the end.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <attr name="feature_usegive" type="boolean">false</attr>
      <take type="boolean">false</take>
      <drop type="boolean">false</drop>
      <ontake type="script">
        armed = 1
      </ontake>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
      </selfuseon>
    </object>
    <object name="piece of timber2">
      <alt type="stringlist" />
      <visible type="boolean">false</visible>
      <look>A few rusty nails stick out of the end of the long plank - it could make a clumsy but nasty weapon.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <feature_usegive />
      <alias>piece of timber</alias>
      <take type="script">
        if (GetBoolean(weapon, "armed")) {
          msg ("You are already carrying a weapon.")
        }
        else {
          msg ("After what you've seen so far on the island, you decide to forego your usual ban on taking souvenirs, and snatch the weapon from the ground.")
          SetObjectFlagOn (weapon, "armed")
          AddToInventory (piece of timber2)
        }
      </take>
      <ontake type="script">
        armed = 1
      </ontake>
      <drop type="script">
        msg ("You drop the plank on the ground.")
        SetObjectFlagOff (weapon, "armed")
        MoveObjectHere (piece of timber2)
      </drop>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
        <item key="thing"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the piece of wood, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the piece of wood, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse1)
            RemoveObject (thing)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="thing1"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the plank of wood at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has snapped cleanly in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </selfuseon>
    </object>
    <object name="rain21">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="steep hill">
    <descprefix>You are on</descprefix>
    <description><![CDATA[<br/>The path leads down towards a crossroads to the southwest, or sharply up through the trees to the northeast where you can make out the painted white cylinder of a small lighthouse.  A few rabbits are huddled together underneath a nearby bush.<br/>]]></description>
    <exit alias="southwest" to="woodland crossroads">
      <inherit name="southwestdirection" />
    </exit>
    <object name="ground22">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>The pathway beneath your feet is wider than the ones to the south, and more clearly visible.</look>
      <scenery />
    </object>
    <object name="trees13">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>bushes</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="rabbits14">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits are cute, but they also look a little skinny and undernourished, as if they are wasting away along with their ghostly hometown.</look>
      <takemsg>The rabbits are quite friendly, but run away if you try to pick them up.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits will let you pet them if you are gentle and don't move too quickly.  You begin to feel guilty for not bringing any food for them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="lighthouse">
      <scenery type="boolean">false</scenery>
      <look>You can't see much of the lighthouse from here, except that it is white.</look>
    </object>
    <exit alias="northeast" to="outside the lighthouse">
      <inherit name="northeastdirection" />
    </exit>
    <object name="sky22">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rabbitsX5">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits shrink from the light of your torch, and you can't help but feel strangely frightened of them - as though they are somehow unnatural, monsters scurrying about in the darkness.  You think you might scream if one of them approaches you.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible type="boolean">false</visible>
    </object>
    <object name="rain22">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the lighthouse">
    <descprefix>You are</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(time of day, "nightfall4")) {
        msg ("<br/>The simple structure stands before you, to the north.  It is painted white and seems to have escaped the attentions of the graffiti artists and other vandals, at least from the outside.<br/><br/>On all other sides high cliffs fall away towards the sea, although the darkness prevents you from seeing the water at all.<br/>")
      }
      else {
        msg ("<br/>The simple structure stands before you, to the north.  It is painted white and seems to have escaped the attentions of the graffiti artists and other vandals, at least from the outside.<br/><br/>On all other sides high cliffs fall away towards the sea, although the mist prevents you from seeing the water at all.<br/>")
      }
    ]]></description>
    <exit alias="southwest" to="steep hill">
      <inherit name="southwestdirection" />
    </exit>
    <object name="ground23">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>The lighthouse is encircled by a stone path.</look>
      <scenery />
    </object>
    <object name="rabbit1">
      <alias>rabbit</alias>
      <scenery />
      <look>The rabbit looks much fatter than the others you've seen, and stares at you rather eerily through red albino eyes.</look>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <feed>You have no food to give to the rabbit.</feed>
      <stroke>The rabbit doesn't seem to like to be touched, and edges away when you try to stroke it... but then hops back to the same spot beside the door.</stroke>
      <pet>The rabbit doesn't seem to like to be touched, and edges away when you try to stroke it... but then hops back to the same spot beside the door.</pet>
      <alt type="stringlist">
        <value>white rabbit</value>
      </alt>
    </object>
    <exit name="door to lighthouse" alias="north" to="lighthouse1">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <object name="mist23">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <look>The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.</look>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
    </object>
    <object name="trees14">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>bushes</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="lighthouse2">
      <scenery type="boolean">false</scenery>
      <look>The building rises towards the sky above you.  A single white rabbit sits near the metal doorway, as if guarding it.</look>
      <alias>lighthouse</alias>
    </object>
    <object name="door99">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look>The simple metal doorway is coated in rust.  A keyhole is beneath the handle.  Nearby, a single white rabbit sits watching you.</look>
      <kick>The door is solid metal - you won't make a dent.</kick>
      <break>The door is solid metal - you won't make a dent.</break>
      <visible />
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alt type="stringlist">
        <value>metal</value>
        <value>rust</value>
      </alt>
      <knockon>Nothing happens when you knock on the door.  The albino rabbit watches you intently, never seeming to blink.</knockon>
      <nokeymessage>You do not have a key for the lighthouse door.</nokeymessage>
      <alias>door</alias>
      <autounlock type="boolean">false</autounlock>
      <autoopen type="boolean">false</autoopen>
      <unlockmessage>The door unlocks with a click.</unlockmessage>
      <lockmessage>You lock the door once again.</lockmessage>
      <key type="object">lighthouse key</key>
      <onopen type="script">
      </onopen>
      <onlock type="script">
        LockExit (door to lighthouse)
        SetObjectFlagOff (lock1, "unlocked")
      </onlock>
      <onunlock type="script">
        UnlockExit (door to lighthouse)
        SetObjectFlagOn (lock1, "unlocked")
      </onunlock>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="lock1">
      <alias>lock</alias>
      <alt type="stringlist">
        <value>keyhole</value>
        <value>handle</value>
      </alt>
      <scenery />
      <look>There is a keyhole beneath the door handle.</look>
      <lookthrough>It is too dark to see anything on the other side.</lookthrough>
      <lookin>It is too dark to see anything on the other side.</lookin>
      <turn type="script">
        if (GetBoolean(lock1, "unlocked")) {
          msg ("The handle turns easily in your grasp.")
        }
        else {
          msg ("The handle turns easily in your grasp, but the door remains locked.")
        }
      </turn>
      <twist type="script">
        if (GetBoolean(lock1, "unlocked")) {
          msg ("The handle turns easily in your grasp.")
        }
        else {
          msg ("The handle turns easily in your grasp, but the door remains locked.")
        }
      </twist>
    </object>
    <object name="sea10">
      <alt type="stringlist">
        <value>ocean</value>
        <value>water</value>
        <value>waves</value>
      </alt>
      <look>The sea far below is obscured from view by the seething mist.</look>
      <scenery />
    </object>
    <object name="cliffs">
      <scenery />
      <look>The cliff edges looks dangerous, so you stay decide to stay well clear of them.</look>
    </object>
    <object name="sky23">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="signpost2">
      <scenery type="boolean">false</scenery>
      <look>The faded sign explains that the lighthouse helped to ensure that boats could arrive safely to deposit their cargoes on the island, which were of course sometimes human... you shudder at the thought of the confused wretches being led into the grounds of the asylum, to await who knew what fate within its dark walls.</look>
      <alt type="stringlist" />
      <read>The faded sign explains that the lighthouse helped to ensure that boats could arrive safely to deposit their cargoes on the island, which were of course sometimes human... you shudder at the thought of the confused wretches being led into the grounds of the asylum, to await who knew what fate within its dark walls.</read>
      <alias>signpost</alias>
    </object>
    <object name="rain23">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="lighthouse1">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>lighthouse</alias>
    <prefix>the</prefix>
    <description><![CDATA[<br/>It is pitch dark inside, and somehow the darkness here feels THICKER, the light from your torch seeming to penetrate even less deeply than outside.  You can make out a spiral staircase that leads upwards around the edge of the cylindrical structure.  The room you are in is featureless except for a trapdoor set into the centre of the floor.  No... not featureless.  There is a trail of blood leading away from the trapdoor and up the stairs.<br/>]]></description>
    <enter type="script">
      stop sound
    </enter>
    <exit alias="south" to="outside the lighthouse">
      <inherit name="southdirection" />
      <runscript />
      <script type="script">
        msg ("There seems little point in going back outside in the rain.")
      </script>
    </exit>
    <object name="spiral staircase">
      <look>A set of metal steps with a handrail leads to the top of the lighthouse.  The steps are slick with blood, a trail of which leads from the foot of the staircase to the trapdoor.</look>
      <alt type="stringlist">
        <value>stairs</value>
        <value>steps</value>
        <value>handrail</value>
      </alt>
      <climb type="script">
        MoveObject (player, top of the staircase)
      </climb>
      <ascend type="script">
        MoveObject (player, top of the staircase)
      </ascend>
    </object>
    <object name="ceiling13">
      <alias>ceiling</alias>
      <scenery />
      <look>The staircase spirals up into darkness above - the ceiling is too far away for your torch to reach.</look>
    </object>
    <object name="floor12">
      <alias>floor</alias>
      <look>The floor is cobbled stone, featureless other than the trapdoor in the centre of the room, and the trail of blood leading away from it.</look>
      <scenery />
      <alt type="stringlist">
        <value>ground</value>
      </alt>
    </object>
    <object name="walls15">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The curved walls of the lighthouse encircle you with stone.</look>
    </object>
    <object name="trapdoor1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <visible />
      <look>Just a simple wooden trapdoor, with a heavy metal ring attached to enable it to be pulled open.  There is a keyhole next to the ring.  A trail of blood leads away from the trapdoor and up the stairs.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <nokeymessage>The trapdoor is locked.</nokeymessage>
      <locked />
      <unlockmessage>The trapdoor is now unlocked.</unlockmessage>
      <lockmessage>The trapdoor is now locked.</lockmessage>
      <alias>trapdoor</alias>
      <knockon>Nothing happens.</knockon>
      <key type="object">trapdoor key</key>
      <onunlock type="script">
        MakeExitVisible (exittocatacombs)
      </onunlock>
      <onlock type="script">
        MakeExitInvisible (exittocatacombs)
      </onlock>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="blood1">
      <alias>blood</alias>
      <scenery />
      <look>The steps are slick with blood, a trail of which leads from the foot of the staircase to the trapdoor.</look>
    </object>
    <object name="door5">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look>The simple metal doorway is coated in rust.</look>
      <kick>The door is solid metal - you won't make a dent.</kick>
      <break>The door is solid metal - you won't make a dent.</break>
      <visible />
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alt type="stringlist">
        <value>metal</value>
        <value>rust</value>
      </alt>
      <knockon>Nothing happens.</knockon>
      <nokeymessage>You do not have a key for the lighthouse door.</nokeymessage>
      <alias>door</alias>
      <autounlock type="boolean">false</autounlock>
      <autoopen type="boolean">false</autoopen>
      <unlockmessage>The door unlocks with a click.</unlockmessage>
      <lockmessage>You lock the door once again.</lockmessage>
      <locked type="boolean">false</locked>
      <key type="object">lighthouse key</key>
      <onopen type="script">
      </onopen>
      <onlock type="script">
      </onlock>
      <onunlock type="script">
      </onunlock>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit name="exittocatacombs" alias="down" to="catacombs 1">
      <inherit name="downdirection" />
      <visible type="boolean">false</visible>
      <runscript />
      <script type="script"><![CDATA[
        msg ("Stifling an urge to simply scream and flee back out into the island, you steel your nerves and descend the metal ladder that is set into the wall beneath the trapdoor.  It leads you down what feel like hundreds of steps before your feet finally touch down on stone.<br/>")
        MoveObject (player, catacombs 1)
      ]]></script>
    </exit>
    <exit alias="up" to="top of the staircase">
      <inherit name="updirection" />
    </exit>
    <object name="lock2">
      <alias>lock</alias>
      <alt type="stringlist">
        <value>keyhole</value>
        <value>handle</value>
      </alt>
      <scenery />
      <look>There is a keyhole beneath the door handle.</look>
      <lookthrough>It is too dark to see anything on the other side.</lookthrough>
      <lookin>It is too dark to see anything on the other side.</lookin>
      <turn type="script">
        if (GetBoolean(lock1, "unlocked")) {
          msg ("The handle turns easily in your grasp.")
        }
        else {
          msg ("The handle turns easily in your grasp, but the door remains locked.")
        }
      </turn>
      <twist type="script">
        if (GetBoolean(lock1, "unlocked")) {
          msg ("The handle turns easily in your grasp.")
        }
        else {
          msg ("The handle turns easily in your grasp, but the door remains locked.")
        }
      </twist>
    </object>
  </object>
  <object name="winding path">
    <descprefix>You are on</descprefix>
    <description><![CDATA[<br/>It meanders through the trees from east to west.<br/><br/>To the north, the path runs alongside a high metal fence, topped with vicious-looking sharpened spikes.<br/><br/>To the south the trees are knotted into an impassable barrier, meaning the pathway is effectively walled in on both sides.<br/>]]></description>
    <beforefirstenter type="script">
    </beforefirstenter>
    <firstenter type="script">
    </firstenter>
    <exit alias="east" to="woodland crossroads">
      <inherit name="eastdirection" />
    </exit>
    <object name="trees15">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground24">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a winding path alongside the asylum grounds.</look>
      <scenery />
    </object>
    <object name="rabbits15">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits look very comfortable lazing around in the grass.</look>
      <takemsg>You can't reach the rabbits through the fence.</takemsg>
      <kick>You can't reach the rabbits through the fence.</kick>
      <hit>You can't reach the rabbits through the fence.</hit>
      <hurt>You can't reach the rabbits through the fence.</hurt>
      <stroke>You can't reach the rabbits through the fence.</stroke>
      <feed>You can't reach the rabbits through the fence.</feed>
      <pet>You can't reach the rabbits through the fence.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="fence8">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>spikes</value>
        <value>points</value>
      </alt>
      <look><![CDATA[The fence is about twelve feet high, and the sharpened points at its top look unforgiving.<br/><br/>The view through the bars is not much more welcoming than the imposing fence itself - you can see a huge stretch of lawn, but the grass is overgrown and riddled with weeds and streaks of brownish rot.]]></look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <exit alias="west" to="outside a house">
      <inherit name="westdirection" />
    </exit>
    <object name="bars">
      <alt type="stringlist">
        <value>bees</value>
        <value>grass</value>
        <value>grounds</value>
        <value>lawn</value>
        <value>weeds</value>
        <value>rot</value>
      </alt>
      <scenery />
      <look type="script"><![CDATA[
        if (ListContains(ScopeVisible(), figure)) {
          msg ("You can no longer see the bizarre figure through the bars.  You hope it can't find a way to escape from the grounds.")
        }
        else if (GetBoolean(time of day, "nightfall4")) {
          msg ("The view through the bars is not much more welcoming than the imposing fence itself - you can see a huge stretch of lawn, but the grass is overgrown and riddled with weeds and streaks of brownish rot.<br/><br/>As you move your torch beam slowly to the right, you illuminate a stooped figure, like a man bending down to examine the grass.  As you watch, the figure shuffles slowly forwards, still bent over at the waist... and you realise that it is completely naked.  The head is covered by a metal contraption of some sort, like one of the things you have to wear to keep your head upright when you suffer a serious neck injury... you wonder if it is the weight of this device that is causing him to bend down in such an uncomfortable manner.  Still, he seems able to turn his head from side to side, which he does repeatedly with each ponderous and painful-looking step.  You are struck by the nauseating idea of him sniffing the ground, like a dog... trying to pick up a scent.  Mercifully, after several more shambling steps, he disappears from view into the darkness.")
          MakeObjectVisible (figure)
        }
        else {
          msg ("The view through the bars is not much more welcoming than the imposing fence itself - you can see a huge stretch of lawn, but the grass is overgrown and riddled with weeds and streaks of brownish rot.<br/><br/>To the northeast you can make out the asylum looming over the landscape, and realise that you are looking out across its expansive grounds.  You stop to observe the scene for a moment, half expecting to see muttering inmates shambling along the fence towards you.  But instead the only creatures you can make out are a few bees searching vainly for pollen... and, of course, the rabbits.")
        }
      ]]></look>
    </object>
    <object name="asylum2">
      <alias>asylum</alias>
      <scenery />
      <alt type="stringlist">
        <value>museum</value>
      </alt>
      <look>The brooding gothic menace of the old asylum feels almost tangible.</look>
    </object>
    <object name="sky24">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="figure">
      <alt type="stringlist">
        <value>man</value>
        <value>monster</value>
        <value>creature</value>
      </alt>
      <look>The disturbing figure has mercifully shuffled out of view.</look>
      <scenery />
      <visible type="boolean">false</visible>
    </object>
    <object name="rain24">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside a house">
    <descprefix>You are</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>The woodland path opens out into a gravel driveway, which leads through a closed gate and into the house to the west.<br/><br/>The building is large and looks fairly new, and is surrounded by a high wall topped with broken glass.  It looks as though security was a concern for whoever built or restored this property.<br/><br/>The wall seems to have kept the rabbits away too - you can't see any of them around.<br/><br/>]]></description>
    <exit alias="east" to="winding path">
      <inherit name="eastdirection" />
    </exit>
    <object name="trees16">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
      </alt>
      <alias>trees</alias>
    </object>
    <object name="ground25">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="fence9">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>broken glass</value>
        <value>walls</value>
      </alt>
      <look>The wall is about ten feet high, and the broken glass sprinkled along the top ruins the welcoming aspect of the house itself.  You wonder if this was Hardacre's house, before he disappeared - but why would he have needed such drastic security measures?  He only moved here long after the island's inmates were wiped out...</look>
      <climb>You don't want to cut yourself on the broken glass.</climb>
      <scenery />
    </object>
    <object name="gate2">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alias>gate</alias>
      <scenery />
      <look>The gate has sharp spikes along the top, and looks just as unwelcoming as the surrounding wall.</look>
      <alt type="stringlist">
        <value>spikes</value>
      </alt>
      <climb>You don't want to risk falling and impaling yourself on the spikes.</climb>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <nokeymessage>The gate is locked, presumably electronically.</nokeymessage>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="house1">
      <alias>house</alias>
      <alt type="stringlist">
        <value>home</value>
        <value>building</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <look>The house is large, almost a mansion, and is certainly not an old ruin like the other buildings you have seen.  Was this where Edward Hardacre lived, before his mysterious disappearance...?</look>
    </object>
    <object name="trees17">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>bushes</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="gravel2">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <exit alias="west" to="hardacres house">
      <inherit name="westdirection" />
      <locked />
      <lockmessage>You cannot get past the gate.</lockmessage>
    </exit>
    <object name="sky25">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="rain25">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the asylum south">
    <alias>outside the asylum, to the south</alias>
    <descprefix>You are</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>A high metal fence surrounds you, encircling the grounds.<br/><br/>The fearsome building towers above you to the north.<br/><br/>To the south, the driveway leads back through a gate and into the forest.<br/><br/>A pathway leads around to the east and west sides of the asylum.]]></description>
    <beforefirstenter type="script">
      msg ("")
    </beforefirstenter>
    <object name="asylum3">
      <alias>asylum</alias>
      <scenery />
      <look>The asylum's restoration from ruin is an impressive feat, but has done little to soften its formidable neo-Gothic appearance.  Gargoyles crouch amongst the intricate stonework of the parapets, gables and chimneys.  The central tower looks like a colossal spike driven upwards from beneath the earth, a menacing sliver of rock crowned with a clock face that gazes down at you like a great unblinking eye, daring you to open the large wooden door at its base.</look>
      <alt type="stringlist">
        <value>gargoyles</value>
        <value>parapets</value>
        <value>stonework</value>
        <value>gables</value>
        <value>chimneys</value>
        <value>central tower</value>
        <value>clock face</value>
        <value>walls</value>
      </alt>
    </object>
    <exit alias="south" to="outside the gate to the asylum">
      <inherit name="southdirection" />
      <locked />
      <lockmessage>You can't get past the gate.</lockmessage>
    </exit>
    <object name="gatepost1">
      <inherit name="plural" />
      <alias>gateposts</alias>
      <scenery />
      <look>One of the gateposts is topped with a nasty coil of barbed wire, but the other coil has been removed and lies on the ground nearby.  You should be able to climb the gatepost to get out the way you came in.</look>
      <alt type="stringlist">
        <value>bricks</value>
        <value>posts</value>
      </alt>
      <climb type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("You scramble hastily up the gatepost, and fall awkwardly as you jump down on the other side, sprawling on the ground.  But never mind a sore ankle - you need to get to that ferry as quickly as possible.")
          MoveObject (player, outside the gate to the asylum)
        }
        else {
          msg ("There is more to explore here - it isn't time to leave just yet!")
        }
      </climb>
    </object>
    <object name="barbed wire">
      <scenery type="boolean">false</scenery>
      <look>The coil of barbed wire on the floor is rusty and has probably injured countless rabbits.</look>
      <takemsg>You don't want to risk touching it.</takemsg>
      <visible />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <object name="sky27">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="ground27">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
        <value>pathway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="trees19">
      <inherit name="plural" />
      <look>There are a few trees lining the lawn, but despite the season they all look blackened and dead.</look>
      <scenery />
      <alt type="stringlist">
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="fence11">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>points</value>
      </alt>
      <look>The fence is about twelve feet high, and the sharpened points at its top look unforgiving.</look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="bars20">
      <inherit name="plural" />
      <look>Through the bars, you can see the forest stretching away to the south.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
      </alt>
      <alias>bars</alias>
    </object>
    <object name="rabbits18">
      <inherit name="plural" />
      <scenery />
      <look>Is it your imagination, or are the rabbits here watching you suspiciously?</look>
      <takemsg>The rabbits run away as soon as you go anywhere near them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits run away as soon as you go anywhere near them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits run away as soon as you go anywhere near them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="asylum door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look><![CDATA[The huge door is at least ten feet high, and decorated with ornate carvings and reliefs.  The pattern around its edge seems to depict writhing snakes, and is strangely... hypnotic.<br/><br/>There is no keyhole or even a handle with which you might open the door, although there is a huge brass knocker hanging in its centre.]]></look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <pull>The door will not open - it is securely locked.</pull>
      <push>The door will not open - it is securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The door is locked and will not open.</openmsg>
      <closemsg>The door is already closed.</closemsg>
      <knockon>You knock several times on the door, but other than some nearby rabbits scurrying away in terror, nothing happens.  Instead of a creepy echo, the sound seems strangely muted.</knockon>
      <nokeymessage>The door is locked and will not open.</nokeymessage>
      <onopen type="script">
        HelperCloseObject (hotel door)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="north" to="main hall">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
      <scenery type="boolean">false</scenery>
    </exit>
    <object name="knocker">
      <scenery />
      <look>The knocker is a thick, plain brass ring about ten inches across.</look>
      <pull>You knock several times on the door, but other than some nearby rabbits scurrying away in terror, nothing happens.  Instead of a creepy echo, the sound seems strangely muted.</pull>
      <knock>You knock several times on the door, but other than some nearby rabbits scurrying away in terror, nothing happens.  Instead of a creepy echo, the sound seems strangely muted.</knock>
    </object>
    <object name="windows3">
      <alias>windows</alias>
      <scenery />
      <look>The asylum has many windows, some little more than slits like those of a medieval castle, but all of them are too high for you to reach.</look>
    </object>
    <object name="gate4">
      <inherit name="container_open" />
      <alias>gate</alias>
      <scenery />
      <look>The gate stands between two brick gateposts, and is topped with sharp metal spikes.</look>
      <alt type="stringlist">
        <value>spikes</value>
      </alt>
      <climb>You do not want to slip and become impaled on the spikes.</climb>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The gate is locked, although you can't see a padlock anywhere - maybe an electronic lock was installed as part of the conversion?</openmsg>
      <closemsg>The gate is already closed.</closemsg>
      <onopen type="script">
        HelperCloseObject (gate3)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="gravel1">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <exit alias="northwest" to="outside the asylum west">
      <inherit name="northwestdirection" />
    </exit>
    <exit alias="northeast" to="outside the asylum east">
      <inherit name="northeastdirection" />
    </exit>
    <object name="grounds">
      <scenery />
      <alt type="stringlist">
        <value>grass</value>
        <value>lawn</value>
        <value>weeds</value>
        <value>rot</value>
      </alt>
      <look>The surrounding lawns are overgrown with weeds and covered with patches of dead grass, as though some sort of chronic sickness under the soil is manifesting itself above ground.</look>
    </object>
    <object name="rain26">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the gate to the asylum">
    <descprefix>You are </descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>The driveway leads between the two gateposts and into the grounds, which are a vast expanse of unkempt grass.<br/><br/>The metal gate itself is closed, and on the other side of the gateposts a high metal fence leads away to the northwest and northeast, encircling the premises.<br/><br/>To the south, a pathway leads back into the forest.<br/>]]></description>
    <prefix type="string"></prefix>
    <beforefirstenter type="script">
      msg ("The trees thin out as you head north, the path gradually widening into a gravel driveway that leads into the grounds of the asylum.  You can see the huge old building squatting menacingly at the top of a small hill; however, a sturdy-looking gate bars your way.")
    </beforefirstenter>
    <exit alias="south" to="woodland crossroads">
      <inherit name="southdirection" />
    </exit>
    <object name="sky26">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="mist26">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <look>The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.</look>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
    </object>
    <object name="trees18">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="ground26">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
        <value>pathway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="fence10">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>points</value>
      </alt>
      <look><![CDATA[The fence is about twelve feet high, and the sharpened points at its top look unforgiving.<br/><br/>The view through the bars is not much more welcoming than the imposing fence itself - you can see a huge stretch of lawn, but the grass is overgrown and riddled with weeds and streaks of brownish rot.]]></look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="bars1">
      <look>The view through the bars is not much more welcoming than the imposing fence itself - you can see a huge stretch of lawn, but the grass is overgrown and riddled with weeds and streaks of brownish rot.  Nonetheless, the rabbits seem happy enough as they hop around amongst the unkempt greenery.</look>
      <alt type="stringlist">
        <value>bees</value>
        <value>grass</value>
        <value>grounds</value>
        <value>lawn</value>
        <value>weeds</value>
      </alt>
      <scenery />
    </object>
    <object name="rabbits16">
      <inherit name="plural" />
      <scenery />
      <look>The rabbits look very comfortable lazing around in the grass.</look>
      <takemsg>You can't reach the rabbits through the fence.</takemsg>
      <kick>You can't reach the rabbits through the fence.</kick>
      <hit>You can't reach the rabbits through the fence.</hit>
      <hurt>You can't reach the rabbits through the fence.</hurt>
      <stroke>You can't reach the rabbits through the fence.</stroke>
      <feed>You can't reach the rabbits through the fence.</feed>
      <pet>You can't reach the rabbits through the fence.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="asylum4">
      <alias>asylum</alias>
      <scenery />
      <alt type="stringlist">
        <value>museum</value>
      </alt>
      <look>The brooding gothic menace of the old asylum feels almost tangible.</look>
    </object>
    <object name="gate3">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alias>gate</alias>
      <scenery />
      <look>The gate stands between two brick gateposts, and is topped with sharp metal spikes.  Across the gates, a metal sign announces the building beyond as, simply: 'Salvation Island Lunatic Asylum'.</look>
      <alt type="stringlist">
        <value>spikes</value>
        <value>sign</value>
      </alt>
      <climb>You do not want to slip and become impaled on the spikes.</climb>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The gate is locked, although you can't see a padlock anywhere - maybe an electronic lock was installed as part of the conversion?</openmsg>
      <closemsg>The gate is already closed.</closemsg>
      <nokeymessage>The gate is locked, although you can't see a padlock anywhere - maybe an electronic lock was installed as part of the conversion?</nokeymessage>
      <onopen type="script">
        HelperCloseObject (gate3)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="north" to="outside the asylum south">
      <inherit name="northdirection" />
      <locked />
      <scenery type="boolean">false</scenery>
      <lockmessage>You can't get past the gate.</lockmessage>
    </exit>
    <object name="gateposts">
      <inherit name="plural" />
      <scenery />
      <look>The gatepost to the west is topped with a coil of barbed wire.  The barbed wire on the other gatepost seems to have been removed, and you can even make out a handy foothold in the brickwork.</look>
      <alt type="stringlist">
        <value>barbed wire</value>
        <value>bricks</value>
        <value>posts</value>
        <value>foothold</value>
      </alt>
      <climb type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("There's no way you're going back in there... and besides, you need to head south quickly to catch your ferry.")
        }
        else if (GetBoolean(time of day, "night")) {
          msg ("You do not think the asylum will be a safe place to spend the night.")
        }
        else {
          msg ("You scramble up to the top of the gatepost, and notice the missing tangle of barbed wire a few metres away on the other side.  Maybe another explorer managed to find a way in like this?  You wonder vaguely whether you will be able to scale the gatepost quite as easily from the other side, but there's no point worrying about that now - you're far too excited about exploring the asylum!")
          MoveObject (player, outside the asylum south)
        }
      </climb>
    </object>
    <object name="gravel">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <object name="rain27">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="main hall">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>To the east a pair of double doors stand open, and a corridor leads away before curving to the north.<br/><br/>To the west are another pair of double doors, although these are closed.<br/><br/>To the south stands a very large door that must be the asylum's main entrance.<br/><br/>To the north, a wooden staircase leads up to the second floor, but seems to have completely collapsed.]]></description>
    <beforefirstenter type="script">
      msg ("The corridor curves around to the west, through a pair of double doors and into a very large room.")
    </beforefirstenter>
    <beforeenter type="script"><![CDATA[
      if (GetBoolean(time of day, "impending doom")) {
        SetObjectFlagOff (time of day, "impending doom")
        SetObjectFlagOn (time of day, "twilight")
        msg ("As you re-enter tha main hall, you shine your torch beam around, feeling your heart rattling in your chest.  There is nothing here, no movement at all save for the almost imperceptible swaying of the chandelier high above.  The walls of this dark place seem to be slowly closing in on you.  You can still barely believe what you saw in that room...<br/><br/>Suddenly, something moves to your left.  You swing your torch in its direction, but not in time to see anything other than what look like bare feet disappearing into the blackness - UP THE WALL.  You flick the torch upwards but the strange, scrabbling shape disappears over the edge of the upper balcony and out of sight... but it was unmistakeably humanoid.<br/><br/>You need to leave, now, before this tomb claims another victim.<br/>")
      }
    ]]></beforeenter>
    <exit alias="south" to="outside the asylum south">
      <inherit name="southdirection" />
      <locked />
      <lockmessage>The massive door is locked.</lockmessage>
    </exit>
    <exit alias="east" to="corridor">
      <inherit name="eastdirection" />
    </exit>
    <object name="asylum door1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <look><![CDATA[The huge main door is at least ten feet high, with a strange serpentine pattern around its frame.<br/><br/>There seems to be an electronic lock holding it shut.]]></look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <pull>The door will not open - it is securely locked.</pull>
      <push>The door will not open - it is securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The door is locked and will not open.</openmsg>
      <closemsg>The door is already closed.</closemsg>
      <knockon>Nothing happens.</knockon>
      <nokeymessage>The door is locked and will not open.</nokeymessage>
      <alt type="stringlist">
        <value>south door</value>
        <value>electronic lock</value>
      </alt>
      <alias>asylum door</alias>
      <onopen type="script">
        HelperCloseObject (hotel door)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="chandelier">
      <look>The huge light fitting hangs above you, almost like an alien creature that has been executed.</look>
      <alt type="stringlist">
        <value>light fitting</value>
      </alt>
      <scenery />
    </object>
    <object name="floor4">
      <alias>floor</alias>
      <scenery />
      <look>The tiling on the floor looks more ornate than elsewhere in the building.</look>
      <alt type="stringlist">
        <value>floor tiles</value>
        <value>tiling</value>
      </alt>
    </object>
    <object name="ceiling5">
      <alias>ceiling</alias>
      <scenery />
      <look>You shine your torch upwards and see that the ceiling stretches away high above you.  A massive chandelier hangs there, adding to the grandiose feel of the large chamber.</look>
    </object>
    <object name="east doors">
      <inherit name="container_open" />
      <inherit name="plural" />
      <look>Just an innocuous pair of wooden doors.</look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <feature_container />
      <isopen />
      <locked type="boolean">false</locked>
      <nokeymessage>The doors are locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <onopen type="script">
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="west doors1">
      <inherit name="container_open" />
      <inherit name="plural" />
      <look>A sign above the doors reads 'Doctors' Offices' and seems to point the way towards a museum exhibit.</look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <locked type="boolean">false</locked>
      <nokeymessage>The doors are locked.</nokeymessage>
      <alias>west doors</alias>
      <alt type="stringlist">
        <value>sign</value>
      </alt>
      <knockon>Nothing happens.</knockon>
      <onopen type="script">
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="staircase1">
      <alias>collapsed staircase</alias>
      <alt type="stringlist">
        <value>stairs</value>
        <value>steps</value>
        <value>debris</value>
        <value>rubble</value>
        <value>wood</value>
        <value>wreckage</value>
        <value>destruction</value>
      </alt>
      <climb>The stairs have completely collapsed - there is no way to climb them.</climb>
      <ascend>The stairs have completely collapsed - there is no way to climb them.</ascend>
      <move>The wreckage is too heavy for you to move.</move>
      <look><![CDATA[The wooden staircase has completely collapsed, scattering pieces of wood and debris all over the floor.  Tangled up in the wreckage is a long piece of fabric.<br/><br/>You wonder if there is another way to access the upper floors... and also how this destruction might have happened?]]></look>
    </object>
    <exit alias="west" to="another corridor">
      <inherit name="westdirection" />
    </exit>
    <object name="fabric">
      <alt type="stringlist">
        <value>banner</value>
      </alt>
      <takemsg>The banner is too tangled up amongst the heavy chunks of wreckage.</takemsg>
      <scenery />
      <look>The piece of yellow fabric was clearly a banner that used to hang across the stairs - you can make out the letters 'LCOME TO THE SALVATION MUS'.</look>
    </object>
    <object name="walls6">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
    <object name="upper balcony">
      <alt type="stringlist">
        <value>landing</value>
      </alt>
      <scenery />
      <look>The balcony runs from east to west across the upper floor, and would have been accessible via the staircase had it not collapsed.</look>
    </object>
  </object>
  <verb>
    <property>knockon</property>
    <pattern>knock on</pattern>
    <defaultexpression>"You can't knock on " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>unzip</property>
    <pattern>unzip</pattern>
    <defaultexpression>"You can't unzip " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>zip</property>
    <pattern>zip</pattern>
    <defaultexpression>"You can't zip " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>squeezethrough</property>
    <pattern>squeeze through</pattern>
    <defaultexpression>"You can't squeeze through " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>takeoff</property>
    <pattern>take off</pattern>
    <defaultexpression>"You can't take off " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>remove</property>
    <pattern>remove</pattern>
    <defaultexpression>"You can't remove " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookthrough</property>
    <pattern>look through</pattern>
    <defaultexpression>"You can't look through " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookin</property>
    <pattern>look in</pattern>
    <defaultexpression>"You can't look in " + object.article + "."</defaultexpression>
  </verb>
  <object name="power plant">
    <exit alias="west" to="outside the power plant">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="amusement park stalls">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>amusement park, by the stalls</alias>
    <exit alias="south" to="prom6">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="hardacres house">
    <exit alias="east" to="outside a house">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="south" to="garden">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="outside the asylum west">
    <descprefix>You are</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>outside the asylum, to the west</alias>
    <description><![CDATA[<br/>A high metal fence surrounds you, encircling the grounds.<br/><br/>The fearsome building towers above you to the east.<br/><br/>A pathway leads around to the north and south sides of the asylum.]]></description>
    <exit alias="southeast" to="outside the asylum south">
      <inherit name="southeastdirection" />
    </exit>
    <object name="asylum5">
      <alias>asylum</alias>
      <scenery />
      <look>The asylum's restoration from ruin is an impressive feat, but has done little to soften its formidable neo-Gothic appearance.  Gargoyles crouch amongst the intricate stonework of the parapets, gables and chimneys.  From this side, you can see a couple of ground-level windows.</look>
      <alt type="stringlist">
        <value>gargoyles</value>
        <value>parapets</value>
        <value>stonework</value>
        <value>gables</value>
        <value>chimneys</value>
        <value>walls</value>
      </alt>
    </object>
    <object name="sky28">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="ground28">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
        <value>pathway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="trees21">
      <inherit name="plural" />
      <look>There are a few trees lining the lawn, but despite the season they all look blackened and dead.</look>
      <scenery />
      <alt type="stringlist">
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="rabbits17">
      <inherit name="plural" />
      <scenery />
      <look>Is it your imagination, or are the rabbits here watching you suspiciously?</look>
      <takemsg>The rabbits run away as soon as you go anywhere near them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits run away as soon as you go anywhere near them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits run away as soon as you go anywhere near them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="fence12">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>points</value>
        <value>spikes</value>
      </alt>
      <look>The fence is about twelve feet high, and the sharpened points at its top look unforgiving.</look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="windows4">
      <alias>windows</alias>
      <scenery />
      <look>The asylum has many windows, some little more than slits like those of a medieval castle, and most of them are too high for you to reach.  However, there are a couple at ground level that might provide light to basement rooms, but they are both covered by metal sheeting.</look>
    </object>
    <object name="gravel3">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <object name="grounds1">
      <scenery />
      <alt type="stringlist">
        <value>grass</value>
        <value>lawn</value>
        <value>weeds</value>
        <value>rot</value>
      </alt>
      <look>The surrounding lawns are overgrown with weeds and covered with patches of dead grass, as though some sort of chronic sickness under the soil is manifesting itself above ground.</look>
    </object>
    <exit alias="northeast" to="outside the asylum north">
      <inherit name="northeastdirection" />
    </exit>
    <object name="bars2">
      <inherit name="plural" />
      <look>Through the bars, you can see the forest stretching away to the west.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
      </alt>
      <alias>bars</alias>
    </object>
    <object name="sheeting">
      <alt type="stringlist">
        <value>metal</value>
        <value>grilles</value>
      </alt>
      <scenery />
      <look>The metal sheets are tightly fastened across the windows, and without a heavy-duty tool you won't be able to prize them away - normally you wouldn't vandalise the places you visit anyway, but you really are keen to get inside!</look>
      <pull>The metal sheets are tightly fastened across the windows, and without a heavy-duty tool you won't be able to prize them away - normally you wouldn't vandalise the places you visit anyway, but you really are keen to get inside!</pull>
      <remove>The metal sheets are tightly fastened across the windows, and without a heavy-duty tool you won't be able to prize them away - normally you wouldn't vandalise the places you visit anyway, but you really are keen to get inside!</remove>
      <takemsg>The metal sheets are tightly fastened across the windows, and without a heavy-duty tool you won't be able to prize them away - normally you wouldn't vandalise the places you visit anyway, but you really are keen to get inside!</takemsg>
    </object>
    <object name="rain28">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the asylum east">
    <description><![CDATA[<br/>A high metal fence surrounds you, encircling the grounds.<br/><br/>The fearsome building towers above you to the west.<br/><br/>A pathway leads around to the north and south sides of the asylum.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>outside the asylum, to the east</alias>
    <descprefix>You are</descprefix>
    <exit alias="southwest" to="outside the asylum south">
      <inherit name="southwestdirection" />
    </exit>
    <object name="asylum6">
      <alias>asylum</alias>
      <scenery />
      <look>The asylum's restoration from ruin is an impressive feat, but has done little to soften its formidable neo-Gothic appearance.  Gargoyles crouch amongst the intricate stonework of the parapets, gables and chimneys.  From this side, you can see a couple of ground-level windows.</look>
      <alt type="stringlist">
        <value>gargoyles</value>
        <value>parapets</value>
        <value>stonework</value>
        <value>gables</value>
        <value>chimneys</value>
        <value>walls</value>
      </alt>
    </object>
    <object name="sky29">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="ground29">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
        <value>pathway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="trees22">
      <inherit name="plural" />
      <look>There are a few trees lining the lawn, but despite the season they all look blackened and dead.</look>
      <scenery />
      <alt type="stringlist">
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="rabbits19">
      <inherit name="plural" />
      <scenery />
      <look>Is it your imagination, or are the rabbits here watching you suspiciously?</look>
      <takemsg>The rabbits run away as soon as you go anywhere near them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits run away as soon as you go anywhere near them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits run away as soon as you go anywhere near them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="fence13">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>points</value>
        <value>spikes</value>
      </alt>
      <look>The fence is about twelve feet high, and the sharpened points at its top look unforgiving.</look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="windows5">
      <alias>windows</alias>
      <scenery />
      <look>The asylum has many windows, some little more than slits like those of a medieval castle, and most of them are too high for you to reach.  However, there are a couple at ground level that might provide light to basement rooms, but they are both covered by metal sheeting.</look>
    </object>
    <object name="gravel4">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <object name="grounds2">
      <scenery />
      <alt type="stringlist">
        <value>grass</value>
        <value>lawn</value>
        <value>weeds</value>
        <value>rot</value>
      </alt>
      <look>The surrounding lawns are overgrown with weeds and covered with patches of dead grass, as though some sort of chronic sickness under the soil is manifesting itself above ground.</look>
    </object>
    <exit alias="northwest" to="outside the asylum north">
      <inherit name="northwestdirection" />
    </exit>
    <object name="bars3">
      <inherit name="plural" />
      <look>Through the bars, you can see the forest stretching away to the east.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
      </alt>
      <alias>bars</alias>
    </object>
    <object name="sheeting1">
      <alt type="stringlist">
        <value>metal</value>
        <value>grilles</value>
      </alt>
      <scenery />
      <takemsg>The metal sheets are tightly fastened across the windows, but you can see that one has come loose - you may be able to remove it if you give it a good pull!</takemsg>
      <look type="script">
        if (GetBoolean(sheeting1, "removed")) {
          msg ("The sheeting is now hanging off the wall - you can see the window beneath it.")
        }
        else {
          msg ("The metal sheets are tightly fastened across the windows, but you can see that one has come loose - you may be able to remove it if you give it a good pull!")
        }
      </look>
      <pull type="script">
        msg ("You yank hard on the metal sheeting and find that it comes away easily, revealing a smashed window beneath!  The room beyond is dark and you can make out little inside.  Has someone else come this way before you?")
        MakeObjectVisible (window)
        SetObjectFlagOn (sheeting1, "removed")
        MakeExitVisible (asylumentrance)
      </pull>
      <remove type="script">
        msg ("You yank hard on the metal sheeting and find that it comes away easily, revealing a smashed window beneath!  The room beyond is dark and you can make out little inside.  Has someone else come this way before you?")
        MakeObjectVisible (window)
        SetObjectFlagOn (sheeting1, "removed")
        MakeExitVisible (asylumentrance)
      </remove>
      <take type="script">
        if (GetBoolean(sheeting1, "removed")) {
          msg ("The last couple of nails are stuck fast, so you can't completely remove the sheeting.")
        }
        else {
          msg ("The metal sheets are fastened across the windows, but you can see that one has come loose - you may be able to remove it if you give it a good pull!")
        }
      </take>
    </object>
    <exit name="asylumentrance" alias="west" to="storage room">
      <inherit name="westdirection" />
      <visible type="boolean">false</visible>
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("There is no way you're going back in there.")
        }
        else {
          msg ("You squeeze backwards through the smashed window and drop down into the room beyond.")
          MoveObject (player, storage room)
        }
      </script>
    </exit>
    <object name="window">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <scenery type="boolean">false</scenery>
      <visible type="boolean">false</visible>
      <alt type="stringlist" />
      <lookthrough>You can see nothing in the darkened room beyond.</lookthrough>
      <look>You can see a dusty room beyond, full of clutter.  There is enough room for you to squeeze through the broken window if you're careful.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <transparent />
      <nokeymessage>You can't seem to get the window open.</nokeymessage>
      <openmsg>You can't seem to get the window open, but it's already broken anyway - there's enough room for you to squeeze through the gap.</openmsg>
      <lookin>You can see nothing in the darkened room beyond.</lookin>
      <break>The window is already broken - maybe someone else has already entered the asylum this way?</break>
      <smash>The window is already broken - maybe someone else has already entered the asylum this way?</smash>
      <kick>The window is already broken - maybe someone else has already entered the asylum this way?</kick>
      <hit>The window is already broken - maybe someone else has already entered the asylum this way?</hit>
      <alias>broken window</alias>
      <squeezethrough type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("There is no way you're going back in there.")
        }
        else {
          msg ("You squeeze backwards through the smashed window and drop down into the room beyond.")
          MoveObject (player, storage room)
        }
      </squeezethrough>
      <climbthrough type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("There is no way you're going back in there.")
        }
        else {
          msg ("You squeeze backwards through the smashed window and drop down into the room beyond.")
          MoveObject (player, storage room)
        }
      </climbthrough>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="rain29">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="outside the asylum north">
    <descprefix>You are</descprefix>
    <alias>outside the asylum, to the north</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>A high metal fence surrounds you, encircling the grounds.<br/><br/>The fearsome building towers above you to the south.<br/><br/>A pathway leads around to the east and west sides of the asylum.<br/><br/>To the north, you can see nothing but mist on the other side of the fence - perhaps you have reached the island's northern perimeter?]]></description>
    <exit alias="southwest" to="outside the asylum west">
      <inherit name="southwestdirection" />
    </exit>
    <exit alias="southeast" to="outside the asylum east">
      <inherit name="southeastdirection" />
    </exit>
    <object name="sky30">
      <scenery />
      <look>The sky is a miserable grey colour, threatening to rain at any moment.</look>
    </object>
    <object name="asylum7">
      <alias>asylum</alias>
      <scenery />
      <look>The asylum's restoration from ruin is an impressive feat, but has done little to soften its formidable neo-Gothic appearance.  Gargoyles crouch amongst the intricate stonework of the parapets, gables and chimneys.</look>
      <alt type="stringlist">
        <value>gargoyles</value>
        <value>parapets</value>
        <value>stonework</value>
        <value>gables</value>
        <value>chimneys</value>
        <value>walls</value>
      </alt>
    </object>
    <object name="ground30">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>driveway</value>
        <value>pathway</value>
      </alt>
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
    </object>
    <object name="trees20">
      <inherit name="plural" />
      <look>There are a few trees lining the lawn, but despite the season they all look blackened and dead.</look>
      <scenery />
      <alt type="stringlist">
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="rabbits20">
      <inherit name="plural" />
      <scenery />
      <look>Is it your imagination, or are the rabbits here watching you suspiciously?</look>
      <takemsg>The rabbits run away as soon as you go anywhere near them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>The rabbits run away as soon as you go anywhere near them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>The rabbits run away as soon as you go anywhere near them.</pet>
      <alias>rabbits</alias>
    </object>
    <object name="fence14">
      <alias>fence</alias>
      <alt type="stringlist">
        <value>metal</value>
        <value>points</value>
        <value>spikes</value>
      </alt>
      <look>The fence is about twelve feet high, and the sharpened points at its top look unforgiving.</look>
      <climb>You won't be able to get past the sharpened spikes at the top of the fence.</climb>
      <scenery />
    </object>
    <object name="windows6">
      <alias>windows</alias>
      <scenery />
      <look>The asylum has many windows, some little more than slits like those of a medieval castle, but all of them are too high for you to reach.</look>
    </object>
    <object name="gravel5">
      <look>The gravel of the driveway crunches beneath your feet.</look>
      <scenery />
      <alt type="stringlist">
        <value>grit</value>
        <value>stones</value>
      </alt>
      <takemsg>There doesn't seem to be much point in filling your bag with grit.</takemsg>
    </object>
    <object name="grounds3">
      <scenery />
      <alt type="stringlist">
        <value>grass</value>
        <value>lawn</value>
        <value>weeds</value>
        <value>rot</value>
      </alt>
      <look>The surrounding lawns are overgrown with weeds and covered with patches of dead grass, as though some sort of chronic sickness under the soil is manifesting itself above ground.</look>
    </object>
    <object name="bars4">
      <inherit name="plural" />
      <look>Through the bars, you can see only a broiling curtain of mist to the north.</look>
      <scenery />
      <alt type="stringlist">
        <value>mist</value>
      </alt>
      <alias>bars</alias>
    </object>
    <object name="rain30">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <object name="storage room">
    <description><![CDATA[<br/>In the dim light you can make out dusty boxes stuffed with documents, filing cabinets, bits of miscellaneous medical equipment and even an old wheelchair shoved inside the modest space.<br/><br/>To the east, a broken window leads back outside.<br/><br/>To the west, a wooden door leads into the asylum - you will need to clamber over the piles of junk to get to it.]]></description>
    <beforefirstenter type="script">
    </beforefirstenter>
    <exit alias="east" to="outside the asylum east">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(time of day, "twilight")) {
          msg ("You scramble out of the window, relieved to find yourself outside in daylight once again.  You wouldn't go back inside that place for a million pounds.  Now you need to get back to your ferry as quickly as possible, and decide what to do about the dead body you discovered.  You shudder once again, momentarily gripped by a wave of nausea - he didn't even look as though he had been dead for very long.  What were the words on the paper you took from him?  They come out of the woods at night...")
          MoveObject (player, outside the asylum east)
          play sound ("Broken Notes Sanatorium ~ Into the World of Madness.mp3", false, true)
        }
        else {
          msg ("You climb out through the window.")
          MoveObject (player, outside the asylum east)
        }
      </script>
    </exit>
    <object name="glass1">
      <alias>glass</alias>
      <scenery type="boolean">false</scenery>
      <takemsg>You don't want to cut your hand to pieces.</takemsg>
      <look>The glass fragments from the broken window are scattered on the floor.  It definitely seems as though someone has entered this way.</look>
      <alt type="stringlist">
        <value>fragments</value>
      </alt>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <object name="floor">
      <alt type="stringlist">
        <value>ground</value>
        <value>floorboards</value>
      </alt>
      <scenery />
      <look>The floor beneath your feet is made from creaky old floorboards.</look>
    </object>
    <object name="ceiling1">
      <alias>ceiling</alias>
      <scenery />
      <look>The ceiling in this room is low and makes you feel a tad claustrophobic.</look>
    </object>
    <object name="window1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <scenery />
      <visible />
      <alt type="stringlist">
        <value>light</value>
      </alt>
      <lookthrough>You can see light from outside through the broken window.</lookthrough>
      <look>You can see light from outside through the broken window.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <transparent />
      <nokeymessage>You can't seem to get the window open.</nokeymessage>
      <openmsg>You can't seem to get the window open.</openmsg>
      <break>The window is already broken.</break>
      <squeezethrough type="script">
        msg ("You climb out through the window, being careful not to cut yourself on the shards of glass.")
        MoveObject (player, outside the asylum east)
      </squeezethrough>
      <climbthrough type="script">
        msg ("You climb out through the window, being careful not to cut yourself on the shards of glass.")
        MoveObject (player, outside the asylum east)
      </climbthrough>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="medical equipment">
      <inherit name="plural" />
      <scenery type="boolean">false</scenery>
      <look>Assorted medical paraphernalia surrounds you: a neck brace, a stethoscope, a surgical mask.  You wonder whether this room was used to store bits and pieces not currently in use in the museum's exhibits, or whether it has indeed been left completely untouched since the asylum was in full operation.</look>
      <alt type="stringlist">
        <value>stethoscope</value>
        <value>surgical mask</value>
        <value>neck brace</value>
        <value>junk</value>
      </alt>
      <takemsg>You do not take things from the places you visit.</takemsg>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <search>You don't like to interfere with the things you find if you can avoid it - it's bad enough that you had to vandalise the place to get inside.</search>
    </object>
    <object name="wheelchair">
      <scenery type="boolean">false</scenery>
      <look>Ever since playing Silent Hill when you were a teenager, wheelchairs have always appeared somewhat sinister to you.</look>
      <takemsg>Carting the wheelchair around with you would only impede progress.</takemsg>
      <push>Carting the wheelchair around with you would only impede progress.</push>
      <pull>Carting the wheelchair around with you would only impede progress.</pull>
    </object>
    <object name="filing cabinets">
      <inherit name="plural" />
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery type="boolean">false</scenery>
      <look>The filing cabinets are sturdy metal containers, probably crammed with even more ancient paperwork.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <search>The filing cabinets are locked.</search>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="door1">
      <inherit name="container_open" />
      <alias>door</alias>
      <scenery />
      <look>Just a nondescript wooden door.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="west" to="corridor">
      <inherit name="westdirection" />
      <runscript />
      <script type="script">
        msg ("The area beyond is pitch black, so you switch on your torch.  It casts an eerie cone of light into the blackness.")
        MoveObject (player, corridor)
        MoveObject (torch, player)
        SetObjectFlagOn (torch, "nowon")
      </script>
    </exit>
    <object name="dust">
      <scenery />
      <look>Every visible surface is coated in a thick layer of dust.</look>
      <takemsg>You don't really want to fill your bag with dust.</takemsg>
    </object>
    <object name="documents">
      <inherit name="plural" />
      <scenery type="boolean">false</scenery>
      <look>You peer at the documents but can make little sense of them - they look like old medical records.</look>
      <alt type="stringlist">
        <value>paperwork</value>
        <value>papers</value>
        <value>medical records</value>
        <value>sheets</value>
      </alt>
      <takemsg>There are far too many documents far you to take them all.</takemsg>
      <read>You peer at the documents but can make little sense of them - they look like old medical records.</read>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <object name="boxes">
      <inherit name="plural" />
      <inherit name="container_open" />
      <look>The boxes are crammed with paperwork, some of which is spilling out onto the floor.</look>
      <takemsg>The paperwork inside the boxes makes them too heavy to carry.</takemsg>
      <feature_container />
      <closemsg>There are no lids to put on the open boxes.</closemsg>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <onclose type="script">
        HelperOpenObject (boxes)
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="walls4">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
  </object>
  <verb>
    <property>shatter</property>
    <pattern>shatter</pattern>
    <defaultexpression>"You can't shatter " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>climbthrough</property>
    <pattern>climb through</pattern>
    <defaultexpression>"You can't climb through " + object.article + "."</defaultexpression>
  </verb>
  <object name="corridor">
    <description><![CDATA[<br/>It runs from north to south, with a set of double doors at its northern end, as well as another door in the wall to the northwest.<br/><br/>At its southern end is another door, before the corridor curves around to the west.<br/><br/>There is also a doorway in the wall to the east, which leads back into the storage room through which you entered. ]]></description>
    <exit alias="east" to="storage room">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("You enter the storage room.  The light coming in through the broken window is sufficient for you to see, so you click your torch off and put it back in your bag.")
        MoveObject (player, storage room)
        SetObjectFlagOff (torch, "nowon")
        MoveObject (torch, bag)
      </script>
    </exit>
    <object name="floor1">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in a simple tiled pattern.</look>
      <alias>floor</alias>
    </object>
    <object name="ceiling2">
      <alias>ceiling</alias>
      <look><![CDATA[The ceiling is constructed from simple tiles.  Thanfully it is higher than in the storage room, but you do wonder whether the tiles contain asbestos... although your strange hobby means you can't afford to worry about such things!<br/><br/>The striplights are switched off, and you wonder if there is any power to the building at all.]]></look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
        <value>lights</value>
        <value>striplights</value>
        <value>lightbulbs</value>
      </alt>
    </object>
    <object name="north doors">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <inherit name="plural" />
      <look>The pair of wooden doors are closed.</look>
      <kick>You do not vandalise the places that you visit.</kick>
      <break>You do not vandalise the places that you visit.</break>
      <visible />
      <scenery />
      <pull>The doors will not open - they are securely locked.</pull>
      <push>The doors will not open - they are securely locked.</push>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <openmsg>The hotel door is locked.</openmsg>
      <closemsg>The hotel door is already closed.</closemsg>
      <knockon>Nothing happens when you knock on the doors.  You feel strangely relieved.</knockon>
      <nokeymessage>The doors are locked.</nokeymessage>
      <onopen type="script">
        HelperCloseObject (hotel door)
      </onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="northwest door">
      <inherit name="container_open" />
      <scenery />
      <look>Just a nondescript wooden door.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="south door1">
      <inherit name="container_open" />
      <scenery />
      <look>The wooden door to the south has a sign saying 'toilet' above it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alt type="stringlist">
        <value>sign</value>
      </alt>
      <alias>south door</alias>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="east door1">
      <inherit name="container_open" />
      <scenery />
      <look>Just a nondescript wooden door, with a small amount of light shining from within.</look>
      <feature_container />
      <isopen />
      <alias>east door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="west" to="main hall">
      <inherit name="westdirection" />
    </exit>
    <exit alias="north" to="common room">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The doors are locked.</lockmessage>
    </exit>
    <exit alias="south" to="water closet">
      <inherit name="southdirection" />
    </exit>
    <exit alias="northwest" to="storage room1">
      <inherit name="northwestdirection" />
    </exit>
    <object name="dust1">
      <scenery />
      <look>Every visible surface is coated in a thick layer of dust.</look>
      <takemsg>You don't really want to fill your bag with dust.</takemsg>
    </object>
    <object name="walls5">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
    <object name="corridor1">
      <alias>corridor</alias>
      <alt type="stringlist">
        <value>passageway</value>
      </alt>
      <scenery />
      <look>The corridor is dusty and dark.</look>
    </object>
  </object>
  <object name="common room">
    <exit alias="south" to="corridor">
      <inherit name="southdirection" />
    </exit>
    <exit alias="west" to="corridor3">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="water closet">
    <usedefaultprefix />
    <description><![CDATA[<br/>A single toilet is here, as well as a washbasin and hand dryer.  If this area of the asylum was used for storage, maybe some sort of janitor used this room?<br/>]]></description>
    <exit alias="north" to="corridor">
      <inherit name="northdirection" />
    </exit>
    <object name="toilet">
      <scenery />
      <look>There is nothing special about the toilet.</look>
      <alt type="stringlist">
        <value>toilet seat</value>
        <value>lavatory</value>
      </alt>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
        <value>Drop</value>
      </inventoryverbs>
      <feature_usegive />
      <use type="script">
        msg ("You don't need the toilet right now, and besides, you doubt whether it's even plumbed in.")
      </use>
    </object>
    <object name="washbasin">
      <alt type="stringlist">
        <value>sink</value>
      </alt>
      <scenery />
      <look>Just a standard white enamel sink with metal taps.</look>
    </object>
    <object name="taps">
      <inherit name="plural" />
      <alt type="stringlist">
        <value>metal</value>
      </alt>
      <scenery />
      <look>Just a normal pair of taps, one for hot and one for cold.</look>
      <turnon>No water comes out when you turn the taps - evidently this place is no longer plugged in.</turnon>
      <turnoff>They are already turned off.</turnoff>
    </object>
    <object name="bathroom door">
      <inherit name="container_open" />
      <scenery />
      <look>The wooden door has a lock on it, like you'd expect.</look>
      <feature_container />
      <isopen />
      <alt type="stringlist">
        <value>lock</value>
      </alt>
      <alias>door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="ceiling3">
      <alias>ceiling</alias>
      <look>The ceiling is constructed from simple tiles.</look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
      </alt>
    </object>
    <object name="floor2">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in a simple tiled pattern.</look>
      <alias>floor</alias>
    </object>
    <object name="light">
      <scenery />
      <alt type="stringlist">
        <value>bulb</value>
        <value>lightbulb</value>
      </alt>
      <look>A single bulb hangs from the ceiling.  It is switched off.  You can't see a cord or a switch anywhere.</look>
      <takemsg>You can't think of any use for the bulb - there doesn't seem to be any electricity on the island and your torch is doing a fine job.</takemsg>
    </object>
    <object name="dust2">
      <scenery />
      <look>Every visible surface is coated in a thick layer of dust.</look>
      <takemsg>You don't really want to fill your bag with dust.</takemsg>
    </object>
    <object name="walls7">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
    <object name="hand dryer">
      <inherit name="switchable" />
      <scenery />
      <look>There is nothing special about the hand dryer.</look>
      <alt type="stringlist">
        <value>dryer</value>
      </alt>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
        <value>Drop</value>
      </inventoryverbs>
      <feature_usegive />
      <feature_switchable />
      <switchonmsg>The hand dryer does not work.</switchonmsg>
      <switchoffmsg>It is already switched off.</switchoffmsg>
      <use type="script">
        msg ("You don't need the toilet right now, and besides, you doubt whether it's even plumbed in.")
      </use>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
    </object>
  </object>
  <object name="storage room1">
    <alias>another storage room</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[<br/>This contains more filing cabinets, once again coated in a thick layer of dust.<br/>]]></description>
    <exit alias="northeast" to="corridor">
      <inherit name="northeastdirection" />
    </exit>
    <object name="dust3">
      <scenery />
      <look>Every visible surface is coated in a thick layer of dust.</look>
      <takemsg>You don't really want to fill your bag with dust.</takemsg>
    </object>
    <object name="filing cabinets1">
      <inherit name="plural" />
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery type="boolean">false</scenery>
      <look>The filing cabinets are sturdy metal containers, probably crammed with even more ancient paperwork.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <search>The filing cabinets are locked.</search>
      <alias>filing cabinets</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="ceiling4">
      <alias>ceiling</alias>
      <scenery />
      <look>The ceiling in this room is low and makes you feel a tad claustrophobic.</look>
    </object>
    <object name="floor3">
      <alt type="stringlist">
        <value>ground</value>
        <value>floorboards</value>
      </alt>
      <scenery />
      <look>The floor beneath your feet is made from creaky old floorboards.</look>
      <alias>floor</alias>
    </object>
    <object name="door2">
      <inherit name="container_open" />
      <alias>door</alias>
      <scenery />
      <look>Just a nondescript wooden door.</look>
      <feature_container />
      <isopen />
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="walls8">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
    <object name="prosthetic limb">
      <look>It is one of the old-fashioned kinds of arm prostheses, which would be attached via a harness over the shoulder and grant no movement.  Here, lying on the floor in an otherwise empty room, the plastic limb looks very sinister.</look>
      <alt type="stringlist">
        <value>arm</value>
        <value>prosthesis</value>
      </alt>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
    </object>
    <object name="prosthetic limb2">
      <alt type="stringlist" />
      <visible type="boolean">false</visible>
      <look>It is one of the old-fashioned kinds of arm prostheses, which would be attached via a harness over the shoulder and grant no movement.  It could make a clumsy but effective weapon.</look>
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <dropmsg>You drop the weapon on the ground.</dropmsg>
      <feature_usegive />
      <alias>prosthetic limb</alias>
      <take type="script">
        if (GetBoolean(weapon, "armed")) {
          msg ("You are already carrying a weapon.")
        }
        else {
          msg ("After what you've seen so far on the island, you decide to forego your usual ban on taking souvenirs, and snatch the weapon from the ground.")
          SetObjectFlagOn (weapon, "armed")
          AddToInventory (prosthetic limb2)
        }
      </take>
      <ontake type="script">
        armed = 1
      </ontake>
      <drop type="script">
        msg ("You drop the creepy appendage on the ground.")
        SetObjectFlagOff (weapon, "armed")
        MoveObjectHere (prosthetic limb2)
      </drop>
      <selfuseanything type="script">
        msg ("That won't achieve anything.")
      </selfuseanything>
      <selfuseon type="scriptdictionary">
        <item key="padlock">
          msg ("Even with this sturdy weapon you just can't get enough purchase to break the padlock - you'll need something even heavier.")
        </item>
        <item key="thing"><![CDATA[
          if (ListContains(ScopeVisible(), corpse1)) {
            msg ("That seems a tad unnecessary - she's definitely dead.")
          }
          else {
            msg ("Your fear and disgust suddenly transform into incandescent rage.  Raising the prosthesis, you bring it down on the old woman's head once, twice, three times, againagainagain.  You don't stop hitting her until her head has completely caved in, and she is laying face down on the floor, unmoving.<br/><br/>As your breath escapes raggedly, you realise what you have done, and are appalled.  You stare at the prosthetic arm, which has completely broken, and then toss it away.<br/><br/>What is going on on this island??<br/>")
            RemoveObject (thing)
            SetObjectFlagOff (thing, "attacking")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse1)
            SetObjectFlagOn (time of day, "creepy")
          }
        ]]></item>
        <item key="thing1"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the prosthetic at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the artifical limb, which has completely broken, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </selfuseon>
    </object>
  </object>
  <object name="another corridor">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description type="script"><![CDATA[
      if (GetBoolean(door status, "opened")) {
        msg ("It runs from the north to the south.<br/><br/>At the southern end a pair of double doors lead to the east.<br/><br/>There are three doors set into the western wall.<br/><br/>A door also stands to the north.")
      }
      else {
        msg ("It runs from the north to the south.<br/><br/>At the southern end a pair of double doors lead to the east.<br/><br/>There are three doors set into the western wall.<br/><br/>A door also stands to the north.  You can hear a scratching sound coming from behind it.")
      }
    ]]></description>
    <enter type="script">
      if (GetBoolean(door status, "opened")) {
      }
      else {
        SetObjectFlagOn (north door, "scary")
      }
    </enter>
    <onexit type="script">
      SetObjectFlagOff (north door, "scary")
      if (GetBoolean(door status, "opened")) {
      }
      else {
        stop sound
      }
    </onexit>
    <beforeenter type="script">
      if (GetBoolean(door status, "opened")) {
      }
      else {
        play sound ("Finger Nails Scratch Wood.mp3", false, true)
      }
    </beforeenter>
    <exit alias="east" to="main hall">
      <inherit name="eastdirection" />
    </exit>
    <object name="north door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist">
        <value>sign</value>
      </alt>
      <scenery />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <locked type="boolean">false</locked>
      <closemsg>You close it, mercifully shutting out the reek that emanates from beyond.</closemsg>
      <openmsg>You open the door.</openmsg>
      <look type="script">
        if (GetBoolean(door status, "opened")) {
          msg ("A sign above the north door bears the ominous word 'Cells', denoting a museum exhibit.")
        }
        else {
          msg ("A sign above the north door bears the ominous word 'Cells', denoting a museum exhibit.  The scratching sound is louder as you approach the door, as though an animal is trapped on the other side... at least, you hope it is an animal.")
        }
      </look>
      <onopen type="script"><![CDATA[
        if (GetBoolean(door status, "opened")) {
          msg ("Once again the repulsive smell assails your nostrils.")
        }
        else {
          SetObjectFlagOn (door status, "opened")
          msg ("You gingerly point your torch beam through the gap to see what could be making the scratching sound.  Suddenly, a rabbit darts out from behind the door and scurries away to the south.  You leap back in shock, nearly tripping over the terrified creature as it dashes past you.  You realise that your heart is hammering in your chest, and don't know whether to laugh or breathe a sigh of relief.<br/><br/>Shining your torch into the corridor beyond, you see a white passageway that stretches to the north before turning east.  But the appalling stink that assaults your nostrils is far from inkeeping with the clean, clinical colour scheme.  It smells like rotting meat, but magnified to a level you have never experienced before, and you immediately gag and almost vomit on the ground.<br/>")
          MakeObjectVisible (rabbit2)
          SetObjectFlagOff (north door, "scary")
          stop sound
        }
      ]]></onopen>
      <knockon type="script">
        if (GetBoolean(door status, "opened")) {
          msg ("Nothing happens when you knock on the door.")
        }
        else {
          msg ("You knock on the door, but hear only the scratching sound in reply.")
        }
      </knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="southwest door">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is made from a rich dark wood, maybe mahogany.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="northwest door1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is made from a rich dark wood, maybe mahogany.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alias>northwest door</alias>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="west door1">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is made from a rich dark wood, maybe mahogany.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alias>west door</alias>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="north" to="corridor2">
      <inherit name="northdirection" />
      <locked type="boolean">false</locked>
      <lockmessage>The door to the cells is locked.</lockmessage>
      <runscript />
      <script type="script">
        if (GetBoolean(door status, "opened")) {
          MoveObject (player, corridor2)
        }
        else {
          msg ("You will need to open the door first... but what is that scratching sound?")
        }
      </script>
    </exit>
    <exit alias="southwest" to="doctors office sw">
      <inherit name="southwestdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="northwest" to="doctors office nw">
      <inherit name="northwestdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="west" to="doctors office">
      <inherit name="westdirection" />
    </exit>
    <object name="floor5">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in a simple tiled pattern.</look>
      <alias>floor</alias>
    </object>
    <object name="ceiling6">
      <alias>ceiling</alias>
      <look>The ceiling is constructed from simple tiles.  The striplights are switched off, and you wonder if there is any power to the building at all.</look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
        <value>lights</value>
        <value>striplights</value>
        <value>lightbulbs</value>
      </alt>
      <visible />
    </object>
    <object name="door status">
      <visible type="boolean">false</visible>
    </object>
    <object name="rabbit2">
      <alias>rabbit</alias>
      <visible type="boolean">false</visible>
      <scenery type="boolean">false</scenery>
      <look>The rabbit is cowering in the corner of the corridor, as far away from the north door as it can get.  It is skeletally thin, and you cannot help but be disturbed by the sight.  It is breathing very fast and its eyes stare wildly around, unblinking even in your torchlight.</look>
      <kick>You do not want to hurt the poor creature, which looks frightened enough already.</kick>
      <hit>You do not want to hurt the poor creature, which looks frightened enough already.</hit>
      <takemsg>The creature scratches and claws at you if you try to pick it up.</takemsg>
      <feed>You have no food to give to the poor creature.</feed>
      <pet>The rabbit does not react at all if you stroke it gently, almost as if it is in shock.</pet>
      <stroke>The rabbit does not react at all if you stroke it gently, almost as if it is in shock.</stroke>
    </object>
    <object name="walls9">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>There is nothing special about the walls.</look>
    </object>
    <object name="corridor4">
      <alias>corridor</alias>
      <alt type="stringlist">
        <value>passageway</value>
      </alt>
      <scenery />
      <look>The corridor is dusty and dark.</look>
    </object>
  </object>
  <object name="corridor2">
    <alias>white corridor</alias>
    <description><![CDATA[<br/>It leads to the south and east, with doors at either end.  The air in here smells absolutely foul.<br/>]]></description>
    <exit alias="south" to="another corridor">
      <inherit name="southdirection" />
    </exit>
    <object name="floor7">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in simple white tiles.</look>
      <alias>floor</alias>
    </object>
    <object name="ceiling8">
      <alias>ceiling</alias>
      <look>The ceiling is constructed from simple white tiles.  The striplights are switched off, and you wonder if there is any power to the building at all.</look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
        <value>lights</value>
        <value>striplights</value>
        <value>lightbulbs</value>
      </alt>
      <visible />
    </object>
    <object name="walls10">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The stark white colour of the walls reminds you of bones.</look>
      <alt type="stringlist">
        <value>corridor</value>
        <value>passageway</value>
      </alt>
    </object>
    <exit alias="east" to="corridor3">
      <inherit name="eastdirection" />
    </exit>
    <object name="east door">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookthrough>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="window2">
      <alias>window</alias>
      <scenery />
      <alt type="stringlist">
        <value>glass</value>
        <value>pane</value>
      </alt>
      <look>The glass is dirty, but you can still make out another bleached white corridor on the other side.</look>
      <lookin>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookin>
      <lookthrough>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="south door">
      <inherit name="container_open" />
      <alt type="stringlist">
        <value>lock</value>
        <value>locking mechanism</value>
      </alt>
      <scenery />
      <look>The door is thick and has a sturdy locking mechanism, which at some point must have been opened.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <object name="doctors office sw">
    <exit alias="northeast" to="another corridor">
      <inherit name="northeastdirection" />
    </exit>
  </object>
  <object name="doctors office nw">
    <exit alias="southeast" to="another corridor">
      <inherit name="southeastdirection" />
    </exit>
  </object>
  <object name="doctors office">
    <description><![CDATA[<br/>It has been faithfully preserved as a museum exhibit.<br/><br/>]]></description>
    <alias>doctor's office</alias>
    <exit alias="east" to="another corridor">
      <inherit name="eastdirection" />
    </exit>
    <object name="floor6">
      <alt type="stringlist">
        <value>ground</value>
        <value>carpet</value>
      </alt>
      <scenery />
      <look>The floor is carpeted with what was probably once a rich fabric, although it has been well-worn by years of visitors to the museum.</look>
      <visible />
      <alias>floor</alias>
    </object>
    <object name="ceiling7">
      <alias>ceiling</alias>
      <look>The doctor's office has a basic wooden ceiling.</look>
      <scenery />
      <alt type="stringlist" />
      <visible />
    </object>
    <object name="walls3">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The walls here are covered in panelled wood which looks fairly opulent.</look>
      <alt type="stringlist">
        <value>panels</value>
        <value>panelling</value>
      </alt>
    </object>
    <object name="desk">
      <look>The desk is a grandiose mahogany affair.  You can imagine a psychiatrist peering across at you from the other side of it, nodding sympathetically as you tell him your problems... and then prescribing more drugs, or a lobotomy.</look>
      <takemsg>The desk probably weighs a ton!</takemsg>
      <alt type="stringlist">
        <value>table</value>
      </alt>
      <move>The desk is too heavy for you to move.</move>
      <pull>The desk is too heavy for you to move.</pull>
      <push>The desk is too heavy for you to move.</push>
    </object>
    <object name="chairs1">
      <inherit name="plural" />
      <alias>chairs</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <look>The chairs are both big and leather bound, and look expensive.</look>
      <alt type="stringlist">
        <value>leather</value>
      </alt>
      <takemsg>The chairs are far too heavy for you to carry around.</takemsg>
      <move>You don't see much point in rearranging the furniture.</move>
      <pull>You don't see much point in rearranging the furniture.</pull>
      <push>You don't see much point in rearranging the furniture.</push>
    </object>
    <object name="lampshade">
      <look>The old-fashioned lampshade completes the quaint ambience of the chamber.  You can imagine a studious doctor poring over texts in here long after the sun has set, ignoring the occasional shouts and screams of the disturbed inmates.</look>
      <takemsg>The lampshade is too big and cumbersome for you to carry.</takemsg>
    </object>
    <object name="shelves">
      <inherit name="plural" />
      <scenery type="boolean">false</scenery>
      <look>The shelves are lined with medical books.</look>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <climb>You don't want to pull the shelves down on top of you.</climb>
    </object>
    <object name="medical books">
      <inherit name="plural" />
      <look>The books look suitably archaic and complicated, but must have been cutting-edge stuff at the time.</look>
      <scenery />
      <takemsg>You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.</takemsg>
      <read>You don't want to disturb your surroundings.</read>
      <take type="script">
        if (GetBoolean(time of day, "impending doom")) {
          msg ("You need to get out of here, fast - these heavy books will just weigh you down.")
        }
        else if (GetBoolean(time of day, "twilight")) {
          msg ("You need to get out of here, fast - these heavy books will just weigh you down.")
        }
        else {
          msg ("You do not normally take souvenirs from the places you visit - your aim in visiting abandoned buildings is to quietly observe and reflect, and take in the atmosphere.")
        }
      </take>
    </object>
    <object name="window3">
      <alias>window</alias>
      <look>A sheet of metal covers the large window from the other side, allowing no light into the room.</look>
      <alt type="stringlist">
        <value>metal</value>
        <value>sheet</value>
        <value>grille</value>
      </alt>
    </object>
    <object name="office">
      <scenery />
      <look>The office has been faithfully preserved.</look>
      <alt type="stringlist">
        <value>room</value>
      </alt>
    </object>
    <object name="door98">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is made from a rich dark wood, maybe mahogany.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alias>door</alias>
      <knockon>Nothing happens when you knock on the door.  You feel strangely relieved.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <object name="corridor3">
    <alias>white corridor</alias>
    <description><![CDATA[<br/>It runs from west to east, with a door at the western end and a larger set of double doors at the eastern end.<br/><br/>Halfway along the corridor it is bisected by another to form a T-junction.  This corridor leads to the south before ending at another door.<br/><br/>There are also doors set into the walls at regular intervals to the northwest, north, northeast, southwest and southeast - they each have windows set into them and look like cells in which patients might have slept, or maybe been isolated.  The door to the southeast is hanging slightly ajar.<br/><br/>The smell in here is almost unbearable.<br/>]]></description>
    <object name="floor8">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in simple white tiles.</look>
      <alias>floor</alias>
    </object>
    <object name="ceiling9">
      <alias>ceiling</alias>
      <look>The ceiling is constructed from simple white tiles.  The striplights are switched off, and you wonder if there is any power to the building at all.</look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
        <value>lights</value>
        <value>striplights</value>
        <value>lightbulbs</value>
      </alt>
      <visible />
    </object>
    <exit alias="west" to="corridor2">
      <inherit name="westdirection" />
    </exit>
    <object name="walls11">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The stark white colour of the walls reminds you of bones.</look>
      <alt type="stringlist">
        <value>corridor</value>
        <value>passageway</value>
      </alt>
    </object>
    <object name="west door2">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookthrough>
      <alias>west door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="west window">
      <alias>west window</alias>
      <scenery />
      <alt type="stringlist">
        <value>west glass</value>
      </alt>
      <look>The glass is dirty, but you can still make out another bleached white corridor on the other side.</look>
      <lookin>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookin>
      <lookthrough>The glass is dirty, but you can still make out another bleached white corridor on the other side.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <exit alias="east" to="common room">
      <inherit name="eastdirection" />
      <locked />
      <lockmessage>The doors are locked.</lockmessage>
    </exit>
    <object name="east doors2">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The double doors each have a large window set into them.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Through the glass of the east windows you can make out a large common room, in which the patients must have congregated.  Tables and chairs are neatly arranged, perhaps as a continuation of the exhibit.</lookthrough>
      <alias>east doors</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="east windows1">
      <alias>east windows</alias>
      <scenery />
      <alt type="stringlist">
        <value>east glass</value>
        <value>tables</value>
        <value>chairs</value>
        <value>common room</value>
      </alt>
      <look>Through the glass of the east windows you can make out a large common room, in which the patients must have congregated.  Tables and chairs are neatly arranged, perhaps as a continuation of the exhibit.</look>
      <lookin>Through the glass of the east window you can make out a large common room, in which the patients must have congregated.  Tables and chairs are neatly arranged, perhaps as a continuation of the exhibit.</lookin>
      <lookthrough>Through the glass of the east window you can make out a large common room, in which the patients must have congregated.  Tables and chairs are neatly arranged, perhaps as a continuation of the exhibit.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <exit alias="northwest" to="cell nw">
      <inherit name="northwestdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="north" to="cell n">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="northeast" to="cell ne">
      <inherit name="northeastdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="southwest" to="cell sw">
      <inherit name="southwestdirection" />
      <locked />
      <lockmessage>The door is locked.</lockmessage>
    </exit>
    <exit alias="southeast" to="cell">
      <inherit name="southeastdirection" />
    </exit>
    <object name="northwest door2">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <alias>northwest door</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="north door3">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <alias>north door</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="northeast door3">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <alias>northeast door</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="southwest door1">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <alias>southwest door</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="northwest window">
      <alias>northwest window</alias>
      <scenery />
      <alt type="stringlist">
        <value>northwest glass</value>
      </alt>
      <look>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</look>
      <lookin>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookin>
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="north window1">
      <alias>north window</alias>
      <scenery />
      <alt type="stringlist">
        <value>north glass</value>
      </alt>
      <look>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</look>
      <lookin>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookin>
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="northeast window1">
      <alias>northeast window</alias>
      <scenery />
      <alt type="stringlist">
        <value>northwest glass</value>
      </alt>
      <look>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</look>
      <lookin>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookin>
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="southwest window">
      <alias>southwest window</alias>
      <scenery />
      <alt type="stringlist">
        <value>southwest glass</value>
      </alt>
      <look>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</look>
      <lookin>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookin>
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room with a metal bedframe - little more than a cell really.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="southeast door2">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.  It is hanging slightly ajar, and a horrendous smell is coming from within.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>Beyond the door is a horrendous scene.  You can barely bring yourself to step inside the cell for a closer look.</lookthrough>
      <alias>southeast door</alias>
      <nokeymessage>The door is locked.</nokeymessage>
      <locked type="boolean">false</locked>
      <openmsg>You open the door.  The stench that wafts out is sickening, but not as appalling as the sight that greets you.</openmsg>
      <closemsg>Closing the door mercifully obscures the scene on the other side, but somehow the smell still seems to reach your nostrils.</closemsg>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="southeast window">
      <alias>southeast window</alias>
      <scenery />
      <alt type="stringlist">
        <value>southeast glass</value>
      </alt>
      <look>You cannot see through the glass - it seems to be smeared with something dark on the other side.</look>
      <lookin>Through the glass of the window you can make out a cramped and tiny room, and a revolting scene inside.</lookin>
      <lookthrough>Through the glass of the window you can make out a cramped and tiny room, and a revolting scene inside.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
  </object>
  <command name="listen2">
    <pattern>listen</pattern>
    <script>
      if (GetBoolean(north door, "scary")) {
        msg ("The scratching sounds from the north door seem to be getting more frantic.")
      }
      else if (GetBoolean(thing, "attacking")) {
        msg ("The snakelike hissing sound that the woman is making is terrifying.")
      }
      else if (GetBoolean(thing1, "here")) {
        msg ("The creature shambling towards you is shrieking like a tortured animal - it is a horrifying sound.")
      }
      else if (GetBoolean(time of day, "underground")) {
        msg ("Weird sounds seem to echo all around you, reverberating off the walls of the dank tunnels.")
      }
      else if (GetBoolean(time of day, "end")) {
        msg ("The sound of the distant waves is strangely soothing.  If you listen more intently, you can also hear a creaking sound, like old machinery.")
      }
      else if (GetBoolean(time of day, "nightfall5")) {
        msg ("You are relieved that the rain has stopped, but the silence that has replaced it seems all the more ominous.")
      }
      else if (GetBoolean(thing, "ready")) {
        msg ("You are sure you can hear a strange slapping sound, coming from the other room.")
      }
      else if (GetBoolean(time of day, "nightfall4")) {
        msg ("The only sound is the continual susurrus of the rain.")
      }
      else {
        msg ("The silence is utterly deathly, as if the mist shrouding the island somehow serves to deaden all sound.")
      }
    </script>
  </command>
  <object name="cell nw">
    <exit alias="southeast" to="corridor3">
      <inherit name="southeastdirection" />
      <locked type="boolean">false</locked>
    </exit>
  </object>
  <object name="cell n">
    <exit alias="south" to="corridor3">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="cell ne">
    <exit alias="southwest" to="corridor3">
      <inherit name="southwestdirection" />
    </exit>
  </object>
  <object name="cell sw">
    <exit alias="northeast" to="corridor3">
      <inherit name="northeastdirection" />
    </exit>
  </object>
  <object name="cell">
    <description><![CDATA[<br/>Everything is covered in blood.<br/><br/>]]></description>
    <beforefirstenter type="script"><![CDATA[
      msg ("You step into the room and gasp in horror.<br/><br/>A man has been slaughtered here.  He kneels before you as if in supplication, glistening organs and splintered ribs protruding from the ruins of his torso.  Blood is everywhere, soaking his clothes, the walls, the floor.<br/><br/>A scrap of paper is clutched in the man's left hand.")
      SetObjectFlagOn (time of day, "impending doom")
      play sound ("Broken Notes ~ Desolation.mp3", false, true)
    ]]></beforefirstenter>
    <onexit type="script">
      MakeObjectInvisible (golf club)
      MakeObjectVisible (golf club2)
      MakeObjectInvisible (pool cue)
      MakeObjectVisible (pool cue2)
      MakeObjectInvisible (prosthetic limb)
      MakeObjectVisible (prosthetic limb2)
      MakeObjectInvisible (piece of timber)
      MakeObjectVisible (piece of timber2)
    </onexit>
    <object name="ceiling10">
      <alias>ceiling</alias>
      <look>The ceiling is constructed from simple white tiles.  The striplights are switched off, and you wonder if there is any power to the building at all.  The ceiling is very low, and some of the blood has spattered across it.</look>
      <scenery />
      <alt type="stringlist">
        <value>ceiling tiles</value>
        <value>lights</value>
        <value>striplights</value>
        <value>lightbulbs</value>
      </alt>
      <visible />
    </object>
    <object name="floor9">
      <alt type="stringlist">
        <value>ground</value>
        <value>floor tiles</value>
      </alt>
      <scenery />
      <look>The floor is covered in simple white tiles, which are drenched in blood.</look>
      <alias>floor</alias>
    </object>
    <object name="walls12">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The sterile white walls have been splashed with crimson gore.</look>
    </object>
    <exit alias="west" to="corridor3">
      <inherit name="westdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (Got(piece of paper)) {
          msg ("You stuff the paper in your pocket and leave the dreadful room behind, suddenly desperate to get off the island as quickly as possible.<br/><br/>As you step back into the corridor, you hear hurried footfalls and the sound of the west door slamming.  Was someone just in here with you...?  You feel your blood turn momentarily to ice water in your veins - you need to get out of here, now.  You glance at your watch - it is time to head for your ferry.<br/>")
          MoveObject (player, corridor3)
          RemoveObject (rabbit2)
        }
        else {
          msg ("Even though you feel the bile rising in your throat at the very thought, you are too curious about the man's fate not to take the piece of paper...")
        }
      ]]></script>
    </exit>
    <object name="west door3">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>The door is painted white and has a single window set into it.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <visible />
      <lookthrough>The glass is dirty, but you can make out the bleached white corridor on the other side - compared to this blood-drenched chamber of horrors it looks like sanctity.</lookthrough>
      <alias>west door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="west window1">
      <alias>west window</alias>
      <scenery />
      <alt type="stringlist">
        <value>west glass</value>
      </alt>
      <look>The glass is covered in dried blood, and you cannot see through it.</look>
      <lookin>The glass is dirty, but you can make out the bleached white corridor on the other side - compared to this blood-drenched chamber of horrors it looks like sanctity.</lookin>
      <lookthrough>The glass is dirty, but you can make out the bleached white corridor on the other side - compared to this blood-drenched chamber of horrors it looks like sanctity.</lookthrough>
      <break>You do not vandalise the places you visit.</break>
      <smash>You do not vandalise the places you visit.</smash>
      <hit>You do not vandalise the places you visit.</hit>
      <kick>You do not vandalise the places you visit.</kick>
    </object>
    <object name="bed frame">
      <look>The simple metal frame is caked in blood.</look>
      <move>You don't want to touch it.</move>
      <push>You don't want to touch it.</push>
      <pull>You don't want to touch it.</pull>
      <takemsg>You don't want to touch it.</takemsg>
    </object>
    <object name="corpse">
      <alt type="stringlist">
        <value>dead body</value>
        <value>cadaver</value>
        <value>man</value>
      </alt>
      <look type="script">
        if (Got(piece of paper)) {
          msg ("The man, who only appears to be around your own age, has been brutally disembowelled, as though something sharp was rammed into his stomach and dragged upwards through his guts.  A congealed pool of blood encircles him.")
        }
        else {
          msg ("The man, who only appears to be around your own age, has been brutally disembowelled, as though something sharp was rammed into his stomach and dragged upwards through his guts.  A congealed pool of blood encircles him, into which is dangling the scrap of paper still clutched between the fingers of his left hand.")
        }
      </look>
    </object>
    <object name="blood">
      <inherit name="plural" />
      <scenery />
      <look>There seems to be more blood here than could possibly come from one person.  The floor is scarlet virtually from corner to corner.</look>
    </object>
    <object name="guts">
      <inherit name="plural" />
      <alt type="stringlist">
        <value>bowels</value>
        <value>insides</value>
        <value>innards</value>
        <value>organs</value>
        <value>intestines</value>
      </alt>
      <takemsg>Are you mad??</takemsg>
      <scenery />
      <look>The poor man's insides are spilling out of his belly onto the floor.</look>
    </object>
    <object name="hand">
      <scenery />
      <look>The man is clutching a piece of paper tightly in his left hand.</look>
    </object>
    <object name="piece of paper">
      <alt type="stringlist">
        <value>scrap of paper</value>
        <value>note</value>
      </alt>
      <scenery />
      <takemsg>Even though you feel the bile rising in your throat at the very thought, you are too curious about the man's fate not to take the piece of paper... you reach out and snatch it quickly from between his cold fingers.  The bloodstained page seems to be a crudely-sketched map of the island.  You can see 'statue' and 'chapel' denoted in the centre, and 'amusement park' in the southwest, and of course the asylum itself.  In the northeast corner the scribbled drawing of a lighthouse has been circled, and the words 'way in?' written next to it.  Turning it over, you notice the sinister phrase 'THEY COME OUT OF THE WOODS AT NIGHT' scrawled on the back.  A chill runs through your body as you stare at the words.</takemsg>
      <drop type="boolean">false</drop>
      <dropmsg>You don't want to drop it after the horror of taking it in the first place.</dropmsg>
      <feature_usegive />
      <take type="script">
        if (GetBoolean(piece of paper, "on the floor without key")) {
          msg ("You pull the paper back out from under the door and put it back in your pocket.")
          MoveObject (piece of paper, player)
          SetObjectFlagOff (piece of paper, "on the floor without key")
        }
        else if (GetBoolean(piece of paper, "on the floor with key")) {
          msg ("You pull the paper back out from under the door.  On top of it is a rusty old key.")
          SetObjectFlagOn (piece of paper, "on the floor with key outside")
          MakeObjectVisible (chapel key)
          SetObjectFlagOff (piece of paper, "on the floor with key")
        }
        else if (GetBoolean(piece of paper, "on the floor with key outside")) {
          msg ("You'll need to take the key first.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key removed")) {
          msg ("You pick the paper back up and put it in your pocket.")
          MoveObject (piece of paper, player)
        }
        else if (GetBoolean(piece of paper, "on the floor")) {
          msg ("You pick the paper back up and put it in your pocket.")
          MoveObject (piece of paper, player)
          SetObjectFlagOff (piece of paper, "on the floor")
        }
        else {
          msg ("Even though you feel the bile rising in your throat at the very thought, you are too curious about the man's fate not to take the piece of paper... you reach out and snatch it quickly from between his cold fingers.  The bloodstained page seems to be a crudely-sketched map of the island.  You can see 'statue' and 'chapel' denoted in the centre, and 'amusement park' in the southwest, and of course the asylum itself.  In the northeast corner the scribbled drawing of a lighthouse has been circled, and the words 'way in?' written next to it.  Turning it over, you notice the sinister phrase 'THEY COME OUT OF THE WOODS AT NIGHT' scrawled on the back.  A chill runs through your body as you stare at the words.")
          MoveObject (piece of paper, player)
        }
      </take>
      <look type="script">
        if (Got(piece of paper)) {
          msg ("The bloodstained paper seems to be a crudely-sketched map of the island.  You can see 'statue' and 'chapel' denoted in the centre, and 'amusement park' in the southwest, and of course the asylum itself.  In the northeast corner the scribbled drawing of a lighthouse has been circled, and the words 'way in?' written next to it.  Turning it over, you notice the sinister phrase 'THEY COME OUT OF THE WOODS AT NIGHT' scrawled on the back.  A chill runs through your body as you stare at the words.")
        }
        else if (GetBoolean(piece of paper, "on the floor without key")) {
          msg ("The paper is hidden from view, under the chapel door.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key")) {
          msg ("The paper is hidden from view, under the chapel door.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key outside")) {
          msg ("The paper is on the floor.  A rusty key is on top of it.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key removed")) {
          msg ("The paper is on the floor oustide the door.")
        }
        else if (GetBoolean(piece of paper, "on the floor")) {
          msg ("The paper is on the floor oustide the door.")
        }
        else {
          msg ("Even though you feel the bile rising in your throat at the very thought, you are too curious about the man's fate not to take the piece of paper...")
        }
      </look>
      <read type="script">
        if (Got(piece of paper)) {
          msg ("The bloodstained paper seems to be a crudely-sketched map of the island.  You can see 'statue' and 'chapel' denoted in the centre, and 'amusement park' in the southwest, and of course the asylum itself.  In the northeast corner the scribbled drawing of a lighthouse has been circled, and the words 'way in?' written next to it.  Turning it over, you notice the sinister phrase 'THEY COME OUT OF THE WOODS AT NIGHT' scrawled on the back.  A chill runs through your body as you stare at the words.")
        }
        else if (GetBoolean(piece of paper, "on the floor without key")) {
          msg ("The paper is hidden from view, under the chapel door.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key")) {
          msg ("The paper is hidden from view, under the chapel door.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key outside")) {
          msg ("The paper is on the floor.  A rusty key is on top of it.")
        }
        else if (GetBoolean(piece of paper, "on the floor with key removed")) {
          msg ("The paper is on the floor oustide the door.")
        }
        else if (GetBoolean(piece of paper, "on the floor")) {
          msg ("The paper is on the floor oustide the door.")
        }
        else {
          msg ("Even though you feel the bile rising in your throat at the very thought, you are too curious about the man's fate not to take the piece of paper...")
        }
      </read>
      <ontake type="script">
      </ontake>
      <pull type="script">
        if (GetBoolean(piece of paper, "on the floor without key")) {
          msg ("You pull the paper back from under the door.")
          SetObjectFlagOn (piece of paper, "on the floor")
          SetObjectFlagOff (piece of paper, "on the floor without key")
        }
        else if (GetBoolean(piece of paper, "on the floor with key")) {
          msg ("You pull the paper back out from under the door.  On top of it is a rusty old key.")
          SetObjectFlagOn (piece of paper, "on the floor with key outside")
          MakeObjectVisible (chapel key)
          SetObjectFlagOff (piece of paper, "on the floor with key")
        }
        else if (GetBoolean(piece of paper, "on the floor with key outside")) {
          msg ("The paper is already outside the door.  A rusty key is on top of it.")
        }
        else {
          msg ("That seems a bit pointless.")
        }
      </pull>
      <selfuseon type="scriptdictionary">
        <item key="chapel door">
          if (GetBoolean(piece of paper, "on the floor with key removed")) {
            msg ("There's no need to do that again.")
          }
          else {
            msg ("You unfold the paper and slide it under the door.")
            MoveObject (piece of paper, outside chapel)
            SetObjectFlagOn (piece of paper, "on the floor without key")
          }
        </item>
      </selfuseon>
    </object>
  </object>
  <command name="wait2">
    <pattern>wait</pattern>
    <script><![CDATA[
      if (GetBoolean(time of day, "nightfall")) {
        msg ("You wait for some time, but the ferry does not emerge from the fog.  You glance anxiously at your watch... surely the ferryman will be here soon.")
        SetObjectFlagOff (time of day, "nightfall")
        SetObjectFlagOn (time of day, "nightfall2")
      }
      else if (GetBoolean(time of day, "nightfall2")) {
        msg ("Still nothing disturbs the eerie tranquility of the sea, or the sinister curtain of mist... the sun is beginning to sink.  What will you do if the ferry doesn't come to pick you up??")
        SetObjectFlagOff (time of day, "nightfall2")
        SetObjectFlagOn (time of day, "nightfall3")
      }
      else if (GetBoolean(time of day, "nightfall3")) {
        msg ("Still the sun continues to set, casting a beautiful orange glow across the skyline... you almost feel as though you are the only human on an alien planet.  But the panic building in your gut belies the serenity of the scene.<br/><br/>You start to think about who will notice your absence.  A couple of years ago it would have been Sarah of course... but now you might as well be dead to her.  You remember the last time you called her, and how cold she had been, how determined to keep you cut out of her life... like a cancer, surgically removed.<br/><br/>Wait!  Of course... your mobile phone!!  What were you thinking??  You brought it along for just this sort of emergency!  You yank it out of your bag and switch it on.<br/><br/>No signal.<br/><br/>You wander up and down the jetty, waving the thing in the air like a lunatic, but to no avail.  The island must be outside the range of the telephone masts on the mainland.  A cold, sick feeling spreads from your stomach, pumped around your body by your increasingly frantic heartbeat.  How could you have been so stupid??  For all you know, the creepy ferryman and his craft are now at the bottom of the ocean... and you didn't tell anyone else you were coming here.<br/><br/>There's nothing to do but continue to wait... you try to dispel the images from your mind, of the blood-soaked cell in the asylum, of the corpse's bulging eyes... and those terrible words on the paper, 'THEY COME OUT OF THE WOODS AT NIGHT'...")
        SetObjectFlagOff (time of day, "nightfall3")
        SetObjectFlagOn (time of day, "nightfall35")
      }
      else if (GetBoolean(time of day, "nightfall35")) {
        SetBackgroundColour ("Black")
        SetForegroundColour ("LightYellow")
        msg ("It is full dark.  You can barely stop your hands from trembling as you take out your torch, and switch it on.  The mist seems to be closing in on you, twisting into strange and evil shapes just outside of the pitiful cone of light.  Even as you begin to contemplate spending a night lying on the jetty, you hear a clap of thunder, and the deluge that the sky had been threatening all day is finally unleashed.<br/><br/>You are quickly drenched, and your heart sinks as you realise you cannot stay here - you must venture back into the island to look for shelter.<br/><br/>Maybe if you can get through the night, you will be able to find some other way to contact the mainland tomorrow... or even a boat somewhere that you can use to escape.<br/><br/>Already shivering in the freezing downpour, you stagger northwards.")
        MoveObject (torch, player)
        SetObjectFlagOn (torch, "nowon")
        MoveObject (player, gift shop)
        SetObjectFlagOff (time of day, "tempnight")
        SetObjectFlagOff (time of day, "nightfall35")
        SetObjectFlagOn (time of day, "nightfall4")
        MakeObjectVisible (creature1)
        MakeObjectInvisible (rabbits)
        MakeObjectInvisible (rabbits1)
        MakeObjectInvisible (rabbits10)
        MakeObjectInvisible (rabbits11)
        MakeObjectInvisible (rabbits12)
        MakeObjectInvisible (rabbits14)
        MakeObjectInvisible (rabbits15)
        MakeObjectInvisible (rabbits16)
        MakeObjectInvisible (rabbits17)
        MakeObjectInvisible (rabbits18)
        MakeObjectInvisible (rabbits19)
        MakeObjectInvisible (rabbits2)
        MakeObjectInvisible (rabbits20)
        MakeObjectInvisible (rabbits3)
        MakeObjectInvisible (rabbits4)
        MakeObjectInvisible (rabbits5)
        MakeObjectInvisible (rabbits6)
        MakeObjectInvisible (rabbits7)
        MakeObjectInvisible (rabbits8)
        MakeObjectInvisible (rabbits9)
        MakeObjectVisible (rabbitsX0)
        MakeObjectVisible (rabbitsX1)
        MakeObjectVisible (rabbitsX2)
        MakeObjectVisible (rabbitsX3)
        MakeObjectVisible (rabbitsX4)
        MakeObjectVisible (rabbitsX5)
        MakeObjectVisible (rabbitsX6)
        MakeObjectVisible (rabbitsX17)
        play sound ("Broken Notes ~ Cold Rain of Silent Hill.mp3", false, true)
      }
      else if (GetBoolean(thing, "attacking")) {
        msg ("The old woman lunges at you and grabs your legs in a powerful embrace.  You scream as you fall to the floor, and keep screaming as she wriggles along your body, until her face is pressed up against yours.  Then she wraps her gnarled fingers around your throat, and your scream is choked off.  All you can do is stare into her eyes as she throttles the life out of you, gore dripping from her mouth as it widens into a sickening grin.<br/>")
        finish
      }
      else if (GetBoolean(thing1, "here")) {
        msg ("The vile monstrosity leaps at you like a dog, shrieking with inhuman glee as it clamps its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.<br/>")
        finish
      }
      else if (GetBoolean(footfalls, "following")) {
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      }
      else if (game.pov.parent = somewhere) {
        msg ("Nothing happens.  Maybe you should take a look...?")
      }
      else if (GetBoolean(time of day, "nightfall4")) {
        msg ("Waiting around here seems like a bad idea.")
      }
      else {
        msg ("There doesn't seem much point in just waiting around here.")
      }
    ]]></script>
  </command>
  <verb>
    <property>put</property>
    <pattern>put</pattern>
    <defaultexpression>"You can't put " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookunder</property>
    <pattern>look under</pattern>
    <defaultexpression>"You can't look under " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>put(paper)underdoor</property>
    <pattern>put (paper) under door</pattern>
    <defaultexpression>"You can't put (paper) under door " + object.article + "."</defaultexpression>
  </verb>
  <object name="chapel4">
    <alias>back room of the chapel</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>Pictures, newspaper clippings and scribbled notes cover the floor and the walls.<br/><br/>To the south, a door leads back into the chapel's main room.<br/>]]></description>
    <beforefirstenter type="script"><![CDATA[
      msg ("<br/>You open the door and step into into a large room.  You are unsure what it was originally used for; perhaps even living quarters for the priest?  Now, however, it has been changed into something completely different.<br/><br/>Someone has been using the room as a workshop of some kind.  A large table in the middle of the room is completely covered in paper, ranging from newspaper extracts to scribbled sketches.  Notes and doodles lie scattered on the floor amongst piles of dusty books and notepads.  The walls are similarly adorned - maps and charts and more indecipherable notes pinned all around, across the closed shutters as though the room's occupant was comfortable working with only the artifical light of the lamp on the table.<br/><br/>It looks like the chaotic study of an ingenious physicist... or a madman.<br/>")
    ]]></beforefirstenter>
    <enter type="script">
      stop sound
    </enter>
    <exit alias="south" to="chapel2">
      <inherit name="southdirection" />
    </exit>
    <object name="lamp">
      <inherit name="switchable" />
      <scenery type="boolean">false</scenery>
      <look>The lamp is one of those battery-powered ones that you would take along on a camping trip.  You can imagine the eerie glow that it would cast around the room if it was switched on.</look>
      <alt type="stringlist">
        <value>light</value>
        <value>bulb</value>
      </alt>
      <takemsg>The lamp is too heavy and unwieldy for you to carry.</takemsg>
      <feature_switchable />
      <switchonmsg>Nothing happens when you switch on the lamp - the batteries must have run out.</switchonmsg>
      <switchoffmsg>You switch off the useless lamp.</switchoffmsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
    </object>
    <object name="rack of keys">
      <takemsg>The rack of keys is nailed to the wall.</takemsg>
      <alt type="stringlist">
        <value>hooks</value>
        <value>labels</value>
      </alt>
      <look type="script">
        msg ("The rack of keys is on the wall opposite, and has several keys dangling from it.  Some of the hooks are labelled; you can see 'hotel', but the key is not hanging there.  One in particular does catch your eye though: a small key hanging from a hook labelled with the word 'lighthouse'.")
        MakeObjectVisible (lighthouse key)
      </look>
    </object>
    <object name="lighthouse key">
      <visible type="boolean">false</visible>
      <look>Just a nondescript key.</look>
      <takemsg>You take the key and put it in your pocket.</takemsg>
      <drop type="boolean">false</drop>
      <dropmsg>It does not seem sensible to discard the key.</dropmsg>
      <take type="script">
        msg ("You take the key and put it in your pocket.")
        SetObjectFlagOn (thing, "ready")
        MoveObject (lighthouse key, player)
      </take>
    </object>
    <object name="table1">
      <alias>table</alias>
      <look>The bizarre room is covered with pens, pencils, clippings, sketches, scribbled notes, books, charts, and other writings - as though someone was using this room as a secret study in which to work on a complex theory.</look>
      <alt type="stringlist" />
      <takemsg>The table is far too heavy for you to lift.</takemsg>
      <push type="script">
        if (ListContains(ScopeVisible(), trapdoor)) {
          msg ("You have already found the hidden trapdoor.")
        }
        else {
          msg ("With a grunt of exertion you move the table a couple of feet... and reveal a trapdoor beneath it.")
          MakeObjectVisible (trapdoor)
        }
      </push>
      <pull type="script">
        if (ListContains(ScopeVisible(), trapdoor)) {
          msg ("You have already found the hidden trapdoor.")
        }
        else {
          msg ("With a grunt of exertion you move the table a couple of feet... and reveal a trapdoor beneath it.")
          MakeObjectVisible (trapdoor)
        }
      </pull>
      <move type="script">
        if (ListContains(ScopeVisible(), trapdoor)) {
          msg ("You have already found the hidden trapdoor.")
        }
        else {
          msg ("With a grunt of exertion you move the table a couple of feet... and reveal a trapdoor beneath it.")
          MakeObjectVisible (trapdoor)
        }
      </move>
    </object>
    <object name="walls14">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The bizarre room is covered with pens, pencils, clippings, sketches, scribbled notes, books, charts, and other writings - as though someone was using this room as a secret study in which to work on a complex theory.</look>
    </object>
    <object name="pens">
      <inherit name="plural" />
      <alt type="stringlist">
        <value>pencils</value>
      </alt>
      <scenery />
      <look>The bizarre room is covered with pens, pencils, clippings, sketches, scribbled notes, books, charts, and other writings - as though someone was using this room as a secret study in which to work on a complex theory.</look>
      <takemsg>You don't see the point in picking these up.</takemsg>
    </object>
    <object name="sketches">
      <inherit name="plural" />
      <scenery />
      <alt type="stringlist">
        <value>writings</value>
        <value>charts</value>
        <value>cuttings</value>
        <value>cut-outs</value>
        <value>clippings</value>
        <value>drawings</value>
        <value>doodles</value>
        <value>notes</value>
        <value>books</value>
        <value>newspapers</value>
      </alt>
      <takemsg>Although they are all intriguing, you don't think it's worth taking any of the papers with you.</takemsg>
      <look><![CDATA[The bizarre room is covered with pens, pencils, clippings, sketches, scribbled notes, books, charts, and other writings - as though someone was using this room as a secret study in which to work on a complex theory.<br/><br/>Certain phrases and headlines leap out at you:<br/><br/>'Salvation Island's Secret History' (newspaper cutting);<br/><br/>'where is the factory?' (scrawled across several sheets of paper as if in frustration);<br/><br/>'15-year old girl found murdered in holiday resort' (newspaper cutting);<br/><br/>'Edward Hardacre revives Salvation's fortunes' (newspaper cutting along with photograph of a smiling man)<br/><br/><br/>Could this place have been Edward Hardacre's secret den??<br/><br/>And how was it locked from the inside...?]]></look>
      <read>Certain phrases and headlines leap out at you:  'Salvation Island's Secret History' (newspaper cutting);  'where is the factory?' (scrawled across several sheets of paper as if in frustration);  '15-year old girl found murdered in holiday resort' (newspaper cutting);  'Edward Hardacre revives Salvation's fortunes' (newspaper cutting along with photograph of a smiling man)</read>
    </object>
    <object name="trapdoor">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <visible type="boolean">false</visible>
      <look>Whoever locked the chapel from the inside must have left via this trapdoor.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <nokeymessage>The trapdoor is locked.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="door4">
      <inherit name="container_open" />
      <alias>north door</alias>
      <scenery />
      <look>Just a nondescript wooden door.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="floor11">
      <alias>floor</alias>
      <alt type="stringlist">
        <value>ground</value>
        <value>floorboards</value>
        <value>boards</value>
      </alt>
      <scenery />
      <look>The floor is made from simple wooden boards.</look>
    </object>
    <object name="ceiling12">
      <alias>ceiling</alias>
      <scenery />
      <look>The chapel's roof is simple and unassuming, with thick wooden beams running across it.</look>
      <alt type="stringlist">
        <value>roof</value>
      </alt>
    </object>
    <object name="map">
      <takemsg>You fold up the map and put it in your back pocket.</takemsg>
      <look><![CDATA[The map is a detailed map of the island.  You recognise various locations: the gift shop, the village, the asylum, the chapel.<br/><br/>The latter two have an X drawn across them, as does the lighthouse in the island's northeast corner.  There is another X a few centimetres to the south of a place labelled as 'home', which is just west of the asylum, and then another X is marked in the island's northwest corner.  The word 'factory?' is scrawled there.<br/><br/>Finally, a large X has been drawn across the amusement park in the southwest corner of the island.  Ominously, the words 'where they live?' have been written alongside it.]]></look>
      <take />
      <dropmsg>You drop the map on the ground.</dropmsg>
      <read>The map is a detailed map of the island.  You recognise various locations: the gift shop, the village, the asylum, the chapel.</read>
    </object>
  </object>
  <verb>
    <property>twist</property>
    <pattern>twist</pattern>
    <defaultexpression>"You can't twist " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>attack</property>
    <pattern>attack</pattern>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>fight</property>
    <pattern>fight</pattern>
    <defaultexpression>"You can't fight " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>battle</property>
    <pattern>battle</pattern>
    <defaultexpression>"You can't battle " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>punch</property>
    <pattern>punch</pattern>
    <defaultexpression>"You can't punch " + object.article + "."</defaultexpression>
  </verb>
  <object name="top of the staircase">
    <descprefix>You are in the lighthouse, at</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>A ladder leads upwards to another trapdoor, while a trail of blood leads back down the steps into darkness.<br/>]]></description>
    <exit alias="down" to="lighthouse1">
      <inherit name="downdirection" />
    </exit>
    <object name="spiral staircase1">
      <look>A set of metal steps with a handrail leads back to the foot of the lighthouse.  The steps are slick with blood.</look>
      <alt type="stringlist">
        <value>stairs</value>
        <value>steps</value>
        <value>handrail</value>
      </alt>
      <alias>spiral staircase</alias>
      <climb type="script">
        MoveObject (player, lighthouse)
      </climb>
      <descend type="script">
        MoveObject (player, lighthouse)
      </descend>
    </object>
    <object name="walls16">
      <inherit name="plural" />
      <alias>walls</alias>
      <scenery />
      <look>The curved walls of the lighthouse encircle you with stone.  A bloody handprint is smeared across the wall to the right of the ladder.</look>
    </object>
    <object name="ceiling14">
      <alias>ceiling</alias>
      <scenery />
      <look>The stone ceiling is visible above you, with a trapdoor set into it accessible via the ladder.</look>
    </object>
    <object name="floor13">
      <alias>floor</alias>
      <scenery />
      <look>You can no longer make out the floor, way beneath you at the bottom of the staircase.</look>
      <alt type="stringlist">
        <value>ground</value>
      </alt>
    </object>
    <object name="ladder">
      <look>The ladder is an ancient iron thing, attached to the wall.  It leads upwards towards a trapdoor in the ceiling.</look>
      <climb type="script">
        if (GetBoolean(revelations, "revealed")) {
          msg ("There is no reason to trouble the poor man again.  You must descend through the catacombs if you are to escape.")
        }
        else {
          MoveObject (player, top of the lighthouse)
        }
      </climb>
      <ascend type="script">
        if (GetBoolean(revelations, "revealed")) {
          msg ("There is no reason to trouble the poor man again.  You must descend through the catacombs if you are to escape.")
        }
        else {
          MoveObject (player, top of the lighthouse)
        }
      </ascend>
    </object>
    <object name="trapdoor2">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <visible />
      <look>Just a simple wooden trapdoor, set into the ceiling at the top of the ladder.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <nokeymessage>The trapdoor is locked.</nokeymessage>
      <locked type="boolean">false</locked>
      <unlockmessage>The trapdoor is now unlocked.</unlockmessage>
      <lockmessage>The trapdoor is now locked.</lockmessage>
      <alias>trapdoor</alias>
      <knockon>You can't reach the trapdoor from here - you'll need to climb the ladder.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <exit alias="up" to="top of the lighthouse">
      <inherit name="updirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(revelations, "revealed")) {
          msg ("There is no reason to trouble the poor man again.  You must descend through the catacombs if you are to escape.")
        }
        else {
          MoveObject (player, top of the lighthouse)
        }
      </script>
    </exit>
    <object name="blood2">
      <alias>blood</alias>
      <scenery />
      <look>The steps are slick with blood, and a gory handprint smears the wall next to the ladder.</look>
      <alt type="stringlist">
        <value>handprint</value>
      </alt>
    </object>
  </object>
  <object name="top of the lighthouse">
    <descprefix>You are at</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>Darkness surrounds you on all sides, and the rain continues to lash the island with its unending misery.<br/><br/>The lighting mechanism is before you, switched off of course, but this catches your attention for barely a moment before you notice a figure slumped against the guardrail.<br/>]]></description>
    <enter type="script">
      play sound ("Broken Notes ~ Cold Rain of Silent Hill.mp3", false, true)
    </enter>
    <onexit type="script">
      stop sound
    </onexit>
    <exit alias="down" to="top of the staircase">
      <inherit name="downdirection" />
      <runscript />
      <script type="script">
        if (GetBoolean(revelations, "revealed")) {
          msg ("You look back at the forlorn figure of the man, and wonder if he will survive the night.  And then you consider your impending journey through the island's catacombs, and realise that you could be far closer to death than he is.  Your gaze drifts out across the black expanse of the ocean, feeling the icy drizzle on your face and wondering if it is the last time you will ever set foot outside... and with that, you turn and descend the ladder, leaving him alone in the rain.")
          MoveObject (player, top of the staircase)
        }
        else {
          MoveObject (player, top of the staircase)
        }
      </script>
    </exit>
    <object name="revelations">
      <visible type="boolean">false</visible>
    </object>
    <object name="floor14">
      <alias>floor</alias>
      <scenery />
      <look>The floor beneath you is simple stone.  The blood trail leads from the open trapdoor over to the slumped figure.</look>
      <alt type="stringlist">
        <value>ground</value>
      </alt>
    </object>
    <object name="lighting mechanism">
      <look>You have absolutely no idea how to operate it, but the idea of casting a bright light across the island is strangely appealing, as though it might somehow dispel all of Salvation's horrors.</look>
    </object>
    <object name="sky31">
      <scenery />
      <alias>sky</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The sky is a deep black abyss, devoid of stars and determined to soak you with its downpour.")
        }
        else {
          msg ("The sky is a miserable grey colour, threatening to rain at any moment.")
        }
      </look>
    </object>
    <object name="mist9">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="blood3">
      <alias>blood</alias>
      <scenery />
      <look>Blood leads from the trapdoor across to the slumped figure.</look>
    </object>
    <object name="guardrail">
      <scenery />
      <look>A guardrail encircles the top of the lighthouse to prevent anyone from accidentally falling off.</look>
    </object>
    <object name="trapdoor key">
      <visible type="boolean">false</visible>
      <look>Just a small metal key.</look>
      <drop type="boolean">false</drop>
      <dropmsg>It does not seem sensible to discard the key.</dropmsg>
    </object>
    <object name="slumped figure1">
      <inherit name="male" />
      <alt type="stringlist">
        <value>man</value>
        <value>person</value>
      </alt>
      <alias>slumped figure</alias>
      <look type="script"><![CDATA[
        if (GetBoolean(revelations, "revealed")) {
          msg ("The man seems to have fallen asleep, his breath little more than a ragged wheezing.")
        }
        else {
          msg ("The figure is a man, but his age and features are difficult to discern, as he is in incredibly bad condition - long matted hair is plastered to the sides of his filthy face, and his clothes are similarly caked with muck and gore.  One of his arms is cradled by the other, as though badly injured, and blood is seeping from many wounds.  At first you think he might be dead, but then his eyes flick open and he snarls at you, 'did you close it?  Did you close it??\"<br/><br/>You stare at him blankly as he tries to rise, before sighing and sagging back down again, unable to stand.  His eyes flit wildly from side to side in fear.<br/><br/>\"The door downstairs, you idiot.  If you left it unlocked they could be in here by now!!\"<br/><br/>Before you have time to answer, he continues.<br/><br/>\"Oh, what's the use... I'm dead anyway... if those things don't kill me this godawful rain will...\"<br/><br/>He lifts his head to the sky and smiles maniacally as the downpour continues to soak him.  He's right - he needs to get inside before he dies from exposure, never mind his injuries.<br/>")
          wait {
            msg ("\"Why don't you let me help you back inside?\" you ask.<br/><br/>\"Don't bother,\" he snaps, then coughs and spits blood.  \"I'd rather die up here than see another of those... things.\"<br/><br/>\"What... what are they?\"<br/><br/>\"I don't know... this place is... insane.  I came here to search for Hardacre...\" he chuckles darkly.  \"I'm a writer, you see?  I thought I'd found an interesting little mystery to dissect... but I didn't bargain for THIS.\"<br/><br/>He gestures with one of his arms while the other hangs limply at his side.<br/><br/>\"But... there must be some way to get off this place??\" you persist.<br/><br/>His body is once again racked by coughing before he answers.  \"There are... catacombs.  Tunnels, underneath the island.  Hardacre had found them, was exploring them when he... disappeared.  It's not hard to imagine what happened to him... pity I'll never be able to write about all of this.\"  His eyes mist over for a second, before his attention snaps back to you.  \"Why are you here, anyway?  Are you even real??\"<br/>")
            wait {
              msg ("\"I'm... an urban explorer,\" you reply, feeling sheepish.  \"I look around abandonded old buildings.\"<br/><br/>He stares at you for a second, then laughs uproariously before deteriorating into another bout of hacking coughs.<br/><br/>\"Well, each to their own, I suppose.  You definitely picked the wrong place to come snooping around...\"<br/><br/>\"You were saying about the tunnels?\"  You press him, eager to glean any knowledge that might help you to survive.<br/><br/>\"Ah... yes... they stretch for miles, a labyrinth under the island... but if you follow the main tunnel to the west you should come out on the other side... if you can find a way into the theme park, I think there might be a boat there that you could use...\"<br/><br/>Another fit of coughing shakes his wasted body.  You wonder how long he has been trapped here...  how long since he last ate...<br/>")
              wait {
                msg ("\"But... what exactly is going on here?\" you persist.  \"Why is the place crawling with monsters??\"<br/><br/>He grips your arm suddenly, wide eyes staring into yours.  You are suddenly frightened of this man, driven almost feral by terror... his fingernails dig into your elbow and his breath smells rotten and feverish.<br/><br/>\"I think Hardacre found out this island's secret.  I think something was buried here when the place was bombed... or at least, they thought it was...\"<br/><br/>As another bout of coughing wracks his emaciated frame, he reaches into his torn jacket.  He winces in pain as he presses a small metal key into your palm.<br/><br/>\"Here.  This will unlock the trapdoor downstairs.  Follow the tunnel west and you might have a chance.  And do me a favour... lock the door before you go.\"<br/><br/>He sags backwards, sliding down to the ground.  You wish there was something you could do for him, but he seems determined to see out his remaining hours just lying here.  You hope he gets to see another sunrise.<br/>")
                MoveObject (trapdoor key, player)
                MakeObjectVisible (trapdoor key)
                SetObjectFlagOn (revelations, "revealed")
              }
            }
          }
        }
      ]]></look>
    </object>
    <object name="trapdoor3">
      <inherit name="container_open" />
      <inherit name="container_lockable" />
      <visible />
      <look>Just a simple wooden trapdoor, set into the floor.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <nokeymessage>The trapdoor is locked.</nokeymessage>
      <locked type="boolean">false</locked>
      <unlockmessage>The trapdoor is now unlocked.</unlockmessage>
      <lockmessage>The trapdoor is now locked.</lockmessage>
      <alias>trapdoor</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="rain31">
      <scenery />
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("The rain thunders incessantly down around you, soaking your hair and clothes.")
        }
        else {
          msg ("I can't see that.")
        }
      </look>
    </object>
  </object>
  <verb>
    <property>descend</property>
    <pattern>descend</pattern>
    <defaultexpression>"You can't descend " + object.article + "."</defaultexpression>
  </verb>
  <object name="catacombs 1">
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>A cramped and uneven tunnel leads southwest.<br/><br/>A ladder leads back up to the lighthouse, but you know that this way offers only an illusion of safety.  You must press on into the darkness ahead.<br/>]]></description>
    <beforefirstenter type="script">
      play sound ("Broken Notes ~ The Birth of Pyramid Head.mp3", false, true)
    </beforefirstenter>
    <enter type="script">
      SetObjectFlagOn (time of day, "underground")
    </enter>
    <exit alias="up" to="lighthouse1">
      <inherit name="updirection" />
      <runscript />
      <script type="script">
        msg ("There's no point in turning back.  If there are indeed boats in the amusement park then that's the only option for you now.")
      </script>
    </exit>
    <object name="ladder1">
      <alias>ladder</alias>
      <look>A simple metal ladder set into the rock wall that leads back upwards to the lighthouse.</look>
      <alt type="stringlist">
        <value>steps</value>
      </alt>
      <climb>There's no point in turning back.  If there are indeed boats in the amusement park then that's the only option for you now.</climb>
      <ascend>There's no point in turning back.  If there are indeed boats in the amusement park then that's the only option for you now.</ascend>
    </object>
    <object name="walls17">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="southwest" to="catacombs2">
      <inherit name="southwestdirection" />
    </exit>
    <object name="trapdoor5">
      <alias>trapdoor</alias>
      <scenery />
      <look>The trapdoor is way above you at the top of the ladder.</look>
      <knockon>You can't reach it from down here.</knockon>
    </object>
  </object>
  <verb>
    <property>wake</property>
    <pattern>wake</pattern>
    <defaultexpression>"You can't wake " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>awaken</property>
    <pattern>awaken</pattern>
    <defaultexpression>"You can't awaken " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>shake</property>
    <pattern>shake</pattern>
    <defaultexpression>"You can't shake " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>poke</property>
    <pattern>poke</pattern>
    <defaultexpression>"You can't poke " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>prod</property>
    <pattern>prod</pattern>
    <defaultexpression>"You can't prod " + object.article + "."</defaultexpression>
  </verb>
  <object name="catacombs2">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>catacombs</alias>
    <description><![CDATA[<br/>The long, cramped tunnel leads to the north east and to the south west.<br/><br/>You fancy that you can hear noises somewhere to the south west... or maybe that's just your fraught imagination.<br/>]]></description>
    <exit alias="northeast" to="catacombs 1">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="southwest" to="catacombs3">
      <inherit name="southwestdirection" />
    </exit>
    <object name="walls18">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
  </object>
  <object name="catacombs3">
    <description><![CDATA[<br/>A number of tunnels intersect here.  There is unmistakeably a sound coming from the south - a strange scraping noise, like something being dragged.<br/><br/>You remember the advice of the man in the lighthouse (it occurs to you that you never even asked his name) - he told you to head west.<br/>]]></description>
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <exit alias="northeast" to="catacombs2">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="north" to="catacombs4">
      <inherit name="northdirection" />
    </exit>
    <exit alias="south" to="catacombs5">
      <inherit name="southdirection" />
    </exit>
    <object name="walls19">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="west" to="catacombs9">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="catacombs4">
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>A huge pile of rubble bars your way forward - it looks as though the ceiling has caved in here.  Thinking about your bearings beneath the island, you realise that that route might have taken you back towards the asylum.<br/>]]></description>
    <exit alias="south" to="catacombs3">
      <inherit name="southdirection" />
    </exit>
    <object name="rockslide">
      <alt type="stringlist">
        <value>rubble</value>
        <value>rockfall</value>
        <value>collapsed ceiling</value>
      </alt>
      <look>There is no way through the impenetrable heap of rubble.</look>
    </object>
    <object name="walls20">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
  </object>
  <object name="catacombs5">
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>A tunnel leads to the north, and to the south it forks into two.  One passage, to the south west, looks even narrower than the others you have traversed, but even that seems more appealing than the tunnel to the south east - a strange scraping sound is coming from that direction, like something heavy being dragged along the floor.<br/>]]></description>
    <exit alias="north" to="catacombs3">
      <inherit name="northdirection" />
    </exit>
    <exit alias="southeast" to="catacombs6">
      <inherit name="southeastdirection" />
      <runscript />
      <script type="script">
        msg ("You don't have the courage to face whatever is making that strange sound.")
      </script>
    </exit>
    <object name="walls21">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="southwest" to="catacombs7">
      <inherit name="southwestdirection" />
    </exit>
  </object>
  <object name="catacombs6">
    <exit alias="northwest" to="catacombs5">
      <inherit name="northwestdirection" />
    </exit>
  </object>
  <object name="catacombs7">
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description type="script"><![CDATA[
      if (ListContains(ScopeVisible(), corpse2)) {
        msg ("<br/>A long tunnel stretches from the north east to the south west, narrowing as it does.<br/><br/>The corpse of a dead monster is lying here.<br/>")
      }
      else {
        msg ("<br/>A long tunnel stretches from the north east to the south west, narrowing as it does.<br/>")
      }
    ]]></description>
    <firstenter type="script"><![CDATA[
      msg ("<br/>You leap in fright as something moves at your side, almost smashing your torch against the rock as you swing it towards the thing... only to see that it was just a spider, scurrying along the rock face and now out of sight into a tiny crevice.<br/>")
    ]]></firstenter>
    <enter type="script"><![CDATA[
      if (GetBoolean(thing1, "here")) {
        msg ("Your brain is becoming so used to the jagged rock walls and endless darkness that it has begun to wander, to relive the insane events of the last few hours... which is why you are completely unprepared for the sight of the hunched thing standing in your way.  It looks like a man, but there is something very wrong with his mouth... his jaw seems to be fused to his chest, holding it constantly open, and an unnaturally long tongue hangs from this gaping cavity.  It seems to twist and writhe of its own accord, like a snake... but you have little time to consider it, as the creature begins to shuffle along the tunnel towards you!")
        MakeObjectVisible (thing1)
        SetTimeout (180) {
          if (GetBoolean(thing1, "here")) {
            msg ("The vile monstrosity leaps at you like a dog, shrieking with inhuman glee as it clamps its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.<br/>")
            finish
          }
          else {
          }
        }
      }
    ]]></enter>
    <exit alias="northeast" to="catacombs5">
      <inherit name="northeastdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(thing1, "here")) {
          msg ("The vile monstrosity leaps at you like a dog, shrieking with inhuman glee as it clamps its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.<br/>")
          finish
        }
        else {
          MoveObject (player, catacombs5)
        }
      ]]></script>
    </exit>
    <object name="walls22">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="southwest" to="catacombs8">
      <inherit name="southwestdirection" />
      <runscript />
      <script type="script"><![CDATA[
        if (GetBoolean(thing1, "here")) {
          msg ("The vile monstrosity leaps at you like a dog, shrieking with inhuman glee as it clamps its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.<br/>")
          finish
        }
        else {
          MoveObject (player, catacombs8)
        }
      ]]></script>
    </exit>
    <object name="thing1">
      <visible type="boolean">false</visible>
      <look>The shambling monstrosity looks like a man, but does not appear to be able to walk upright... but it is still covering ground quickly, and you need to do something!</look>
      <alt type="stringlist">
        <value>man</value>
        <value>creature</value>
        <value>monster</value>
      </alt>
      <speak>There is no hope of reasoning with this monstrosity.</speak>
      <alias>thing</alias>
      <scenery />
      <kick type="script">
        msg ("You aim a kick at the monster, but it leaps past the blow, clamping its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.")
        finish
      </kick>
      <fight type="script">
        msg ("You aim a kick at the monster, but it leaps past the blow, clamping its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.")
        finish
      </fight>
      <battle type="script">
        msg ("You aim a kick at the monster, but it leaps past the blow, clamping its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.")
        finish
      </battle>
      <punch type="script">
        msg ("Even as you try to hit the creature, it shrieks loudly and launches itself at you, clamping its teeth around your throat.  You try to fend it off but feel its teeth crunching through flesh, sinew, bone... and then all is black.")
        finish
      </punch>
      <attack type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the golf club at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the plank of wood at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has snapped cleanly in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the prosthetic at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the artifical limb, which has completely broken, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the pool cue at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the cue, which has snapped completely in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </attack>
      <kill type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the golf club at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the plank of wood at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has snapped cleanly in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the prosthetic at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the artifical limb, which has completely broken, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the pool cue at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the cue, which has snapped completely in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </kill>
      <hit type="scriptdictionary">
        <item key="golf club2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the golf club at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has bent completely out of shape, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (golf club2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="piece of timber2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the plank of wood at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the golf club, which has snapped cleanly in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (piece of timber2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="prosthetic limb2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the prosthetic at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the artifical limb, which has completely broken, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (prosthetic limb2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
        <item key="pool cue2"><![CDATA[
          if (ListContains(ScopeVisible(), corpse2)) {
            msg ("That seems a tad unnecessary - he's definitely dead.")
          }
          else {
            msg ("You swing the pool cue at the creature's head and manage to land the blow perfectly.  With a sickening crunch and a spray of blood and brain matter, the monster sags to the floor.<br/><br/>You stare at the cue, which has snapped completely in two, and then toss it away.<br/>")
            SetObjectFlagOff (thing1, "here")
            RemoveObject (pool cue2)
            MakeObjectVisible (corpse2)
            RemoveObject (thing1)
          }
        ]]></item>
      </hit>
    </object>
    <object name="corpse2">
      <alias>corpse</alias>
      <scenery type="boolean">false</scenery>
      <look>The monster's corpse lies on its side, blood pooling beneath its shattered skull.</look>
      <visible type="boolean">false</visible>
      <alt type="stringlist">
        <value>blood</value>
        <value>pool</value>
        <value>dead body</value>
        <value>cadaver</value>
        <value>man</value>
        <value>thing</value>
        <value>creature</value>
        <value>monster</value>
      </alt>
      <takemsg>You don't want to touch the vile cadaver.</takemsg>
      <hit>That seems a tad unnecessary - he's definitely dead.</hit>
      <attack>That seems a tad unnecessary - he's definitely dead.</attack>
      <kick>That seems a tad unnecessary - he's definitely dead.</kick>
      <punch>That seems a tad unnecessary - he's definitely dead.</punch>
    </object>
  </object>
  <object name="catacombs8">
    <description><![CDATA[<br/>The tunnel winds and twists, growing gradually narrower until you are convinced that it will simply taper into an impassable crevice.  Instead, however, it ends abruptly at a sheer wall, with a ladder set into it.<br/>]]></description>
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <firstenter type="script">
      SetObjectFlagOn (thing1, "here")
    </firstenter>
    <exit alias="northeast" to="catacombs7">
      <inherit name="northeastdirection" />
    </exit>
    <object name="walls23">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>The walls here are so narrow that you can feel panic rising in your chest - you need to get out, soon.</look>
    </object>
    <object name="ladder2">
      <alias>ladder</alias>
      <alt type="stringlist">
        <value>steps</value>
      </alt>
      <look>Just a simple metal ladder set into the rock face, much like the one you descended from the lighthouse.</look>
      <climb type="script">
        msg ("You mount the ladder and climb, your footfalls echoing noisily in the claustrophobic cave.  Eventually you reach a trapdoor... and find that it is locked.")
        MakeObjectVisible (trapdoor4)
      </climb>
      <ascend type="script">
        msg ("You mount the ladder and climb, your footfalls echoing noisily in the claustrophobic cave.  Eventually you reach a trapdoor... and find that it is locked.")
        MakeObjectVisible (trapdoor4)
      </ascend>
    </object>
    <object name="trapdoor4">
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <alias>trapdoor</alias>
      <visible type="boolean">false</visible>
      <look>Just a simple wooden trapdoor set into the rock above you.  You must be somewhere in the centre of the island.</look>
      <feature_container />
      <nokeymessage>You do not have the key for this trapdoor.  You must find another way out of the catacombs.</nokeymessage>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <object name="catacombs9">
    <description><![CDATA[<br/>A long tunnel stretches from east to west.<br/><br/>You can hear your footsteps echoing as you proceed along it.<br/>]]></description>
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <exit alias="east" to="catacombs3">
      <inherit name="eastdirection" />
    </exit>
    <object name="walls24">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="west" to="catacombs91">
      <inherit name="westdirection" />
    </exit>
    <object name="footfalls">
      <visible type="boolean">false</visible>
    </object>
  </object>
  <object name="catacombs91">
    <alias>catacombs</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <description><![CDATA[<br/>The corridor continues to stretch away to the west.<br/><br/>You suddenly realise that the footfalls you can hear aren't just your own, and their echoes - there are a distinctly separate set of footsteps following you down the corridor, from the east.<br/>]]></description>
    <firstenter type="script">
      SetObjectFlagOn (footfalls, "following")
      SetTimeout (60) {
        if (GetBoolean(footfalls, "following")) {
          msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
          finish
        }
      }
    </firstenter>
    <exit alias="east" to="catacombs9">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("You would rather head in the other direction, away from the ominous footsteps.")
      </script>
    </exit>
    <exit alias="west" to="catacombs92">
      <inherit name="westdirection" />
    </exit>
    <object name="walls25">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
  </object>
  <object name="catacombs92">
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>catacombs</alias>
    <description><![CDATA[<br/>The long, straight tunnel heads unerringly westwards.<br/><br/>The footfalls behind you seem to be speeding up.]]></description>
    <firstenter type="script">
    </firstenter>
    <beforefirstenter type="script">
      SetObjectFlagOff (footfalls, "following")
      SetObjectFlagOn (footfalls, "following2")
      SetTimeout (45) {
        if (GetBoolean(footfalls, "following2")) {
          msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
          finish
        }
      }
    </beforefirstenter>
    <exit alias="east" to="catacombs91">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("You would rather head in the other direction, away from the ominous footsteps.")
      </script>
    </exit>
    <object name="walls26">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="west" to="catacombs93">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="catacombs93">
    <description><![CDATA[<br/>The tunnel seems to be sloping gradually upwards.<br/><br/>There is unmistakeably something following you - you begin to run, a scream building in your throat.<br/>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>catacombs</alias>
    <firstenter type="script">
      SetObjectFlagOff (footfalls, "following2")
      SetObjectFlagOn (footfalls, "following3")
      SetTimeout (45) {
        if (GetBoolean(footfalls, "following3")) {
          msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
          finish
        }
      }
    </firstenter>
    <exit alias="east" to="catacombs92">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </script>
    </exit>
    <object name="walls27">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="west" to="catacombs94">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="catacombs94">
    <description><![CDATA[<br/>You can see a door at the western end of the tunnel.<br/><br/>You flash your torch behind you to illuminate an inhuman THING sprinting towards you, tentacles dangling from its face.<br/>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <alias>catacombs</alias>
    <firstenter type="script">
      SetObjectFlagOff (footfalls, "following3")
      SetObjectFlagOn (footfalls, "following4")
      SetTimeout (30) {
        if (GetBoolean(footfalls, "following4")) {
          msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
          finish
        }
      }
    </firstenter>
    <object name="walls28">
      <alias>walls</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>ceiling</value>
        <value>rock</value>
        <value>roof</value>
        <value>tunnel</value>
        <value>passage</value>
      </alt>
      <scenery />
      <look>You are surrounded on all sides by oppressive rock - the passageway is barely big enough for you to stand up.</look>
    </object>
    <exit alias="east" to="catacombs93">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </script>
    </exit>
    <object name="thing2">
      <alias>thing</alias>
      <scenery />
      <alt type="stringlist">
        <value>monster</value>
        <value>creature</value>
      </alt>
      <look type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </look>
      <kill type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </kill>
      <attack type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </attack>
      <kick type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </kick>
      <punch type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </punch>
      <hit type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </hit>
      <fight type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </fight>
      <battle type="script">
        msg ("In a flash, your pursuer is upon you, grunting and wailing as it leaps onto your back and wrestles you to the ground - the last thing you see are long, slender fingers reaching for your eyes before they are ripped from their sockets... mercifully your death follows soon.")
        finish
      </battle>
    </object>
    <exit alias="west" to="underground bunker">
      <inherit name="westdirection" />
    </exit>
    <object name="door6">
      <inherit name="container_closed" />
      <alias>door</alias>
      <look>It's just a wooden door - you hope to god that it is unlocked!</look>
      <scenery />
      <knockon>No time for that now!</knockon>
      <feature_container />
      <openmsg>No time for that now!</openmsg>
      <closemsg>No time for that now!</closemsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <object name="underground bunker">
    <description><![CDATA[<br/>A doorway to the east is barred shut.<br/><br/>Another doorway leads to the west.<br/><br/>There are several empty bunk beds here, and shelves lined with supplies.<br/>]]></description>
    <firstenter type="script">
      stop sound
      SetObjectFlagOff (footfalls, "following")
    </firstenter>
    <beforefirstenter type="script">
      msg ("You dash through the door, which is mercifully unlocked.  You find that it can be barred with a stout piece of wood on the other side, and slam it into place before your pursuer can follow.  You wait for the sound of hammering on the other side of the door... but it never comes.")
      SetObjectFlagOff (footfalls, "following4")
    </beforefirstenter>
    <enter type="script">
      SetObjectFlagOff (time of day, "underground")
      SetObjectFlagOn (time of day, "nightfall5")
    </enter>
    <exit alias="east" to="catacombs94">
      <inherit name="eastdirection" />
      <runscript />
      <script type="script">
        msg ("There is no sound from the other side of the door, but you don't want to risk finding out whether that thing is still waiting for you.")
      </script>
    </exit>
    <object name="floor15">
      <alias>floor</alias>
      <alt type="stringlist">
        <value>ground</value>
      </alt>
      <look>A stone floor is beneath your feet.</look>
      <scenery />
    </object>
    <object name="walls29">
      <alias>walls</alias>
      <look>Concrete walls surround you.</look>
      <scenery />
      <alt type="stringlist">
        <value>concrete</value>
        <value>stone</value>
      </alt>
    </object>
    <object name="ceiling15">
      <alias>ceiling</alias>
      <alt type="stringlist">
        <value>roof</value>
      </alt>
      <look>The concrete roof over your head is thankfully higher than in the tunnels.  A single lightbulb hangs in the centre of the room, but no light is coming from it.</look>
      <scenery />
    </object>
    <object name="east door3">
      <alias>east door</alias>
      <scenery />
      <look>There is a stout wooden bar across the east door, but you do not trust it to keep out a determined intruder.</look>
      <alt type="stringlist">
        <value>bar</value>
      </alt>
      <knockon>You knock on the door, half expecting a deformed limb to smash through the wood and grab you... but nothing happens.</knockon>
    </object>
    <object name="west door4">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>Just a plain wooden door.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alias>west door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="beds">
      <inherit name="plural" />
      <look>There are two bunk beds on the northern wall, so four beds in total, and even without any bedding each looks very inviting... but you don't trust the door to hold.  No time to rest here.</look>
      <lookunder>There is nothing under any of the beds.</lookunder>
      <alt type="stringlist">
        <value>mattresses</value>
      </alt>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <object name="shelves1">
      <inherit name="plural" />
      <alias>shelves</alias>
      <alt type="stringlist">
        <value>supplies</value>
        <value>tins</value>
        <value>food</value>
        <value>first aid kit</value>
        <value>cans</value>
        <value>tinned food</value>
        <value>bottles of water</value>
        <value>water</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <look>The shelves are full of supplies: tinned food, bottles of water, a first aid kit... you realise suddenly that you haven't eaten or drank anything for hours.  You have no idea how long this stuff has been here, mind - some of the labels look very dated.</look>
      <takemsg>You don't need any of this stuff right now.</takemsg>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
    </object>
    <exit alias="west" to="set of stone stairs">
      <inherit name="westdirection" />
    </exit>
    <object name="bunker1">
      <alt type="stringlist">
        <value>shelter</value>
      </alt>
      <scenery />
      <look>You wonder who built this place, and why.</look>
    </object>
  </object>
  <object name="set of stone stairs">
    <descprefix>You are on</descprefix>
    <description><![CDATA[<br/>They lead downwards to the supply shelter to the east, and upwards to the surface to the west, where you can see the dark, starless sky.<br/>]]></description>
    <enter type="script">
    </enter>
    <exit alias="east" to="underground bunker">
      <inherit name="eastdirection" />
    </exit>
    <object name="stairs">
      <scenery />
      <alt type="stringlist">
        <value>steps</value>
        <value>floor</value>
        <value>ground</value>
      </alt>
      <look>The stone steps lead upwards to the west.</look>
    </object>
    <object name="ceiling16">
      <alias>ceiling</alias>
      <alt type="stringlist">
        <value>roof</value>
      </alt>
      <scenery />
      <look>The concrete roof slopes upwards to the west.</look>
    </object>
    <object name="walls30">
      <alias>walls</alias>
      <look>There are concrete walls on either side of you.</look>
      <scenery />
      <alt type="stringlist">
        <value>concrete</value>
        <value>stone</value>
      </alt>
    </object>
    <exit alias="west" to="garden">
      <inherit name="westdirection" />
      <runscript />
      <script type="script">
        play sound ("Broken Notes Sanatorium ~ Gray Afternoon.mp3", false, true)
        MoveObject (player, garden)
      </script>
    </exit>
    <object name="bunker">
      <alt type="stringlist">
        <value>shelter</value>
      </alt>
      <scenery />
      <look>The stairs lead down to the east, through a doorway back into the underground bunker.  You wonder who built it, and why.</look>
    </object>
    <object name="sky42">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="east door5">
      <inherit name="container_open" />
      <alt type="stringlist" />
      <scenery />
      <look>Just a plain wooden door.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <alias>east door</alias>
      <knockon>Nothing happens.</knockon>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <object name="garden">
    <description><![CDATA[<br/>You are inside the grounds of a very large house, which stands to the north.  A fence surrounds the grounds, although to the south you can see a path leading through a gate and into the trees.<br/><br/>To the east, a concrete entranceway protrudes from the ground, over a set of steps leading downwards.<br/><br/>It is no longer raining.  Some rabbits have already emerged from the woods, watching you from the southern end of the garden.<br/>]]></description>
    <exit alias="east" to="set of stone stairs">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="north" to="hardacres house">
      <inherit name="northdirection" />
      <locked />
      <scenery type="boolean">false</scenery>
      <lockmessage>A locked gate bars your way.</lockmessage>
    </exit>
    <exit alias="south" to="path">
      <inherit name="southdirection" />
    </exit>
    <object name="rabbitsX7">
      <inherit name="plural" />
      <scenery />
      <look><![CDATA[After what you have seen, the rabbits are trivial in comparison.  But you remember what the writer told you about Salvation's history, and you can't help but feel that the creatures are somehow complicit in the island's descent into madness.  You steer clear of them.<br/>]]></look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="house2">
      <alias>house</alias>
      <alt type="stringlist">
        <value>home</value>
        <value>building</value>
      </alt>
      <scenery type="boolean">false</scenery>
      <look><![CDATA[The house is large, almost a mansion, and is certainly not an old ruin like the other buildings you have seen.  Was this where Edward Hardacre lived, before his disappearance...?<br/><br/>A high wall surrounds the house, topped with broken glass.<br/>]]></look>
    </object>
    <object name="sky32">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="mist10">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
    <object name="wall">
      <alt type="stringlist">
        <value>broken glass</value>
        <value>walls</value>
      </alt>
      <look>The wall surrounding the house is about ten feet high, with broken glass sprinkled along the top.  There is a gate set into it to join the inner grounds with the outer garden.</look>
      <climb>You don't want to cut yourself on the broken glass.</climb>
      <scenery />
    </object>
    <object name="north gate">
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <scenery />
      <look>The gate is made of metal bars twisted into an ornate design.</look>
      <feature_container />
      <nokeymessage>The gate is locked.</nokeymessage>
      <climb>You can't climb the gate - it is set into a high wall covered with broken glass.</climb>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="south gate">
      <inherit name="container_open" />
      <scenery />
      <look>The gate is made of metal bars twisted into an ornate design, and seems to have rusted over somewhat.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <climb>There is no need to climb the gate - it is unlocked.</climb>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="trees23">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="grass">
      <alt type="stringlist">
        <value>lawn</value>
        <value>weeds</value>
        <value>ground</value>
        <value>floor</value>
        <value>garden</value>
      </alt>
      <scenery />
      <look>The surrounding grass is unkempt and overgrown with weeds.</look>
    </object>
    <object name="fence15">
      <alias>fence</alias>
      <scenery />
      <look>The metal fence encircles the garden, joining on the north side to the main wall of the house.</look>
      <alt type="stringlist">
        <value>bars</value>
        <value>metal</value>
      </alt>
      <climb>You don't fancy trying to climb the fence - the bars are spiked at the top, and besides, there are gates that you can pass through more easily.</climb>
    </object>
    <object name="doorway1">
      <alias>doorway</alias>
      <alt type="stringlist">
        <value>entranceway</value>
        <value>steps</value>
        <value>stairs</value>
      </alt>
      <scenery />
      <look>Beneath the entranceway, steps lead down to the east, back into the underground bunker.</look>
    </object>
  </object>
  <object name="path">
    <description><![CDATA[<br/>To the north it emerges into an overgrown garden.  To the west, it continues into the woods.<br/>]]></description>
    <descprefix>You are on</descprefix>
    <exit alias="north" to="garden">
      <inherit name="northdirection" />
    </exit>
    <object name="trees24">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="sky33">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="ground31">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX8">
      <inherit name="plural" />
      <scenery />
      <look>Rabbits are hopping amongst the undergrowth.  After what you have seen, they are trivial in comparison.  But you remember what the writer told you about Salvation's history, and you can't help but feel that the creatures are somehow complicit in the island's descent into madness.  You steer clear of them.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <exit alias="west" to="path2">
      <inherit name="westdirection" />
    </exit>
    <object name="grass1">
      <alt type="stringlist">
        <value>lawn</value>
        <value>weeds</value>
        <value>ground</value>
        <value>floor</value>
        <value>garden</value>
      </alt>
      <scenery />
      <look>The garden is unkempt and overgrown with weeds.</look>
    </object>
    <object name="mist11">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="path2">
    <alias>path</alias>
    <description><![CDATA[<br/>It curves from the east to the north, leading into the darkness of the woods in both directions.<br/>]]></description>
    <descprefix>You are on</descprefix>
    <exit alias="east" to="path">
      <inherit name="eastdirection" />
    </exit>
    <object name="trees25">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="sky34">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="ground32">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX9">
      <inherit name="plural" />
      <scenery />
      <look>Rabbits are hopping amongst the undergrowth.  After what you have seen, they are trivial in comparison.  But you remember what the writer told you about Salvation's history, and you can't help but feel that the creatures are somehow complicit in the island's descent into madness.  You steer clear of them.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <exit alias="north" to="crossroads">
      <inherit name="northdirection" />
    </exit>
    <object name="mist12">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="crossroads">
    <description><![CDATA[<br/>Two dirt tracks cross each other here through the trees.  You shine your torch in each direction but can make out very little - just four pathways leading deeper into the woods.<br/>]]></description>
    <descprefix>You are at</descprefix>
    <exit alias="south" to="path2">
      <inherit name="southdirection" />
    </exit>
    <object name="sky35">
      <alias>sky</alias>
      <scenery />
      <look>The canopy of knotted branches above you prevents you from seeing the sky.</look>
    </object>
    <object name="ground33">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX10">
      <inherit name="plural" />
      <scenery />
      <look>Rabbits are hopping amongst the undergrowth.  After what you have seen, they are trivial in comparison.  But you remember what the writer told you about Salvation's history, and you can't help but feel that the creatures are somehow complicit in the island's descent into madness.  You steer clear of them.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <exit alias="west" to="the woods">
      <inherit name="westdirection" />
    </exit>
    <exit alias="east" to="the woods2">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="north" to="path3">
      <inherit name="northdirection" />
    </exit>
    <object name="trees26">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="mist13">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="the woods">
    <description><![CDATA[<br/>To the east a pathway leads back into the trees.<br/><br/>To the west stands a crumbling building, completely choked with weeds and undergrowth.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <exit alias="east" to="crossroads">
      <inherit name="eastdirection" />
    </exit>
    <object name="sky36">
      <alias>sky</alias>
      <scenery />
      <look>The canopy of knotted branches above you prevents you from seeing the sky.</look>
    </object>
    <object name="ground34">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX11">
      <inherit name="plural" />
      <scenery />
      <look>Some rabbits are sitting outside the building, and seem to be watching you intently.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="trees27">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <exit alias="west" to="unknown building">
      <inherit name="westdirection" />
    </exit>
    <object name="building">
      <alt type="stringlist">
        <value>structure</value>
        <value>ruin</value>
        <value>windows</value>
        <value>doorway</value>
      </alt>
      <look>There is no glass in the windows or anything in the doorway to prevent you from entering.  You wish there was a handy signpost to explain what the large structure was once used for.</look>
    </object>
    <object name="walls32">
      <alias>walls</alias>
      <scenery />
      <look>The walls almost look as though they are being held upright by the ivy that has grown across them.</look>
      <alt type="stringlist">
        <value>ivy</value>
      </alt>
    </object>
    <object name="mist14">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="the woods2">
    <alias>the woods</alias>
    <description><![CDATA[<br/>To the west a pathway leads back into the trees.<br/><br/>To the east stands a crumbling building, completely choked with weeds and undergrowth.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <exit alias="west" to="crossroads">
      <inherit name="westdirection" />
    </exit>
    <object name="sky37">
      <alias>sky</alias>
      <scenery />
      <look>The canopy of knotted branches above you prevents you from seeing the sky.</look>
    </object>
    <object name="ground35">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX12">
      <inherit name="plural" />
      <scenery />
      <look>Some rabbits are sitting outside the building, and seem to be watching you intently.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="trees28">
      <inherit name="plural" />
      <look>The surrounding trees are thick and dense, their leaves in the full bloom of May, but also streaked with brown rot as though the island is afflicted with a terminal, wasting disease.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="building1">
      <alt type="stringlist">
        <value>structure</value>
        <value>ruin</value>
        <value>windows</value>
        <value>doorway</value>
      </alt>
      <look>There is no glass in the windows or anything in the doorway to prevent you from entering.  You wish there was a handy signpost to explain what the large structure was once used for.</look>
      <alias>building</alias>
    </object>
    <object name="walls33">
      <alias>walls</alias>
      <scenery />
      <look>The walls almost look as though they are being held upright by the ivy that has grown across them.</look>
      <alt type="stringlist">
        <value>ivy</value>
      </alt>
    </object>
    <exit alias="east" to="unknown building2">
      <inherit name="eastdirection" />
    </exit>
    <object name="mist15">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="path3">
    <alias>path</alias>
    <description><![CDATA[<br/>It runs from the south to the north, bounded on either side by twisted trees.  The sickness that blights the island's undergrowth looks even more severe here, the leaves and branches virtually rotten and riddled with strange white growths, like pustules.]]></description>
    <descprefix>You are on</descprefix>
    <exit alias="south" to="crossroads">
      <inherit name="southdirection" />
    </exit>
    <object name="trees29">
      <inherit name="plural" />
      <look>The trees here look even more sickly than the rest of the island, the leaves and branches virtually rotten and blighted with strange white growths, like pustules.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
        <value>pustules</value>
        <value>growths</value>
        <value>blight</value>
        <value>rot</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="sky38">
      <alias>sky</alias>
      <scenery />
      <look>The canopy of knotted branches above you prevents you from seeing the sky.</look>
    </object>
    <object name="ground36">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the gangrenous trees.</look>
      <scenery />
    </object>
    <object name="rabbitsX13">
      <inherit name="plural" />
      <scenery />
      <look>There are no rabbits here, as though they are hiding from whatever affliction is contaminating the plant life.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <exit alias="north" to="the woods3">
      <inherit name="northdirection" />
    </exit>
    <object name="mist17">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="unknown building">
    <description><![CDATA[<br/>It is really just the outline of a structure that has long since been reclaimed by nature.  The roof has completed caved in, meaning that you can see the sky through the tangled canopy of branches above you.  Rabbits hop amongst the weeds and ferns that sprout up between the cracked tiles beneath your feet.<br/><br/>The only clue as to the building's purpose is a stack of metal drums against the far wall - maybe something was once stored here?]]></description>
    <exit alias="east" to="the woods">
      <inherit name="eastdirection" />
    </exit>
    <object name="floor16">
      <alias>floor</alias>
      <alt type="stringlist">
        <value>ground</value>
        <value>rubble</value>
        <value>weeds</value>
        <value>ferns</value>
        <value>debris</value>
        <value>stone</value>
      </alt>
      <scenery />
      <look>Plants have found their way through the rubble beneath your feet.</look>
    </object>
    <object name="sky39">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="walls31">
      <alias>walls</alias>
      <scenery />
      <look>The walls almost look as though they are being held upright by the ivy that has grown across them.</look>
      <alt type="stringlist">
        <value>ivy</value>
        <value>building</value>
        <value>structure</value>
        <value>ruin</value>
      </alt>
    </object>
    <object name="rabbitsX14">
      <inherit name="plural" />
      <scenery />
      <look>There are lots of rabbits here.  You are careful not to step on them as you move around.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="trees30">
      <inherit name="plural" />
      <look>If you point your torch out through the windows or the doorway, you can see the trees swaying silently in the night breeze.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="drums">
      <inherit name="plural" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <look>The huge steel containers are unlabelled.</look>
      <takemsg>Although they appear to be empty, the drums are still far too heavy for you to take with you.</takemsg>
      <move>The drums are much too heavy for you to do anything useful with.</move>
      <push>The drums are much too heavy for you to do anything useful with.</push>
      <pull>The drums are much too heavy for you to do anything useful with.</pull>
      <alt type="stringlist">
        <value>containers</value>
      </alt>
    </object>
  </object>
  <object name="unknown building2">
    <alias>unknown building</alias>
    <description><![CDATA[<br/>It is really just the outline of a structure that has long since been reclaimed by nature.  The roof has completed caved in, meaning that you can see the sky through the tangled canopy of branches above you.  Rabbits hop amongst the weeds and ferns that sprout up between the cracked tiles beneath your feet.<br/><br/>The only clue as to the building's former purpose are some wooden shelves against the far wall, upon which a few small boxes are stacked.<br/>]]></description>
    <exit alias="west" to="the woods2">
      <inherit name="westdirection" />
    </exit>
    <object name="sky40">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="walls34">
      <alias>walls</alias>
      <scenery />
      <look>The walls almost look as though they are being held upright by the ivy that has grown across them.</look>
      <alt type="stringlist">
        <value>ivy</value>
        <value>building</value>
        <value>structure</value>
        <value>ruin</value>
      </alt>
    </object>
    <object name="rabbitsX15">
      <inherit name="plural" />
      <scenery />
      <look>There are lots of rabbits here.  You are careful not to step on them as you move around.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="trees31">
      <inherit name="plural" />
      <look>If you point your torch out through the windows or the doorway, you can see the trees swaying silently in the night breeze.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="shelves2">
      <inherit name="plural" />
      <alias>shelves</alias>
      <look>Just nondescript wooden shelves.</look>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <climb>You don't want to pull them down on top of yourself.</climb>
    </object>
    <object name="boxes1">
      <inherit name="plural" />
      <inherit name="container_closed" />
      <alias>boxes</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <look>The small brown cardboard boxes are unlabelled.</look>
      <feature_container />
      <hidechildren type="boolean">false</hidechildren>
      <listchildren type="boolean">false</listchildren>
      <takemsg>You see no reason to take any of the boxes with you.</takemsg>
      <alt type="stringlist">
        <value>cardboard</value>
      </alt>
      <openmsg> </openmsg>
      <closemsg> </closemsg>
      <onopen type="script">
        MakeObjectVisible (bullets)
        msg ("You open one of the boxes and are surprised to find ammunition inside.")
      </onopen>
      <onclose type="script">
        msg ("You slide the box closed again.")
        MakeObjectInvisible (bullets)
      </onclose>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
    <object name="bullets">
      <inherit name="plural" />
      <visible type="boolean">false</visible>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>some</prefix>
      <look>You have never seen real bullets before, but that is unmistakeably what these pointed metal cylinders are.</look>
      <takemsg>Even if you had a gun you wouldn't know how to load and fire the thing.</takemsg>
      <alt type="stringlist">
        <value>ammo</value>
        <value>ammunition</value>
      </alt>
    </object>
    <object name="floor17">
      <alias>floor</alias>
      <alt type="stringlist">
        <value>ground</value>
        <value>rubble</value>
        <value>weeds</value>
        <value>ferns</value>
        <value>debris</value>
        <value>stone</value>
      </alt>
      <scenery />
      <look>Plants have found their way through the rubble beneath your feet.</look>
    </object>
  </object>
  <object name="the woods3">
    <alias>the woods</alias>
    <description><![CDATA[<br/>To the south, a path leads back into the tangled and blighted trees.  To the north stands a huge, ruined building.  It is completely overrun with weeds and ivy.<br/><br/>The silence here is deathly.<br/>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <enter type="script">
      stop sound
    </enter>
    <exit alias="south" to="path3">
      <inherit name="southdirection" />
      <runscript />
      <script type="script">
        play sound ("Broken Notes Sanatorium ~ Gray Afternoon.mp3", false, true)
        MoveObject (player, path3)
      </script>
    </exit>
    <object name="ground37">
      <alias>ground</alias>
      <alt type="stringlist">
        <value>floor</value>
        <value>path</value>
        <value>track</value>
      </alt>
      <look>You are walking on a narrow dirt track amongst the gangrenous trees.</look>
      <scenery />
    </object>
    <object name="sky41">
      <alias>sky</alias>
      <scenery />
      <look>The sky is black.  No stars are visible, and even the moon seems to have deserted you.</look>
    </object>
    <object name="rabbitsX16">
      <inherit name="plural" />
      <scenery />
      <look>There are no rabbits here, as though they are hiding from whatever affliction is contaminating the plant life.</look>
      <takemsg>You feel strangely repulsed by them.</takemsg>
      <kick>Rabbits' lives are hard enough already without you bullying them.</kick>
      <hit>Rabbits' lives are hard enough already without you bullying them.</hit>
      <hurt>Rabbits' lives are hard enough already without you bullying them.</hurt>
      <stroke>You feel strangely repulsed by them.</stroke>
      <feed>You have no food to give to them.</feed>
      <pet>You feel strangely repulsed by them.</pet>
      <alias>rabbits</alias>
      <visible />
    </object>
    <object name="trees32">
      <inherit name="plural" />
      <look>The trees here look even more sickly than the rest of the island, the leaves and branches virtually rotten and blighted with strange white growths, like pustules.  You feel certain that this building is the source of the cancer.</look>
      <scenery />
      <alt type="stringlist">
        <value>woods</value>
        <value>forest</value>
        <value>branches</value>
        <value>leaves</value>
        <value>undergrowth</value>
        <value>foliage</value>
        <value>flora</value>
        <value>twigs</value>
        <value>pustules</value>
        <value>growths</value>
        <value>blight</value>
        <value>rot</value>
      </alt>
      <takemsg>You don't want to fill your bag with bits of rotten leaves and twigs.</takemsg>
      <alias>trees</alias>
      <climb>You don't see much point in doing that.</climb>
    </object>
    <object name="building2">
      <alt type="stringlist">
        <value>structure</value>
        <value>ruin</value>
        <value>windows</value>
        <value>doorway</value>
      </alt>
      <look><![CDATA[There is no glass in the windows or anything in the doorway to prevent you from entering.  You know you should be trying to find a way south, towards the amusement park, but you feel compelled to explore the building... maybe it's that urban explorer's urge, still with you despite the horrors that it has led you to.<br/>]]></look>
      <alias>building</alias>
    </object>
    <exit alias="north" to="unknown building3">
      <inherit name="northdirection" />
    </exit>
    <object name="walls35">
      <alias>walls</alias>
      <scenery />
      <look>The walls almost look as though they are being held upright by the ivy that has grown across them.</look>
      <alt type="stringlist">
        <value>ivy</value>
      </alt>
    </object>
    <object name="mist18">
      <scenery />
      <breathe>The air smells of decay, and something else that you cannot quite place.</breathe>
      <smell>The air smells of decay, and something else that you cannot quite place.</smell>
      <alt type="stringlist">
        <value>fog</value>
      </alt>
      <alias>mist</alias>
      <look type="script">
        if (GetBoolean(time of day, "nightfall4")) {
          msg ("It is too dark to discern the mist, but you can feel its oppressive presence nonetheless, like the clammy touch of a thousand dead fingers.")
        }
        else {
          msg ("The mist is thick and cloying and seems somehow to writhe.  An unpleasant image comes to mind, of a sheet draped over wriggling maggots.")
        }
      </look>
    </object>
  </object>
  <object name="unknown building3">
    <alias>unknown building</alias>
    <enter type="script"><![CDATA[
      msg ("A corridor leads you into the structure, which has held up remarkably well in spite of its outward appearance.  Your footsteps crunch on broken glass on the floor, and you grimace at the sound - for all you know there are more of the repulsive creatures in here, hunting you in the darkness.  What on earth are they??  You wish you'd pressed the writer for more answers.<br/><br/>You turn around to glance back at the entrance, wondering if you should just turn back, when you realise that the silence is no longer absolute... you can hear breathing, coming from the darkness in front of you.<br/><br/>Feeling sick dread spread in your belly, you raise your torch, and realise you have emerged into a large chamber.  Metal drawers and chairs are scattered around, but the piles of furniture are concentrated near the doorways leading away from the room... like makeshift barricades.  Overturned gurneys and other medical equipment is also strewn about, and there is more broken glass everywhere... it looks like a laboratory that has been ransacked.<br/>")
      wait {
        msg ("But these things do not hold your attention for long.  Moving your torch beam towards the sound of the breathing, you illuminate the small figure of an old man in a wheelchair.  He looks somewhat like David Lopan from that film, Big Trouble In Little China... impossibly old, his papery skin covered in liver spots, and strands of long white hair hanging into his lap.  His eyes are so sunken as to appear closed, and at first you wonder if he is asleep... but then he lifts his ancient head and talks to you.<br/><br/>\"Looking for me, eh?\"<br/><br/>You are lost for words.<br/><br/>\"Cat got your tongue?\"<br/><br/>\"Err... no, I... I'm just looking for a way off the island.\"<br/><br/>\"Don't give me that rubbish,\" he snaps, spittle flying from his thin lips.  \"I know all about you.  Here to snoop around, writing your little biography on me... I know everything that goes on on my island.\"<br/><br/>You realise that he thinks you are the writer, the dying man from atop the lighthouse.  You open your mouth to protest, but he cuts you off.<br/><br/>\"Well, why don't I give you what you came for.  I'll tell you everything.  It's quite a simple story, really.  The Nazi bombing?  A cover up.  WE destroyed this island - our own government.  Want to know WHY?\"<br/><br/>You nod, dumbly, completely confused.<br/>")
        wait {
          msg ("\"Where do you think all of these RABBITS came from??  We were testing things here... poison gas... nerve toxins... mutagens... this place, this very laboratory in which you're standing, was Britain's dirty little war secret.\"<br/><br/>He clicks a button and his chair begins to move towards you, crunching over the broken glass on the floor.  Instinctively you edge backwards, towards the wall.<br/><br/>\"Ironic isn't is that the rabbits now own the place, eh??\"  He chuckles, a sinster cackle in the gloom.  You wonder what he was doing, just waiting there in the darkness...  \"They say that life finds a way... a way to survive, to adapt...\"<br/><br/>He stops his trundling advance, his beady eyes focusing on a point somewhere above your head as he rambles.<br/><br/>\"When I first found them living under the island I was terrified.  It was like a real life nightmare.  But just like the rabbits... all they really wanted was someone to look after them.  A bit of order... regular feeding... maybe even some love.  And in return, look what they gave me!\"  His gaze snaps back to yours as he spreads his hands to indicate himself.  \"I am over a hundred years old... and I still have all my marbles.\"  He cackles once again.  \"Not all of the stuff in these barrels is toxic... some of the things we developed are actually quite beneficial...\"<br/><br/>\"Who... who are you?\" you whisper, already knowing the answer.<br/><br/>A devilish smile splits his monstrous old face, and he extends a skeletal hand.<br/><br/>\"I'm Edward Hardacre.  Pleased to meet you.\"<br/>")
          wait {
            play sound ("Man Screaming #2.mp3", false, false)
            msg ("<br/>... and then a horrifying scream echoes through the chamber.<br/><br/>You spin and raise your torch, just in time to see a hairless abomination scrambling towards you, shrieking as it reaches out a hand covered with suckers...<br/><br/>And then your head is slammed back into the hard stone wall and the last thing you remember is the sound of diabolical cackling before everything turns black.<br/>")
            wait {
              MoveObject (player, somewhere)
            }
          }
        }
      }
    ]]></enter>
    <beforeenter type="script">
      play sound ("Broken Notes ~ The First Song Ever.mp3", false, true)
    </beforeenter>
    <exit alias="south" to="the woods3">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="somewhere">
    <descprefix>You are</descprefix>
    <description><![CDATA[<br/>Around you is complete blackness.<br/><br/>Concentrating, you can hear the sound of the sea lapping gently, somewhere in the distance.<br/><br/>Pain throbs like a giant hand squeezing your brain.<br/><br/>You realise that your eyes are closed.<br/>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <beforefirstenter type="script"><![CDATA[
      msg ("<br/>...<br/><br/>Your eyes slowly ease open<br/><br/>...<br/><br/>The pain in your skull is immense<br/><br/>...<br/><br/>...<br/><br/>...<br/><br/>You just want to lie down<br/>")
    ]]></beforefirstenter>
    <beforeenter type="script">
      SetObjectFlagOn (time of day, "end")
    </beforeenter>
    <enter type="script">
      RemoveObject (bag)
      RemoveObject (torch)
      RemoveObject (chapel key)
      RemoveObject (screwdriver)
      RemoveObject (lighthouse key)
      RemoveObject (trapdoor key)
      RemoveObject (first aid kit)
      RemoveObject (mobile phone)
    </enter>
    <object name="eyes">
      <inherit name="plural" />
      <inherit name="container_closed" />
      <scenery />
      <takemsg> </takemsg>
      <feature_container />
      <look>Your eyes are closed.</look>
      <onclose type="script">
        msg (" ")
      </onclose>
      <onopen type="script"><![CDATA[
        play sound ("memento of the girl.mp3", false, true)
        msg ("You open your eyes, and leap to your feet in panic.  This is insane.  It is...<br/><br/>... too much<br/><br/><br/><br/>You are in a carriage on the ferris wheel.  Your sudden movement has set it swaying.<br/><br/>Your arms are strapped to your sides, because you are wearing a straitjacket.  You struggle but cannot free them, and realise that your attempts are simply making the rocking motion worse.  Suddenly you feel sick, and stumble over to the side to vomit.<br/><br/>As the bile rises in your throat you see that you are many feet above the ground.  The sun is rising on the horizon, but that is not the only source of light.<br/><br/>The ferris wheel is on fire.<br/><br/><br/><br/>You are at the top, and it is burning.<br/>")
        wait {
          msg ("In abject horror you dart around the tiny carriage, looking for some way down... but how on earth will you climb without even having your arms free??<br/><br/>Once again you look over the side, and see that on the ground far below a crowd has gathered.  Literally hundreds of people are staring up at you.  No, not people... more abberations.  Mutants.  Victims of whatever sinister experiments were conducted here, their tortured lives prolonged by whatever dark science has kept Hardacre alive for all these years.<br/><br/>Hardacre...<br/><br/>You see him down there too, sitting in his chair, face turned upwards towards you.  He is holding something.  It's a megaphone.<br/><br/>\"Hello there!!\" his voice echoes in the chill morning air.<br/><br/>You feel sickness threaten to overwhelm you again, and spit bile down at him.<br/><br/>\"Well that wasn't very nice was it??  I'm trying to give you a good send-off!!  A bit of an event for all of my people.\"<br/><br/>As if in response, a chorus of wailing and chittering emanates from the assembled freaks.<br/>")
          wait {
            msg ("\"But... why??  WHAT HAVE I DONE TO YOU???\" you scream down at them, eyes drawn to the flames that are licking slowly upwards, devouring the old structure.<br/><br/>You can't see Hardacre's expression, but his voice tells you that he is smiling.<br/><br/>\"You're like I used to be.  Always sticking your nose into other people's business.  We're a happy little community here.  People and rabbits just living off the land.  We just want to be left ALONE!\"<br/><br/>You sink back into your seat, knowing that the flames will soon engulf you.  You wonder if your life would have been spared had he not confused you with the nosey writer.  You wonder what your life could have been, how it might have ended, if you had made different choices throughout.  You are still wondering this when your carriage begins to burn.<br/><br/><br/><br/>THE END<br/>")
            wait {
              finish
            }
          }
        }
      ]]></onopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
    </object>
  </object>
  <command name="sleep2">
    <pattern>sleep</pattern>
    <script>
      if (GetBoolean(thing, "attacking")) {
        msg ("Are you mad??")
      }
      else if (GetBoolean(thing, "ready")) {
        msg ("This would be a decent place to wait out the storm... but you are sure you can hear something, back in the first room.  Better check it out before you try to settle down for the night.")
      }
      else if (game.pov.parent = somewhere) {
        msg ("Your eyes are closed, but the pain in your skull is too intense for you to drift off to sleep.")
      }
      else if (GetBoolean(thing, "creepy")) {
        msg ("There's no way you can sleep here after that.  Maybe the lighthouse will be safer...")
      }
      else if (GetBoolean(time of day, "creepy")) {
        msg ("There's no way you can sleep here after that.  Maybe the lighthouse will be safer...")
      }
      else if (Got(trapdoor key)) {
        msg ("You don't want to spend another minute on this island.  You are going to find that boat... or die trying.")
      }
      else if (game.pov.parent = lighthouse1) {
        msg ("You don't feel comfortable sleeping in here with that trapdoor...")
      }
      else if (game.pov.parent = top of the staircase) {
        msg ("You don't feel comfortable sleeping in here with that trapdoor...")
      }
      else if (game.pov.parent = top of the lighthouse) {
        msg ("You can't sleep out here in the rain.")
      }
      else if (GetBoolean(time of day, "twilight")) {
        msg ("There is no way you are going to sleep here.")
      }
      else if (GetBoolean(time of day, "tempnight")) {
        msg ("Surely the ferry will arrive soon??")
      }
      else if (game.pov.parent = chapel4) {
        msg ("This would be a decent place to wait out the night... but you feel like you've missed something...")
      }
      else if (game.pov.parent = chapel2) {
        msg ("You should probably check the other room before settling down to sleep here.")
      }
      else if (GetBoolean(time of day, "nightfall4")) {
        if (game.pov.parent = gift shop) {
          msg ("There's a roof over your head, but the wind and rain is howling in through the broken door and windows... you can't possibly sleep here.")
        }
        else if (Got(lighthouse key)) {
          msg ("Perhaps the lighthouse will be a safer place to sleep...")
        }
        else if (game.pov.parent = ruined house) {
          if (ListContains(ScopeVisible(), screwdriver)) {
            msg ("Are you insane??")
          }
          else {
            msg ("Your eyes are drawn to the straw mattress... until you see that someone has already had the same idea...")
          }
        }
        else if (game.pov.parent = somewhere) {
          msg ("Your eyes are closed, but the pain in your skull is too intense for you to drift off to sleep.")
        }
        else {
          msg ("This is not a sensible place to sleep.")
        }
      }
      else if (GetBoolean(player, "nonsense")) {
        msg ("Your eyes are closed, but the pain in your skull is too intense for you to drift off to sleep.")
      }
      else {
        msg ("Why on earth would you want to go to sleep??")
      }
    </script>
  </command>
  <verb>
    <property>nothinghappens.</property>
    <pattern>nothing happens.</pattern>
    <defaultexpression>"You can't nothing happens. " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>scare</property>
    <pattern>scare</pattern>
    <defaultexpression>"You can't scare " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>frighten</property>
    <pattern>frighten</pattern>
    <defaultexpression>"You can't frighten " + object.article + "."</defaultexpression>
  </verb>
  <type name="defaultverb">
    <separator>with; using</separator>
    <multiobjectmenu>With which object?</multiobjectmenu>
    <multiobjectdefault>That doesn't work.</multiobjectdefault>
    <multiobjectmenuempty>There are no objects available to do that with.</multiobjectmenuempty>
    <script type="script"><![CDATA[
      if (not IsDefined("object2")) {
        object2 = null
      }
      switch (TypeOf(object, this.property)) {
        case ("script") {
          if (object2 = null) {
            do (object, this.property)
          }
          else {
            msg (this.multiobjectdefault)
          }
        }
        case ("string") {
          if (object2 = null) {
            msg (GetString(object, this.property))
          }
          else {
            msg (this.multiobjectdefault)
          }
        }
        case ("scriptdictionary") {
          if (object2 <> null) {
            HandleMultiVerb (object, this.property, object2, this.multiobjectdefault)
          }
          else {
            menu = NewStringDictionary()
            objectlist = ListCombine (ScopeReachableInventory(), ScopeReachableNotHeld())
            excludelist = NewObjectList()
            list add (excludelist, game.pov)
            list add (excludelist, object)
            candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
            if (ListCount(candidates) = 0) {
              msg (this.multiobjectmenuempty)
            }
            else {
              GenerateMenuChoices (menu, candidates)
              game.pov.multiverb = this.property
              game.pov.multiverbobject = object
              game.pov.multiverbobjectdefault = this.multiobjectdefault
              ShowMenu (this.multiobjectmenu, menu, true) {
                if (result <> null) {
                  HandleMultiVerb (game.pov.multiverbobject, game.pov.multiverb, GetObject(result), game.pov.multiverbobjectdefault)
                  game.pov.multiverb = null
                  game.pov.multiverbobject = null
                  game.pov.multiverbobjectdefault = null
                }
              }
            }
          }
        }
        case ("null") {
          if (this.defaulttext <> null) {
            msg (this.defaulttext)
          }
          else if (this.defaulttemplate <> null) {
            msg (DynamicTemplate(this.defaulttemplate, object))
          }
          else if (this.defaultexpression <> null) {
            params = NewDictionary()
            dictionary add (params, "object", object)
            msg (Eval(this.defaultexpression, params))
          }
          else {
            error ("No verb response defined")
          }
        }
        default {
          error ("No verb response defined")
        }
      }
    ]]></script>
  </type>
  <type name="defaultgame">
    <enablehyperlinks />
    <echocommand />
    <echohyperlinks />
    <showdescriptiononenter />
    <autodescription />
    <defaultfont>Georgia, serif</defaultfont>
    <defaultfontsize type="int">12</defaultfontsize>
    <defaultbackground>White</defaultbackground>
    <defaultforeground>Black</defaultforeground>
    <defaultlinkforeground>Blue</defaultlinkforeground>
    <backgroundimage type="string"></backgroundimage>
    <setbackgroundopacity type="boolean">false</setbackgroundopacity>
    <backgroundopacity type="double">0.5</backgroundopacity>
    <menufont>Arial</menufont>
    <menufontsize type="int">9</menufontsize>
    <menubackground>White</menubackground>
    <menuforeground>Black</menuforeground>
    <menuhoverbackground>LightGrey</menuhoverbackground>
    <menuhoverforeground>Black</menuhoverforeground>
    <underlinehyperlinks />
    <compassdirections type="stringlist">
      <value>northwest</value>
      <value>north</value>
      <value>northeast</value>
      <value>west</value>
      <value>east</value>
      <value>southwest</value>
      <value>south</value>
      <value>southeast</value>
      <value>up</value>
      <value>down</value>
      <value>in</value>
      <value>out</value>
    </compassdirections>
    <clearframe />
    <timeelapsed type="int">0</timeelapsed>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <allobjects type="stringlist">
      <value>all</value>
      <value>everything</value>
    </allobjects>
    <parserignoreprefixes type="stringlist">
      <value>the</value>
      <value>a</value>
      <value>an</value>
    </parserignoreprefixes>
    <displayroomdescriptiononstart />
    <showpanes />
    <showcommandbar />
    <showlocation />
    <setcustomwidth type="boolean">false</setcustomwidth>
    <customwidth type="int">950</customwidth>
    <setcustompadding type="boolean">false</setcustompadding>
    <custompaddingtop type="int">30</custompaddingtop>
    <custompaddingbottom type="int">0</custompaddingbottom>
    <custompaddingleft type="int">20</custompaddingleft>
    <custompaddingright type="int">20</custompaddingright>
    <showborder />
    <showscore type="boolean">false</showscore>
    <showhealth type="boolean">false</showhealth>
    <showtitle />
    <autodisplayverbs />
    <attr name="autodescription_youarein" type="int">1</attr>
    <attr name="autodescription_youcansee" type="int">2</attr>
    <attr name="autodescription_youcango" type="int">3</attr>
    <attr name="autodescription_description" type="int">4</attr>
    <autodescription_youarein_useprefix />
    <attr name="autodescription_youarein_newline" type="boolean">false</attr>
    <attr name="autodescription_youcansee_newline" type="boolean">false</attr>
    <attr name="autodescription_youcango_newline" type="boolean">false</attr>
    <attr name="autodescription_description_newline" type="boolean">false</attr>
    <changeroom_newline />
    <attr name="command_newline" type="boolean">false</attr>
    <description type="string"></description>
    <languageid>en</languageid>
    <gridmap type="boolean">false</gridmap>
    <mapscale type="int">30</mapscale>
    <mapsize type="int">300</mapsize>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <attr name="feature_pictureframe" type="boolean">false</attr>
    <attr name="feature_limitinventory" type="boolean">false</attr>
    <attr name="feature_asktell" type="boolean">false</attr>
    <deactivatecommandlinks type="boolean">false</deactivatecommandlinks>
    <changedpov type="script">
      InitPOV (oldvalue, game.pov)
    </changedpov>
  </type>
  <type name="theme_novella">
    <setcustompadding />
    <showborder type="boolean">false</showborder>
    <showpanes type="boolean">false</showpanes>
    <showlocation type="boolean">false</showlocation>
    <setcustomwidth />
    <customwidth type="int">650</customwidth>
    <custompaddingtop type="int">60</custompaddingtop>
  </type>
  <type name="theme_retro">
    <defaultbackground>Black</defaultbackground>
    <defaultforeground>White</defaultforeground>
    <defaultlinkforeground>White</defaultlinkforeground>
    <defaultfont>'Lucida Console', Monaco, monospace</defaultfont>
    <defaultwebfont>Press Start 2P</defaultwebfont>
    <menufontsize type="int">14</menufontsize>
    <menufont>'Lucida Console', Monaco, monospace</menufont>
    <menubackground>Black</menubackground>
    <menuforeground>White</menuforeground>
    <menuhoverbackground>GreenYellow</menuhoverbackground>
  </type>
  <type name="theme_typewriter">
    <setcustompadding />
    <showborder type="boolean">false</showborder>
    <showpanes type="boolean">false</showpanes>
    <showlocation type="boolean">false</showlocation>
    <setcustomwidth />
    <customwidth type="int">650</customwidth>
    <custompaddingtop type="int">60</custompaddingtop>
    <defaultfont>'Courier New', Courier, monospace</defaultfont>
    <defaultwebfont>Special Elite</defaultwebfont>
  </type>
  <type name="theme_hotdogstand">
    <defaultbackground>Red</defaultbackground>
    <defaultforeground>Yellow</defaultforeground>
    <defaultlinkforeground>Yellow</defaultlinkforeground>
    <defaultfont>'Comic Sans MS', cursive, sans-serif</defaultfont>
    <menufontsize type="int">14</menufontsize>
    <menufont>Impact, Charcoal, sans-serif</menufont>
    <menubackground>Red</menubackground>
    <menuforeground>Yellow</menuforeground>
    <menuhoverbackground>Black</menuhoverbackground>
    <menuhoverforeground>Yellow</menuhoverforeground>
  </type>
  <type name="defaultobject">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
  </type>
  <type name="defaultexit">
    <displayverbs type="stringlist">
      <value>Go to</value>
    </displayverbs>
    <visible />
    <scenery type="boolean">false</scenery>
    <locked type="boolean">false</locked>
    <lockmessage>That way is locked.</lockmessage>
    <lookonly type="boolean">false</lookonly>
    <runscript type="boolean">false</runscript>
    <lightstrength type="string"></lightstrength>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_offset_x" type="int">0</attr>
    <attr name="grid_offset_y" type="int">0</attr>
  </type>
  <type name="direction">
    <displayverbs type="stringlist">
      <value>Go</value>
    </displayverbs>
  </type>
  <type name="compassdirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="updowndirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="inoutdirection">
    <inherit name="direction" />
    <prefix type="string"></prefix>
    <suffix type="string"></suffix>
  </type>
  <type name="northwestdirection">
    <inherit name="compassdirection" />
    <alias>northwest</alias>
    <alt type="stringlist">
      <value>nw</value>
    </alt>
  </type>
  <type name="northdirection">
    <inherit name="compassdirection" />
    <alias>north</alias>
    <alt type="stringlist">
      <value>n</value>
    </alt>
  </type>
  <type name="northeastdirection">
    <inherit name="compassdirection" />
    <alias>northeast</alias>
    <alt type="stringlist">
      <value>ne</value>
    </alt>
  </type>
  <type name="westdirection">
    <inherit name="compassdirection" />
    <alias>west</alias>
    <alt type="stringlist">
      <value>w</value>
    </alt>
  </type>
  <type name="eastdirection">
    <inherit name="compassdirection" />
    <alias>east</alias>
    <alt type="stringlist">
      <value>e</value>
    </alt>
  </type>
  <type name="southwestdirection">
    <inherit name="compassdirection" />
    <alias>southwest</alias>
    <alt type="stringlist">
      <value>sw</value>
    </alt>
  </type>
  <type name="southdirection">
    <inherit name="compassdirection" />
    <alias>south</alias>
    <alt type="stringlist">
      <value>s</value>
    </alt>
  </type>
  <type name="southeastdirection">
    <inherit name="compassdirection" />
    <alias>southeast</alias>
    <alt type="stringlist">
      <value>se</value>
    </alt>
  </type>
  <type name="updirection">
    <inherit name="updowndirection" />
    <alias>up</alias>
    <alt type="stringlist">
      <value>u</value>
    </alt>
  </type>
  <type name="downdirection">
    <inherit name="updowndirection" />
    <alias>down</alias>
    <alt type="stringlist">
      <value>d</value>
    </alt>
  </type>
  <type name="indirection">
    <inherit name="inoutdirection" />
    <alias>in</alias>
    <alt type="stringlist">
      <value></value>
    </alt>
  </type>
  <type name="outdirection">
    <inherit name="inoutdirection" />
    <alias>out</alias>
    <alt type="stringlist">
      <value>o</value>
    </alt>
  </type>
  <type name="defaultcommand">
    <pattern type="simplepattern"></pattern>
  </type>
  <type name="male">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>he</gender>
    <article>him</article>
  </type>
  <type name="namedmale">
    <inherit name="male" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </type>
  <type name="female">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>she</gender>
    <article>her</article>
  </type>
  <type name="namedfemale">
    <inherit name="female" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </type>
  <type name="plural">
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="maleplural">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="femaleplural">
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak to</value>
    </displayverbs>
    <gender>they</gender>
    <article>them</article>
  </type>
  <type name="openable">
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_base">
    <container />
  </type>
  <type name="container_closed">
    <inherit name="container_base" />
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_open">
    <inherit name="container_base" />
    <isopen />
    <open />
    <close />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="surface">
    <inherit name="container_base" />
    <isopen />
    <transparent />
    <contentsprefix>on which there is</contentsprefix>
  </type>
  <type name="container">
    <inherit name="container_open" />
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_limited">
    <inherit name="container" />
    <maxobjects type="int">1</maxobjects>
    <maxvolume type="int">100</maxvolume>
    <addscript type="AddScript"><![CDATA[
      activecontainer = this
      correct = true
      while (DoesInherit(activecontainer, "container_base")) {
        if (HasInt(activecontainer, "maxvolume")) {
          if (GetVolume(object, true) + GetVolume(activecontainer, false) > activecontainer.maxvolume) {
            correct = false
            if (HasString(this, "containerfullmessage")) {
              message = this.containerfullmessage
            }
            else {
              message = DynamicTemplate("ContainerFull", this)
            }
          }
        }
        activecontainer = activecontainer.parent
      }
      children = GetDirectChildren(this)
      if (listcount(children) >= this.maxobjects) {
        correct = false
        if (HasString(this, "containerfullmessage")) {
          message = this.containerfullmessage
        }
        else {
          message = DynamicTemplate("MaxObjectsInContainer", this)
        }
      }
      if (correct = false) {
        msg (message)
      }
      else {
        object.parent = this
        msg (Template("Done"))
      }
    ]]></addscript>
    <displayverbs type="stringlist">
      <value>Open</value>
      <value>Close</value>
    </displayverbs>
  </type>
  <type name="container_lockable">
    <locked />
    <nokeymessage>You do not have the key.</nokeymessage>
    <unlockmessage>Unlocked.</unlockmessage>
    <lockmessage>Locked.</lockmessage>
    <canlockopen type="boolean">false</canlockopen>
    <autoopen />
    <autounlock />
    <openscript type="script">
      if (this.locked) {
        if (this.autounlock and ListContains(ScopeInventory(), this.key)) {
          do (this, "unlock")
          if (not this.isopen) {
            OpenObject (this)
          }
        }
        else {
          msg (DynamicTemplate("LockedObject", this))
        }
      }
      else {
        OpenObject (this)
      }
    </openscript>
    <closescript type="script">
      if (this.locked) {
        msg (DynamicTemplate("LockedObject", this))
      }
      else {
        CloseObject (this)
      }
    </closescript>
    <lock type="script">
      if (this.locked) {
        msg (DynamicTemplate("AlreadyLocked", this))
      }
      else if (this.isopen and not this.canlockopen) {
        msg (DynamicTemplate("CannotLockOpen", this))
      }
      else {
        if (ListContains(ScopeInventory(), this.key)) {
          msg (this.lockmessage)
          this.locked = true
        }
        else {
          msg (this.nokeymessage)
        }
      }
    </lock>
    <unlock type="script">
      if (not this.locked) {
        msg (DynamicTemplate("AlreadyUnlocked", this))
      }
      else {
        if (ListContains(ScopeInventory(), this.key)) {
          msg (this.unlockmessage)
          this.locked = false
          if (this.autoopen and not this.isopen) {
            TryOpenClose (true, this)
          }
        }
        else {
          msg (this.nokeymessage)
        }
      }
    </unlock>
  </type>
  <type name="defaultplayer" />
  <type name="switchable">
    <switchedon type="boolean">false</switchedon>
    <turnon type="script">
      if (ListContains(ScopeReachable(), this)) {
        if (this.switchedon) {
          msg (DynamicTemplate("AlreadySwitchedOn", this))
        }
        else {
          if (HasString(this, "switchonmsg")) {
            msg (this.switchonmsg)
          }
          else {
            msg (DynamicTemplate("SwitchedOn", this))
          }
          this.switchedon = true
        }
      }
      else {
        msg (DynamicTemplate("DefaultTurnOn", this))
      }
    </turnon>
    <turnoff type="script">
      if (ListContains(ScopeReachable(), this)) {
        if (not this.switchedon) {
          msg (DynamicTemplate("AlreadySwitchedOff", this))
        }
        else {
          if (HasString(this, "switchoffmsg")) {
            msg (this.switchoffmsg)
          }
          else {
            msg (DynamicTemplate("SwitchedOff", this))
          }
          this.switchedon = false
        }
      }
      else {
        msg (DynamicTemplate("DefaultTurnOff", this))
      }
    </turnoff>
    <displayverbs type="stringlist">
      <value>Switch on</value>
      <value>Switch off</value>
    </displayverbs>
  </type>
  <type name="edible">
    <eathealth type="int">0</eathealth>
    <eat type="script">
      if (HasString(this, "eatmsg")) {
        msg (this.eatmsg)
      }
      else {
        msg (DynamicTemplate("Eaten", this))
      }
      if (HasInt(game.pov, "health")) {
        game.pov.health = game.pov.health + this.eathealth
      }
      destroy (this.name)
    </eat>
    <displayverbs type="stringlist">
      <value>Eat</value>
    </displayverbs>
  </type>
  <type name="gridborder_path_ew">
    <attr name="grid_bordersides" type="int">10</attr>
  </type>
  <type name="gridborder_path_e">
    <attr name="grid_bordersides" type="int">11</attr>
  </type>
  <type name="gridborder_path_w">
    <attr name="grid_bordersides" type="int">14</attr>
  </type>
  <type name="gridborder_path_ns">
    <attr name="grid_bordersides" type="int">5</attr>
  </type>
  <type name="gridborder_path_n">
    <attr name="grid_bordersides" type="int">7</attr>
  </type>
  <type name="gridborder_path_s">
    <attr name="grid_bordersides" type="int">13</attr>
  </type>
  <type name="Weapons" />
  <function name="GetDefaultPrefix" parameters="obj" type="string"><![CDATA[
    if (Instr("aeiou", LCase(Left(GetDisplayAlias(obj), 1))) > 0) {
      return ("an")
    }
    else {
      return ("a")
    }
  ]]></function>
  <function name="WriteVerb" parameters="obj, verb" type="string">
    return (CapFirst(obj.gender) + " " + Conjugate(obj, verb))
  </function>
  <function name="Conjugate" parameters="obj, verb" type="string">
    gender = obj.gender
    if (gender = "he" or gender = "she") {
      gender = "it"
    }
    switch (verb) {
      case ("be") {
        switch (gender) {
          case ("i") {
            return ("am")
          }
          case ("you") {
            return ("are")
          }
          case ("it") {
            return ("is")
          }
          case ("we") {
            return ("are")
          }
          case ("they") {
            return ("are")
          }
          default {
            return ("is")
          }
        }
      }
      case ("do") {
        switch (gender) {
          case ("i") {
            return ("do")
          }
          case ("you") {
            return ("do")
          }
          case ("it") {
            return ("does")
          }
          case ("we") {
            return ("do")
          }
          case ("they") {
            return ("do")
          }
          default {
            return ("do")
          }
        }
      }
      default {
        if (gender = "it") {
          return (verb + "s")
        }
        else {
          return (verb)
        }
      }
    }
  </function>
  <function name="ListObjectContents" parameters="object"><![CDATA[
    if (GetBoolean(object, "isopen") and GetBoolean(object, "listchildren")) {
      if (GetBoolean(object, "hidechildren")) {
        object.hidechildren = false
      }
      if (HasString(object, "listchildrenprefix")) {
        listprefix = object.listchildrenprefix
      }
      else {
        listprefix = DynamicTemplate("ObjectContains", object)
      }
      list = FormatObjectList(listprefix, object, Template("And"), ".")
      if (list <> "") {
        msg (list)
      }
    }
  ]]></function>
  <function name="DoTake" parameters="object, ismultiple"><![CDATA[
    prefix = ""
    if (ismultiple) {
      prefix = GetDisplayAlias(object) + ": "
    }
    if (object.parent = game.pov) {
      msg (prefix + DynamicTemplate("AlreadyTaken", object))
    }
    else if (not ListContains(ScopeReachable(), object)) {
      msg (prefix + DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      volume = 0
      continue = true
      foreach (obj, GetAllChildObjects(game.pov)) {
        if (HasInt(obj, "volume")) {
          volume = volume + obj.volume
        }
      }
      if (not Contains(game.pov, object)) {
        volume = volume + GetVolume(object,true)
      }
      if (HasInt(game.pov, "maxvolume")) {
        if (volume > game.pov.maxvolume) {
          continue = false
          if (HasString(game.pov, "containerfullmessage")) {
            message = prefix + game.pov.containerfullmessage
          }
          else {
            message = prefix + DynamicTemplate("FullInventory", object)
          }
        }
      }
      children = GetDirectChildren(game.pov)
      if (HasInt(game.pov, "maxobjects")) {
        if (game.pov.maxobjects > 0) {
          if (ListCount(children) >= game.pov.maxobjects) {
            continue = false
            if (HasString(game.pov, "containermaxobjects")) {
              message = prefix + game.pov.containermaxobjects
            }
            else {
              message = prefix + DynamicTemplate("MaxObjectsInInventory", object)
            }
          }
        }
      }
      if (continue = false) {
        msg (message)
      }
      else {
        found = true
        takemsg = object.takemsg
        switch (TypeOf(object, "take")) {
          case ("script") {
            if (ismultiple) {
              OutputTextNoBr (prefix)
            }
            do (object, "take")
            takemsg = ""
          }
          case ("boolean") {
            if (object.take = true) {
              object.parent = game.pov
              if (takemsg = null) {
                takemsg = DynamicTemplate("TakeSuccessful", object)
              }
            }
            else {
              found = false
            }
          }
          case ("string") {
            object.parent = game.pov
            takemsg = object.take
          }
          default {
            found = false
          }
        }
        if (not found and takemsg = null) {
          takemsg = DynamicTemplate("TakeUnsuccessful", object)
        }
        if (LengthOf(takemsg) > 0) {
          msg (prefix + takemsg)
        }
        if (HasScript(object, "ontake")) {
          do (object, "ontake")
        }
        if (found and GetBoolean (object, "scenery") and object.parent = game.pov) {
          object.scenery = false
        }
      }
    }
  ]]></function>
  <function name="DoDrop" parameters="object, ismultiple"><![CDATA[
    prefix = ""
    if (ismultiple) {
      prefix = GetDisplayAlias(object) + ": "
    }
    if (not ListContains(ScopeInventory(), object)) {
      msg (prefix + DynamicTemplate("NotCarrying", object))
    }
    else if (not ListContains(ScopeReachable(), object)) {
      msg (prefix + DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      found = true
      dropmsg = object.dropmsg
      switch (TypeOf(object, "drop")) {
        case ("script") {
          if (ismultiple) {
            OutputTextNoBr (prefix)
          }
          do (object, "drop")
          dropmsg = ""
        }
        case ("boolean") {
          if (object.drop = true) {
            object.parent = game.pov.parent
            if (dropmsg = null) {
              dropmsg = DynamicTemplate("DropSuccessful", object)
            }
          }
          else {
            found = false
          }
        }
        case ("string") {
          object.parent = game.pov.parent
          dropmsg = object.drop
        }
        default {
          found = false
        }
      }
      if (not found and dropmsg = null) {
        dropmsg = DynamicTemplate("DropUnsuccessful", object)
      }
      if (LengthOf(dropmsg) > 0) {
        msg (prefix + dropmsg)
      }
      if (HasScript(object, "ondrop")) {
        do (object, "ondrop")
      }
    }
  ]]></function>
  <function name="CreateUseMenuList" parameters="object" type="objectlist">
    objectlist = NewObjectList()
    objectlist = ScopeReachableInventory()
    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())
    excludelist = NewObjectList()
    list add (excludelist, game.pov)
    list add (excludelist, object)
    candidates = NewObjectList()
    candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
    return (candidates)
  </function>
  <function name="TryOpenClose" parameters="doopen, object">
    if (doopen) {
      action = "open"
      scriptaction = "openscript"
    }
    else {
      action = "close"
      scriptaction = "closescript"
    }
    if (not ListContains(ScopeReachable(), object)) {
      msg (DynamicTemplate("ObjectNotOpen", GetBlockingObject(object)))
    }
    else {
      found = false
      if (GetBoolean(object, action)) {
        if (doopen) {
          if (object.isopen) {
            msg (DynamicTemplate("AlreadyOpen", object))
          }
          else {
            if (HasScript(object, scriptaction)) {
              do (object, scriptaction)
            }
            else {
              OpenObject (object)
            }
          }
        }
        else {
          if (not object.isopen) {
            msg (DynamicTemplate("AlreadyClosed", object))
          }
          else {
            if (HasScript(object, scriptaction)) {
              do (object, scriptaction)
            }
            else {
              CloseObject (object)
            }
          }
        }
      }
      else {
        if (doopen) {
          msg (DynamicTemplate("CantOpen", object))
        }
        else {
          msg (DynamicTemplate("CantClose", object))
        }
      }
    }
  </function>
  <function name="OpenObject" parameters="object">
    if (HasString(object, "openmsg")) {
      msg (object.openmsg)
    }
    else {
      msg (DynamicTemplate("OpenSuccessful", object))
    }
    object.isopen = true
    ListObjectContents (object)
  </function>
  <function name="CloseObject" parameters="object">
    if (HasString(object, "closemsg")) {
      msg (object.closemsg)
    }
    else {
      msg (DynamicTemplate("CloseSuccessful", object))
    }
    object.isopen = false
  </function>
  <function name="CreateGiveMenuList" parameters="object" type="objectlist">
    objectlist = NewObjectList()
    objectlist = ScopeReachableInventory()
    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())
    excludelist = NewObjectList()
    list add (excludelist, game.pov)
    list add (excludelist, object)
    candidates = NewObjectList()
    candidates = ListExclude(RemoveSceneryObjects(objectlist), excludelist)
    return (candidates)
  </function>
  <function name="HandleGiveTo" parameters="object1, object2">
    handled = false
    if (HasString(object2, "give")) {
      msg (object2.give)
      handled = true
    }
    else if (TypeOf(object2, "give") = "scriptdictionary") {
      if (DictionaryContains(object2.give, object1.name)) {
        parameters = NewObjectDictionary()
        dictionary add (parameters, "this", object2)
        dictionary add (parameters, "object", object1)
        invoke (ScriptDictionaryItem(object2.give, object1.name), parameters)
        handled = true
      }
      if (not handled) {
        if (HasScript(object2, "giveanything")) {
          // TO DO: Would be better to use a delegate for giveanything, but need to implement Editor support first
          parameters = NewObjectDictionary()
          dictionary add (parameters, "object", object1)
          do (object2, "giveanything", parameters)
          handled = true
        }
      }
    }
    if (not handled) {
      if (HasString(object1, "giveto")) {
        msg (object1.giveto)
        handled = true
      }
      else if (TypeOf(object1, "giveto") = "scriptdictionary") {
        if (DictionaryContains(object1.giveto, object2.name)) {
          parameters = NewObjectDictionary()
          dictionary add (parameters, "this", object1)
          dictionary add (parameters, "object", object2)
          invoke (ScriptDictionaryItem(object1.giveto, object2.name), parameters)
          handled = true
        }
        else {
          if (HasScript(object1, "givetoanything")) {
            // TO DO: Would be better to use a delegate for givetoanything, but need to implement Editor support first
            parameters = NewObjectDictionary()
            dictionary add (parameters, "object", object2)
            do (object1, "givetoanything", parameters)
            handled = true
          }
        }
      }
    }
    if (not handled) {
      msg (DynamicTemplate("DefaultGive", object2, object1))
    }
  </function>
  <function name="HandleUseOn" parameters="object1, object2">
    handled = false
    if (HasString(object2, "useon")) {
      msg (object2.useon)
      handled = true
    }
    else if (TypeOf(object2, "useon") = "scriptdictionary") {
      if (DictionaryContains(object2.useon, object1.name)) {
        parameters = NewObjectDictionary()
        dictionary add (parameters, "this", object2)
        dictionary add (parameters, "object", object1)
        invoke (ScriptDictionaryItem(object2.useon, object1.name), parameters)
        handled = true
      }
      else {
        if (HasScript(object2, "useanything")) {
          // TO DO: Would be better to use a delegate for useanything, but need to implement Editor support first
          parameters = NewObjectDictionary()
          dictionary add (parameters, "object", object1)
          do (object2, "useanything", parameters)
          handled = true
        }
      }
    }
    if (not handled) {
      if (HasString(object1, "selfuseon")) {
        msg (object1.selfuseon)
        handled = true
      }
      else if (TypeOf(object1, "selfuseon") = "scriptdictionary") {
        if (DictionaryContains(object1.selfuseon, object2.name)) {
          parameters = NewObjectDictionary()
          dictionary add (parameters, "this", object1)
          dictionary add (parameters, "object", object2)
          invoke (ScriptDictionaryItem(object1.selfuseon, object2.name), parameters)
          handled = true
        }
        else {
          if (HasScript(object1, "selfuseanything")) {
            // TO DO: Would be better to use a delegate for selfuseanything, but need to implement Editor support first
            parameters = NewObjectDictionary()
            dictionary add (parameters, "object", object2)
            do (object1, "selfuseanything", parameters)
            handled = true
          }
        }
      }
    }
    if (not handled) {
      msg (DynamicTemplate("DefaultUseOn", object2, object1))
    }
  </function>
  <function name="DoAskTell" parameters="object, text, property, defaultscript, defaulttemplate"><![CDATA[
    handled = false
    maxstrength = 0
    match = null
    text = LCase(text)
    if (TypeOf(object, property) = "scriptdictionary") {
      dictionary = GetAttribute(object, property)
      foreach (keywords, dictionary) {
        strength = GetKeywordsMatchStrength(LCase(keywords), text)
        if (strength >= maxstrength and strength>0) {
          match = ScriptDictionaryItem(dictionary, keywords)
          maxstrength = strength
        }
      }
      if (match <> null) {
        parameters = NewObjectDictionary()
        dictionary add (parameters, "this", object)
        invoke (match, parameters)
        handled = true
      }
    }
    if (not handled) {
      if (HasScript(object, defaultscript)) {
        do (object, defaultscript)
      }
      else {
        msg (DynamicTemplate(defaulttemplate, object))
      }
    }
  ]]></function>
  <function name="GetKeywordsMatchStrength" parameters="keywords, input" type="int">
    // Keywords is the subject. We split it into individual words, and then see how well
    // the words in the input match the keywords.
    keywordlist = Split(keywords, " ")
    inputlist = Split(input, " ")
    strength = 0
    foreach (word, inputlist) {
      foreach (keyword, keywordlist) {
        if (StartsWith(word, keyword)) {
          strength = strength + LengthOf(keyword)
        }
      }
    }
    return (strength)
  </function>
  <function name="CompareNames" parameters="name, value, obj, fullmatches, partialmatches"><![CDATA[
    if (name = value) {
      if (not ListContains(fullmatches, obj)) {
        list add (fullmatches, obj)
      }
    }
    else {
      if (StartsWith(name, value)) {
        if (not ListContains(partialmatches, obj)) {
          list add (partialmatches, obj)
        }
      }
      else {
        // check if input matches the start of any word in the name
        if (Instr(name, " " + value) > 0) {
          if (not ListContains(partialmatches, obj)) {
            list add (partialmatches, obj)
          }
        }
      }
    }
  ]]></function>
  <function name="GenerateMenuChoices" parameters="dictionary, objects">
    foreach (obj, objects) {
      if (not DictionaryContains(dictionary, obj.name)) {
        dictionary add (dictionary, obj.name, GetDisplayAlias(obj))
      }
    }
  </function>
  <function name="ResolveName" parameters="variable, value, objtype" type="object"><![CDATA[
    found = false
    if (game.pov.commandmetadata <> null) {
      if (DictionaryContains(game.pov.commandmetadata, value)) {
        result = GetObject(StringDictionaryItem(game.pov.commandmetadata, value))
        if (result <> null) {
          if (ListContains(ScopeVisible(), result)) {
            found = true
            return (result)
          }
        }
      }
    }
    if (not found) {
      value = LCase(value)
      result = ResolveNameInternal(variable, value, objtype)
      if (result <> null) {
        return (result)
      }
      else {
        // TO DO: Check this behaviour. We only want to try ignoring prefixes if we have definitely got an unresolved name.
        foreach (prefix, game.parserignoreprefixes) {
          if (StartsWith(value, prefix + " ")) {
            result = ResolveNameInternal(variable, Mid(value, LengthOf(prefix) + 1), objtype)
          }
        }
        if (result = null and LengthOf(variable) = 0 and not GetBoolean(game.pov, "currentcommandmultiobjectpending")) {
          UnresolvedCommand (value, game.pov.currentcommandpendingvariable)
        }
        return (result)
      }
    }
  ]]></function>
  <function name="ResolveNameInternal" parameters="variable, value, objtype" type="object"><![CDATA[
    fullmatches = NewObjectList()
    partialmatches = NewObjectList()
    game.pov.currentcommandmultiobjectpending = false
    if (objtype = "object") {
      scope = ScopeVisible()
    }
    else if (objtype = "exit") {
      scope = ScopeExits()
    }
    value = Trim(value)
    foreach (obj, scope) {
      name = LCase(GetDisplayAlias(obj))
      CompareNames (name, value, obj, fullmatches, partialmatches)
      if (obj.alt <> null) {
        foreach (altname, obj.alt) {
          CompareNames (LCase(altname), value, obj, fullmatches, partialmatches)
        }
      }
    }
    if (game.lastobjects <> null) {
      foreach (obj, game.lastobjects) {
        CompareNames (LCase(obj.article), value, obj, fullmatches, partialmatches)
        CompareNames (LCase(obj.gender), value, obj, fullmatches, partialmatches)
      }
    }
    if (ListCount(fullmatches) = 1) {
      return (ListItem(fullmatches, 0))
    }
    else if (ListCount(fullmatches) = 0 and ListCount(partialmatches) = 1) {
      return (ListItem(partialmatches, 0))
    }
    else if (ListCount(fullmatches) + ListCount(partialmatches) = 0) {
      return (null)
    }
    else {
      menu = NewStringDictionary()
      GenerateMenuChoices (menu, fullmatches)
      GenerateMenuChoices (menu, partialmatches)
      if (LengthOf(variable) > 0) {
        // single object command, so after showing the menu, add the object to game.pov.currentcommandresolvedelements
        game.pov.currentcommandpendingvariable = variable
        ShowMenu (DynamicTemplate("DisambiguateMenu", value), menu, true) {
          varname = game.pov.currentcommandpendingvariable
          game.pov.currentcommandpendingvariable = null
          if (result <> null) {
            AddToResolvedNames (varname, GetObject(result))
          }
        }
      }
      else {
        // multi-object command, so after showing the menu, add the object to the list
        game.pov.currentcommandmultiobjectpending = true
        ShowMenu (DynamicTemplate("DisambiguateMenu", value), menu, true) {
          if (result <> null) {
            list add (game.pov.currentcommandpendingobjectlist, GetObject(result))
            ResolveNextNameListItem
          }
        }
      }
      return (null)
    }
  ]]></function>
  <function name="ResolveNameList" parameters="value, scope, objtype">
    game.pov.currentcommandpendingobjectlist = NewObjectList()
    game.pov.currentcommandpendingobjectlistunresolved = NewStringList()
    game.pov.currentcommandpendingobjectscope = scope
    game.pov.currentcommandpendingobjecttype = objtype
    inputlist = Split(value, ",")
    foreach (inputbase, inputlist) {
      inputlist2 = Split(inputbase, " " + Template("And") + " ")
      foreach (input, inputlist2) {
        list add (game.pov.currentcommandpendingobjectlistunresolved, input)
      }
    }
    ResolveNextNameListItem
  </function>
  <function name="ResolveNextNameListItem"><![CDATA[
    resolvedall = false
    if (TypeOf(game.pov, "currentcommandpendingobjectlistunresolved") = "stringlist") {
      queuelength = ListCount(game.pov.currentcommandpendingobjectlistunresolved)
      if (queuelength > 0) {
        thisitem = Trim(StringListItem(game.pov.currentcommandpendingobjectlistunresolved, 0))
        if (queuelength = 1) {
          game.pov.currentcommandpendingobjectlistunresolved = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.currentcommandpendingobjectlistunresolved, i))
          }
          game.pov.currentcommandpendingobjectlistunresolved = newqueue
        }
        ResolveNameListItem (Trim(thisitem))
      }
      else {
        resolvedall = true
      }
    }
    else {
      resolvedall = true
    }
    if (resolvedall) {
      ResolveNameListItemFinished (game.pov.currentcommandpendingobjectlist)
    }
  ]]></function>
  <function name="ResolveNameListItem" parameters="value"><![CDATA[
    if (ListContains(game.allobjects, value)) {
      // value is "all"
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", true)
      }
      ResolveNameListItemFinished (game.pov.currentcommandpendingobjectscope)
    }
    else {
      object = ResolveName("", value, game.pov.currentcommandpendingobjecttype)
      if (object <> null) {
        if (not ListContains(game.pov.currentcommandpendingobjectlist, object)) {
          list add (game.pov.currentcommandpendingobjectlist, object)
        }
        ResolveNextNameListItem
      }
    }
  ]]></function>
  <function name="ResolveNameListItemFinished" parameters="result"><![CDATA[
    if (ListCount(result) > 1) {
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", true)
      }
    }
    AddToResolvedNames (game.pov.currentcommandpendingvariable, result)
  ]]></function>
  <function name="HandleCommand" parameters="command, metadata"><![CDATA[
    handled = false
    if (game.menucallback <> null) {
      if (HandleMenuTextResponse(command)) {
        handled = true
      }
      else {
        if (game.menuallowcancel) {
          ClearMenu
        }
        else {
          handled = true
        }
      }
    }
    if (not handled) {
      StartTurnOutputSection
      if (StartsWith (command, "*")) {
        msg ("")
        msg (SafeXML (command))
      }
      else {
        shownlink = false
        if (game.echocommand) {
          if (metadata <> null and game.enablehyperlinks and game.echohyperlinks) {
            foreach (key, metadata) {
              if (EndsWith(command, key)) {
                objectname = StringDictionaryItem(metadata, key)
                object = GetObject(objectname)
                if (object <> null) {
                  msg ("")
                  msg ("&gt; " + Left(command, LengthOf(command) - LengthOf(key)) + "{object:" + object.name + "}")
                  shownlink = true
                }
              }
            }
          }
          if (not shownlink) {
            msg ("")
            OutputTextRaw ("&gt; " + SafeXML(command))
          }
        }
        if (game.command_newline) {
          msg ("")
        }
        commands = Split(command, ".")
        game.pov.commandmetadata = metadata
        if (ListCount(commands) = 1) {
          game.pov.commandqueue = null
          HandleSingleCommand (Trim(command))
        }
        else {
          game.pov.commandqueue = commands
          HandleNextCommandQueueItem
        }
      }
    }
  ]]></function>
  <function name="HandleNextCommandQueueItem"><![CDATA[
    if (TypeOf(game.pov, "commandqueue") = "stringlist") {
      queuelength = ListCount(game.pov.commandqueue)
      if (queuelength > 0) {
        thiscommand = Trim(StringListItem(game.pov.commandqueue, 0))
        if (queuelength = 1) {
          game.pov.commandqueue = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.commandqueue, i))
          }
          game.pov.commandqueue = newqueue
        }
        if (LengthOf(thiscommand) > 0) {
          HandleSingleCommand (thiscommand)
        }
        else {
          HandleNextCommandQueueItem
        }
      }
    }
  ]]></function>
  <function name="HandleSingleCommand" parameters="command"><![CDATA[
    candidates = NewObjectList()
    foreach (cmd, ScopeCommands()) {
      if (IsRegexMatch(cmd.pattern, command, cmd.name)) {
        list add (candidates, cmd)
      }
    }
    maxstrength = -1
    thiscommand = null
    foreach (candidate, candidates) {
      strength = GetMatchStrength(candidate.pattern, command, candidate.name)
      // favour commands defined later, so an author can override a library command...
      if (strength >= maxstrength) {
        // ... except if the command defined later (candidate) has no parent, and the current best
        // match (thiscommand) does have a parent. We want to favour any commands defined in rooms
        // over global candidates.
        skip = false
        if (thiscommand <> null) {
          if (thiscommand.parent <> null and candidate.parent = null) {
            skip = true
          }
        }
        if (not skip) {
          thiscommand = candidate
          maxstrength = strength
        }
      }
    }
    if (thiscommand = null) {
      if (HasScript(game, "unresolvedcommandhandler")) {
        params = NewDictionary()
        dictionary add (params, "command", command)
        do (game, "unresolvedcommandhandler", params)
      }
      else {
        msg (Template("UnrecognisedCommand"))
      }
      HandleNextCommandQueueItem
    }
    else {
      varlist = Populate(thiscommand.pattern, command, thiscommand.name)
      HandleSingleCommandPattern (command, thiscommand, varlist)
    }
  ]]></function>
  <function name="FinishTurn">
    RunTurnScripts
    UpdateStatusAttributes
    CheckDarkness
    UpdateObjectLinks
  </function>
  <function name="HandleSingleCommandPattern" parameters="command, thiscommand, varlist">
    // current command string
    game.pov.currentcommand = command
    // current command object
    game.pov.currentcommandpattern = thiscommand
    // string dictionary of variables, e.g. object1="book"; object2="table"
    game.pov.currentcommandvarlist = varlist
    // string list of variables left to resolve
    game.pov.currentcommandvarlistqueue = NewStringList()
    foreach (key, varlist) {
      list add (game.pov.currentcommandvarlistqueue, key)
    }
    // dictionary of resolved elements, e.g. object1=book_object; object2=table_object
    game.pov.currentcommandresolvedelements = NewDictionary()
    // list of resolved elements, e.g. book_object; table_object
    game.pov.currentcommandresolvedobjects = NewObjectList()
    game.pov.currentcommandunresolvedobject = null
    game.pov.currentcommandpendingvariable = null
    ResolveNextName
  </function>
  <function name="ResolveNextName"><![CDATA[
    resolvedall = false
    queuetype = TypeOf(game.pov, "currentcommandvarlistqueue")
    if (queuetype = "stringlist") {
      queuelength = ListCount(game.pov.currentcommandvarlistqueue)
      if (queuelength > 0) {
        // Pop next variable off the queue
        var = StringListItem(game.pov.currentcommandvarlistqueue, 0)
        if (queuelength = 1) {
          game.pov.currentcommandvarlistqueue = null
        }
        else {
          newqueue = NewStringList()
          for (i, 1, queuelength - 1) {
            list add (newqueue, StringListItem(game.pov.currentcommandvarlistqueue, i))
          }
          game.pov.currentcommandvarlistqueue = newqueue
        }
        // Resolve variable
        value = StringDictionaryItem(game.pov.currentcommandvarlist, var)
        if (value <> "") {
          result = null
          resolvinglist = false
          if (StartsWith(var, "object")) {
            if (HasDelegateImplementation(game.pov.currentcommandpattern, "multiple")) {
              game.pov.currentcommandpendingobjectlist = NewObjectList()
              game.pov.currentcommandpendingvariable = var
              ResolveNameList (value, RunDelegateFunction(game.pov.currentcommandpattern, "multiple"), "object")
              resolvinglist = true
            }
            else {
              result = ResolveName(var, value, "object")
            }
          }
          else if (StartsWith(var, "exit")) {
            result = ResolveName(var, value, "exit")
          }
          else if (StartsWith(var, "text")) {
            result = StringDictionaryItem(game.pov.currentcommandvarlist, var)
          }
          else {
            error ("Unhandled command variable '" + var + "' - command variable names must begin with 'object', 'exit' or 'text'")
          }
          // at this point, ResolveName has returned - either an object name, unresolved, or pending
          if (result = null) {
            if ((not resolvinglist) and LengthOf(GetString(game.pov, "currentcommandpendingvariable")) = 0) {
              UnresolvedCommand (value, var)
            }
          }
          else {
            AddToResolvedNames (var, result)
          }
        }
        else {
          ResolveNextName
        }
      }
      else {
        resolvedall = true
      }
    }
    else if (queuetype = "null") {
      resolvedall = true
    }
    else {
      error ("Invalid queue type")
    }
    if (resolvedall) {
      // TO DO: game.lastobjects should be game.pov.lastobjects
      game.lastobjects = game.pov.currentcommandresolvedobjects
      if (not DictionaryContains(game.pov.currentcommandresolvedelements, "multiple")) {
        dictionary add (game.pov.currentcommandresolvedelements, "multiple", false)
      }
      if (not GetBoolean(game.pov.currentcommandpattern, "isundo")) {
        if (LengthOf(game.pov.currentcommand) > 0) {
          start transaction (game.pov.currentcommand)
        }
      }
      if (not GetBoolean(game.pov.currentcommandpattern, "isoops")) {
        // TO DO: game.unresolved* should be game.pov.unresolved*
        game.unresolvedcommand = null
        game.unresolvedcommandvarlist = null
        game.unresolvedcommandkey = null
      }
      if (HasScript(game.pov.currentcommandpattern, "script")) {
        do (game.pov.currentcommandpattern, "script", game.pov.currentcommandresolvedelements)
      }
      HandleNextCommandQueueItem
    }
  ]]></function>
  <function name="AddToResolvedNames" parameters="var, result">
    if (TypeOf(result) = "object") {
      if (result.type = "object") {
        list add (game.pov.currentcommandresolvedobjects, result)
      }
    }
    else if (TypeOf(result) = "objectlist") {
      foreach (obj, result) {
        if (obj.type = "object") {
          list add (game.pov.currentcommandresolvedobjects, obj)
        }
      }
    }
    dictionary add (game.pov.currentcommandresolvedelements, var, result)
    ResolveNextName
  </function>
  <function name="UnresolvedCommand" parameters="objectname, varname"><![CDATA[
    // TO DO: Update names below, we don't need these two variables
    unresolvedobject = objectname
    unresolvedkey = varname
    if (HasString(game.pov.currentcommandpattern, "unresolved")) {
      if (ListCount(game.pov.currentcommandvarlist) > 1) {
        msg (game.pov.currentcommandpattern.unresolved + " (" + unresolvedobject + ")")
      }
      else {
        msg (game.pov.currentcommandpattern.unresolved)
      }
    }
    else {
      if (ListCount(game.pov.currentcommandvarlist) > 1) {
        msg (Template("UnresolvedObject") + " (" + unresolvedobject + ")")
      }
      else {
        msg (Template("UnresolvedObject"))
      }
    }
    game.unresolvedcommand = game.pov.currentcommandpattern
    game.unresolvedcommandvarlist = game.pov.currentcommandvarlist
    game.unresolvedcommandkey = unresolvedkey
  ]]></function>
  <function name="HandleMultiVerb" parameters="object, property, object2, default">
    dictionary = GetAttribute(object, property)
    if (DictionaryContains(dictionary, object2.name)) {
      parameters = NewDictionary()
      dictionary add (parameters, "this", object)
      dictionary add (parameters, "object", object2)
      invoke (ScriptDictionaryItem(dictionary, object2.name), parameters)
    }
    else {
      parameters = NewDictionary()
      dictionary add (parameters, "this", object)
      dictionary add (parameters, "object", object2)
      if (DictionaryContains(dictionary, "default")) {
        invoke (ScriptDictionaryItem(dictionary, "default"), parameters)
      }
      else {
        msg (default)
      }
    }
  </function>
  <function name="GetPlacesObjectsList" type="objectlist">
    return (ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov))
  </function>
  <function name="GetExitsList" type="objectlist">
    return (RemoveLookOnlyExits(RemoveSceneryObjects(ScopeExits())))
  </function>
  <function name="ScopeInventory" type="objectlist">
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(game.pov)) {
      if (ContainsVisible(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="ScopeReachableInventory" type="objectlist">
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(game.pov)) {
      if (ContainsReachable(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="ScopeVisibleNotHeld" type="objectlist">
    return (ScopeVisibleNotHeldForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotHeldForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      result = ListCombine(ScopeReachableNotHeldForRoom(room), ScopeVisibleNotReachableForRoom(room))
      list add (result, game.pov)
      return (result)
    }
    else {
      return (ListCombine(ScopeReachableNotHeldForRoom(room), ScopeVisibleNotReachableForRoom(room)))
    }
  </function>
  <function name="ScopeVisibleNotHeldNotScenery" type="objectlist">
    return (ScopeVisibleNotHeldNotSceneryForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotHeldNotSceneryForRoom" parameters="room" type="objectlist">
    return (RemoveSceneryObjects(ScopeVisibleNotHeldForRoom(room)))
  </function>
  <function name="ScopeReachable" type="objectlist">
    return (ScopeReachableForRoom(game.pov.parent))
  </function>
  <function name="ScopeReachableForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      result = ListCombine(ScopeReachableNotHeldForRoom(room), ScopeReachableInventory())
      list add (result, game.pov)
    }
    else {
      result = ScopeReachableNotHeldForRoom(room)
    }
    return (result)
  </function>
  <function name="ScopeVisibleNotReachable" type="objectlist">
    return (ScopeVisibleNotReachableForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleNotReachableForRoom" parameters="room" type="objectlist">
    result = NewObjectList()
    exclude = ScopeReachableForRoom(room)
    list add (exclude, game.pov)
    newParent = GetNonTransparentParent(room)
    foreach (obj, GetAllChildObjects(newParent)) {
      if (ContainsVisible(newParent, obj) and not ListContains(exclude, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="GetNonTransparentParent" parameters="room" type="object">
    if (GetBoolean(room, "transparent")) {
      if (room.parent = null) {
        return (room)
      }
      else {
        return (GetNonTransparentParent(room.parent))
      }
    }
    else {
      return (room)
    }
  </function>
  <function name="ScopeReachableNotHeld" type="objectlist">
    return (ScopeReachableNotHeldForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleLightsource" parameters="lightstrength" type="objectlist">
    result = ScopeVisible()
    lightobjects = NewObjectList()
    foreach (obj, result) {
      if (GetBoolean(obj, "lightsource") and GetString(obj, "lightstrength") = lightstrength) {
        list add (lightobjects, obj)
      }
    }
    exits = ScopeExits()
    foreach (obj, exits) {
      if (GetBoolean(obj, "lightsource") and GetString(obj, "lightstrength") = lightstrength) {
        list add (lightobjects, obj)
      }
    }
    return (lightobjects)
  </function>
  <function name="ScopeReachableNotHeldForRoom" parameters="room" type="objectlist"><![CDATA[
    result = NewObjectList()
    foreach (obj, GetAllChildObjects(room)) {
      if (ContainsReachable(room, obj) and obj <> game.pov and not Contains(game.pov, obj)) {
        list add (result, obj)
      }
    }
    return (result)
  ]]></function>
  <function name="ScopeVisible" type="objectlist">
    return (ScopeVisibleForRoom(game.pov.parent))
  </function>
  <function name="ScopeVisibleForRoom" parameters="room" type="objectlist">
    if (room = game.pov.parent) {
      return (ListCombine(ScopeVisibleNotHeldForRoom(room), ScopeInventory()))
    }
    else {
      return (ScopeVisibleNotHeldForRoom(room))
    }
  </function>
  <function name="ScopeExits" type="objectlist">
    return (ScopeExitsForRoom(game.pov.parent))
  </function>
  <function name="ScopeExitsForRoom" parameters="room" type="objectlist">
    result = NewObjectList()
    foreach (exit, AllExits()) {
      if (exit.parent = room) {
        if (exit.visible) {
          if (GetBoolean(room, "darklevel")) {
            if (GetBoolean(exit, "lightsource")) {
              list add (result, exit)
            }
          }
          else {
            list add (result, exit)
          }
        }
      }
    }
    return (result)
  </function>
  <function name="ScopeCommands" type="objectlist">
    result = NewObjectList()
    foreach (command, AllCommands()) {
      if (command.parent = null or command.parent = game.pov.parent) {
        list add (result, command)
      }
    }
    return (result)
  </function>
  <function name="GetBlockingObject" parameters="obj" type="object">
    result = null
    foreach (obj, ListParents(obj)) {
      if (result = null and not CanReachThrough(obj)) {
        result = obj
      }
    }
    return (result)
  </function>
  <function name="ListParents" parameters="obj" type="objectlist"><![CDATA[
    result = NewObjectList()
    if (obj.parent <> null) {
      parent_as_list = NewObjectList()
      list add (parent_as_list, obj.parent)
      result = ListCombine(parent_as_list, ListParents(obj.parent))
    }
    return (result)
  ]]></function>
  <function name="ContainsVisible" parameters="parentObj, searchObj" type="boolean">
    return (ContainsAccessible(parentObj, searchObj, false))
  </function>
  <function name="ContainsReachable" parameters="parentObj, searchObj" type="boolean">
    return (ContainsAccessible(parentObj, searchObj, true))
  </function>
  <function name="ContainsAccessible" parameters="parentObj, searchObj, onlyReachable" type="boolean">
    if (not HasObject(searchObj, "parent")) {
      return (false)
    }
    else if (not searchObj.visible) {
      return (false)
    }
    else if (GetBoolean(parentObj, "darklevel") and not GetBoolean(searchObj, "lightsource")) {
      return (false)
    }
    else {
      if (searchObj.parent = null) {
        return (false)
      }
      else if (searchObj.parent = parentObj) {
        return (true)
      }
      else {
        if (onlyReachable) {
          canAdd = CanReachThrough(searchObj.parent)
        }
        else {
          canAdd = CanSeeThrough(searchObj.parent)
        }
        if (canAdd) {
          return (ContainsAccessible(parentObj, searchObj.parent, onlyReachable))
        }
        else {
          return (false)
        }
      }
    }
  </function>
  <function name="GetVolume" parameters="obj, allinclusive" type="int">
    result = 0
    foreach (object, GetAllChildObjects ( obj )) {
      if (HasInt(object, "volume")) {
        result = result + object.volume
      }
    }
    if (allinclusive and HasInt(obj, "volume")) {
      result = result + obj.volume
    }
    return (result)
  </function>
  <function name="CanSeeThrough" parameters="obj" type="boolean">
    return ((GetBoolean(obj, "transparent") or CanReachThrough(obj)) and not GetBoolean(obj, "hidechildren"))
  </function>
  <function name="CanReachThrough" parameters="obj" type="boolean">
    return (GetBoolean(obj, "isopen") and not GetBoolean(obj, "hidechildren"))
  </function>
  <function name="Got" parameters="obj" type="boolean">
    return (ListContains(ScopeInventory(), obj))
  </function>
  <function name="UpdateObjectLinks">
    if (game.enablehyperlinks) {
      data = NewStringDictionary()
      foreach (object, ScopeVisible()) {
        dictionary add (data, object.name, Join(GetDisplayVerbs(object), "/"))
      }
      JS.updateObjectLinks (data)
      exits = NewStringList()
      foreach (exit, ScopeExits()) {
        list add (exits, exit.name)
      }
      JS.updateExitLinks (exits)
      commands = NewStringList()
      foreach (cmd, ScopeCommands()) {
        list add (commands, cmd.name)
      }
      JS.updateCommandLinks (commands)
    }
  </function>
  <function name="ShowRoomDescription"><![CDATA[
    isDark = CheckDarkness()
    if (isDark) {
      descriptionfield = "darkroomdescription"
    }
    else {
      descriptionfield = "description"
    }
    if (game.autodescription) {
      desc = ""
      for (i, 1, 4) {
        if (i = game.autodescription_youarein) {
          if (game.autodescription_youarein_useprefix) {
            youarein = game.pov.parent.descprefix
            desc = AddDescriptionLine (desc, youarein + " " + GetDisplayName(game.pov.parent) + ".")
          }
          else {
            desc = AddDescriptionLine (desc, "<b>" + CapFirst(GetDisplayName(game.pov.parent)) + "</b>")
          }
          if (game.autodescription_youarein_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_youcansee) {
          objects = FormatObjectList(game.pov.parent.objectslistprefix, GetNonTransparentParent(game.pov.parent), Template("And"), ".")
          desc = AddDescriptionLine(desc, objects)
          if (game.autodescription_youcansee_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_youcango) {
          exits = FormatExitList(game.pov.parent.exitslistprefix, GetExitsList(), Template("Or"), ".")
          desc = AddDescriptionLine(desc, exits)
          if (game.autodescription_youcango_newline) {
            msg (desc)
            desc = ""
          }
        }
        if (i = game.autodescription_description) {
          if (HasScript(game.pov.parent, descriptionfield)) {
            if (LengthOf(desc) > 0) {
              msg (desc)
              desc = ""
            }
            do (game.pov.parent, descriptionfield)
            if (game.autodescription_description_newline) {
              msg ("")
            }
          }
          else {
            desc = AddDescriptionLine(desc, GetRoomDescription())
            if (game.autodescription_description_newline) {
              msg (desc)
              desc = ""
            }
          }
        }
      }
      if (LengthOf(desc) > 0) {
        msg (desc)
      }
    }
    else {
      if (HasScript(game.pov.parent, descriptionfield)) {
        do (game.pov.parent, descriptionfield)
      }
      else {
        fulldesc = GetRoomDescription()
        if (LengthOf(fulldesc) > 0) {
          msg (fulldesc)
        }
      }
    }
  ]]></function>
  <function name="AddDescriptionLine" parameters="desc, line" type="string"><![CDATA[
    if (LengthOf(line) > 0) {
      if (LengthOf(desc) > 0) {
        msg (desc)
        desc = ""
      }
      desc = desc + line
    }
    return (desc)
  ]]></function>
  <function name="GetRoomDescription" type="string"><![CDATA[
    fulldesc = ""
    if (CheckDarkness()) {
      if (HasString(game.pov.parent, "darkroomdescription")) {
        if (LengthOf(game.pov.parent.darkroomdescription) > 0) {
          fulldesc = game.pov.parent.darkroomdescription
        }
      }
    }
    else {
      if (HasString(game.pov.parent, "description")) {
        if (LengthOf(game.pov.parent.description) > 0) {
          fulldesc = game.pov.parent.description
        }
      }
    }
    if (game.appendobjectdescription) {
      foreach (val, ScopeVisibleNotHeld()) {
        if (HasString(val, "inroomdescription")) {
          if (LengthOf(val.inroomdescription) > 0 and val <> game.pov) {
            fulldesc = fulldesc + " " + val.inroomdescription
          }
        }
      }
    }
    return (Trim(fulldesc))
  ]]></function>
  <function name="OnEnterRoom" parameters="oldRoom"><![CDATA[
    game.displayroomdescriptiononstart = false
    if (IsDefined("oldRoom")) {
      if (oldRoom <> null) {
        if (HasScript(oldRoom, "onexit")) {
          do (oldRoom, "onexit")
        }
      }
    }
    on ready {
      if ((not GetBoolean(game.pov.parent, "visited")) and HasScript(game.pov.parent, "beforefirstenter")) {
        do (game.pov.parent, "beforefirstenter")
      }
      on ready {
        if (HasScript(game.pov.parent, "beforeenter")) {
          do (game.pov.parent, "beforeenter")
        }
        on ready {
          if (game.gridmap) {
            Grid_CalculateMapCoordinates (game.pov.parent, game.pov)
            Grid_DrawPlayerInRoom (game.pov.parent)
          }
          if (IsDefined("oldRoom")) {
            if (oldRoom <> null and game.changeroom_newline and not game.command_newline) {
              msg ("")
            }
          }
          request (UpdateLocation, CapFirst(GetDisplayName(game.pov.parent)))
          roomFrameExists = false
          if (HasString(game.pov.parent, "picture")) {
            if (LengthOf(game.pov.parent.picture) > 0) {
              roomFrameExists = true
              SetFramePicture (game.pov.parent.picture)
            }
          }
          if (game.clearframe and not roomFrameExists) {
            ClearFramePicture
          }
          if (game.showdescriptiononenter) {
            ShowRoomDescription
          }
          if ((not GetBoolean(game.pov.parent, "visited")) and HasScript(game.pov.parent, "firstenter")) {
            do (game.pov.parent, "firstenter")
          }
          on ready {
            if (HasScript(game.pov.parent, "enter")) {
              do (game.pov.parent, "enter")
            }
          }
          set (game.pov.parent, "visited", true)
        }
      }
    }
  ]]></function>
  <function name="FormatObjectList" parameters="preList, parent, preFinal, postList" type="string"><![CDATA[
    result = ""
    count = 0
    list = RemoveSceneryObjects(GetDirectChildren(parent))
    if (CheckDarkness()) {
      list = RemoveDarkObjects(list)
    }
    listLength = ListCount(list)
    foreach (item, list) {
      if (LengthOf(result) = 0) {
        result = preList + " "
      }
      result = result + GetDisplayNameLink(item, "object")
      if (CanSeeThrough(item)) {
        result = result + FormatObjectList(" (" + item.contentsprefix, item, preFinal, ")")
      }
      count = count + 1
      if (count = listLength - 1) {
        result = result + " " + preFinal + " "
      }
      else if (count < listLength) {
        result = result + ", "
      }
      else {
        result = result + postList
      }
    }
    return (result)
  ]]></function>
  <function name="RemoveSceneryObjects" parameters="list" type="objectlist"><![CDATA[
    result = NewObjectList()
    foreach (obj, list) {
      if (not obj.scenery and obj <> game.pov and obj.visible) {
        list add (result, obj)
      }
    }
    return (result)
  ]]></function>
  <function name="RemoveLookOnlyExits" parameters="list" type="objectlist">
    result = NewObjectList()
    foreach (obj, list) {
      if (not obj.lookonly) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="RemoveDarkObjects" parameters="list" type="objectlist">
    result = NewObjectList()
    foreach (obj, list) {
      if (GetBoolean(obj, "lightsource") or obj.parent = game.pov) {
        list add (result, obj)
      }
    }
    return (result)
  </function>
  <function name="FormatExitList" parameters="preList, list, preFinal, postList" type="string"><![CDATA[
    result = ""
    listLength = ListCount(list)
    if (listLength > 0) {
      count = 0
      result = preList + " "
      foreach (item, list) {
        result = result + GetDisplayNameLink(item, "exit")
        count = count + 1
        if (count = listLength - 1) {
          result = result + " " + preFinal + " "
        }
        else if (count < listLength) {
          result = result + ", "
        }
      }
      result = result + postList
    }
    return (result)
  ]]></function>
  <function name="GetDisplayAlias" parameters="obj" type="string">
    if (HasString(obj, "alias")) {
      result = obj.alias
    }
    else {
      result = obj.name
    }
    return (result)
  </function>
  <function name="GetDisplayName" parameters="obj" type="string">
    return (GetDisplayNameLink(obj, ""))
  </function>
  <function name="GetDisplayNameLink" parameters="obj, type" type="string"><![CDATA[
    verbs = GetDisplayVerbs(obj)
    if (verbs <> null) {
      verbCount = ListCount(verbs)
    }
    else {
      verbCount = 0
    }
    if (type = "exit" and verbCount = 1) {
      if (not game.enablehyperlinks) {
        result = GetDisplayAlias(obj)
      }
      else {
        result = "{exit:" + obj.name + "}"
      }
    }
    else if (type = "") {
      result = GetDisplayAlias(obj)
    }
    else {
      result = "{object:" + obj.name + "}"
    }
    if (not GetBoolean(obj, "usedefaultprefix")) {
      if (obj.prefix = null) {
        prefix = ""
      }
      else {
        prefix = obj.prefix
      }
    }
    else if (type = "exit") {
      prefix = ""
    }
    else {
      prefix = GetDefaultPrefix(obj)
    }
    if (LengthOf(prefix) > 0) {
      prefix = prefix + " "
    }
    result = prefix + result
    if (not GetBoolean(obj, "usedefaultprefix") and HasString(obj, "suffix")) {
      if (LengthOf(obj.suffix) > 0) {
        result = result + " " + obj.suffix
      }
    }
    return (result)
  ]]></function>
  <function name="ObjectLink" parameters="obj" type="string">
    return ("{object:" + obj.name + "}")
  </function>
  <function name="GetListDisplayAlias" parameters="obj" type="string">
    if (HasString(obj, "listalias")) {
      result = obj.listalias
    }
    else {
      result = GetDisplayAlias(obj)
    }
    return (result)
  </function>
  <function name="CheckDarkness" type="boolean"><![CDATA[
    roomCheckDarkness = true
    if (GetBoolean(game.pov.parent, "dark")) {
      if (ListCount(ScopeVisibleLightsource("strong")) > 0) {
        roomCheckDarkness = false
      }
    }
    else {
      roomCheckDarkness = false
    }
    game.pov.parent.darklevel = roomCheckDarkness
    return (roomCheckDarkness)
  ]]></function>
  <function name="EnableTimer" parameters="timer">
    timer.enabled = true
    timer.trigger = game.timeelapsed + timer.interval
  </function>
  <function name="DisableTimer" parameters="timer">
    timer.enabled = false
  </function>
  <function name="SetTimerInterval" parameters="timer, interval">
    timer.interval = interval
  </function>
  <function name="SetTimerScript" parameters="timer, script">
    timer.script = script
  </function>
  <function name="SetTimeout" parameters="interval, script">
    SetTimeoutID (interval, "", script)
  </function>
  <function name="SetTimeoutID" parameters="interval, name, script">
    timername = ""
    if (name = "") {
      timername = GetUniqueElementName("timeout")
    }
    else {
      if (GetTimer(name) = null and GetObject(name) = null) {
        timername = name
      }
      else {
        error ("Error creating timer: There is already an existing object named " + name)
      }
    }
    if (not timername = "") {
      create timer (timername)
      timer = GetTimer(timername)
      SetTimerInterval (timer, interval)
      timer.timeoutscript = script
      SetTimerScript (timer) {
        this.enabled = false
        invoke (this.timeoutscript)
        destroy (this.name)
      }
      EnableTimer (timer)
    }
  </function>
  <function name="Pause" parameters="interval">
    request (Pause, ToString(interval * 1000))
  </function>
  <function name="RunTurnScripts">
    if (IsGameRunning()) {
      if (game.menucallback = null) {
        foreach (turnscript, AllTurnScripts()) {
          if (GetBoolean(turnscript, "enabled")) {
            inscope = false
            if (turnscript.parent = game or turnscript.parent = null) {
              inscope = true
            }
            else {
              if (Contains(turnscript.parent, game.pov)) {
                inscope = true
              }
            }
            if (inscope) {
              do (turnscript, "script")
            }
          }
        }
      }
    }
  </function>
  <function name="EnableTurnScript" parameters="turnscript">
    turnscript.enabled = true
  </function>
  <function name="DisableTurnScript" parameters="turnscript">
    turnscript.enabled = false
  </function>
  <function name="SetTurnScript" parameters="turnscript, script">
    turnscript.script = script
  </function>
  <function name="SetTurnTimeout" parameters="turncount, script">
    SetTurnTimeoutID (turncount, "", script)
  </function>
  <function name="SetTurnTimeoutID" parameters="turncount, name, script"><![CDATA[
    turnscriptname = ""
    if (name = "") {
      turnscriptname = GetUniqueElementName("turnscript")
    }
    else {
      if (GetObject(name) = null and GetTimer(name) = null) {
        turnscriptname = name
      }
      else {
        error ("Error creating turnscript: There is already an existing object named " + name)
      }
    }
    if (not turnscriptname="") {
      create turnscript (turnscriptname)
      turnscript = GetObject(turnscriptname)
      turnscript.turncount = 0
      turnscript.triggerturncount = turncount
      turnscript.timeoutscript = script
      SetTurnScript (turnscript) {
        this.turncount = this.turncount + 1
        if (this.turncount >= this.triggerturncount) {
          this.enabled = false
          invoke (this.timeoutscript)
          destroy (this.name)
        }
      }
      EnableTurnScript (turnscript)
    }
  ]]></function>
  <function name="UpdateStatusAttributes">
    status = AddStatusAttributesForElement("", game, game.statusattributes)
    status = AddStatusAttributesForElement(status, game.pov, game.povstatusattributes)
    status = AddStatusAttributesForElement(status, game.pov, game.pov.statusattributes)
    request (SetStatus, status)
  </function>
  <function name="AddStatusAttributesForElement" parameters="status, element, statusAttributes" type="string"><![CDATA[
    if (statusAttributes <> null) {
      foreach (attr, statusAttributes) {
        if (LengthOf(status) > 0) {
          status = status + "\n"
        }
        status = status + FormatStatusAttribute(attr, GetAttribute(element, attr), StringDictionaryItem(statusAttributes, attr))
      }
    }
    return (status)
  ]]></function>
  <function name="FormatStatusAttribute" parameters="attr, value, format" type="string">
    if (LengthOf(format) = 0) {
      return (CapFirst(attr) + ": " + value)
    }
    else {
      if (TypeOf(value) = "int" or TypeOf(value) = "double") {
        value = ToString(value)
      }
      if (TypeOf(value) = "null") {
        value = ""
      }
      return (Replace(format, "!", value))
    }
  </function>
  <function name="InitStatusAttributes">
    if (game.showscore) {
      game.score = 0
      if (game.statusattributes = null) {
        game.statusattributes = NewStringDictionary()
      }
      dictionary add (game.statusattributes, "score", "Score: !")
    }
    if (game.showhealth) {
      if (game.povstatusattributes = null) {
        game.povstatusattributes = NewStringDictionary()
      }
      dictionary add (game.povstatusattributes, "health", "Health: !%")
    }
  </function>
  <function name="IncreaseScore" parameters="amount">
    if (not HasInt(game, "score")) {
      error ("Score is not configured. To enable score, go to 'game' and tick 'Show score' on the Player tab.")
    }
    game.score = game.score + amount
  </function>
  <function name="DecreaseScore" parameters="amount">
    if (not HasInt(game, "score")) {
      error ("Score is not configured. To enable score, go to 'game' and tick 'Show score' on the Player tab.")
    }
    game.score = game.score - amount
  </function>
  <function name="IncreaseHealth" parameters="amount">
    if (not HasInt(game.pov, "health")) {
      error ("Health is not configured. To enable health, go to 'game' and tick 'Show health' on the Player tab.")
    }
    game.pov.health = game.pov.health + amount
  </function>
  <function name="DecreaseHealth" parameters="amount">
    if (not HasInt(game.pov, "health")) {
      error ("Health is not configured. To enable health, go to 'game' and tick 'Show health' on the Player tab.")
    }
    game.pov.health = game.pov.health - amount
  </function>
  <function name="OutputText" parameters="text">
    data = NewDictionary()
    dictionary add (data, "fulltext", text)
    text = ProcessTextSection(text, data)
    OutputTextRaw (text)
  </function>
  <function name="OutputTextRaw" parameters="text"><![CDATA[
    format = GetCurrentTextFormat("")
    JS.addText ("<span style=\"" + format + "\">" + text + "</span><br/>")
    if (GetString(game, "commandbarformat") <> format) {
      format = format + ";background:" + game.defaultbackground
      game.commandbarformat = format
      JS.setCommandBarStyle (format)
    }
    request (Speak, text)
  ]]></function>
  <function name="OutputTextNoBr" parameters="text">
    data = NewDictionary()
    dictionary add (data, "fulltext", text)
    text = ProcessTextSection(text, data)
    OutputTextRawNoBr (text)
  </function>
  <function name="OutputTextRawNoBr" parameters="text"><![CDATA[
    JS.addText ("<span style=\"" + GetCurrentTextFormat("") + "\">" + text + "</span>")
    request (Speak, text)
  ]]></function>
  <function name="GetCurrentTextFormat" parameters="colour" type="string"><![CDATA[
    style = ""
    if (UIOptionUseGameFont()) {
      font = GetCurrentFontFamily()
    }
    else {
      font = GetUIOption("OverrideFontName")
    }
    if (LengthOf(font) > 0) {
      style = style + "font-family:" + font + ";"
    }
    if (LengthOf(colour) = 0) {
      if (UIOptionUseGameColours()) {
        colour = game.defaultforeground
      }
      else {
        colour = GetUIOption("OverrideForeground")
      }
    }
    if (LengthOf(colour) > 0) {
      style = style + "color:" + colour + ";"
    }
    if (UIOptionUseGameFont()) {
      size = game.defaultfontsize
    }
    else {
      size = ToDouble(GetUIOption("OverrideFontSize"))
    }
    if (size > 0) {
      style = style + "font-size:" + ToString(size) + "pt;"
    }
    return (style)
  ]]></function>
  <function name="GetCurrentLinkTextFormat" type="string">
    return (GetCurrentTextFormat(GetLinkTextColour()))
  </function>
  <function name="UIOptionUseGameFont" type="boolean">
    value = GetUIOption("UseGameFont")
    if (value = null or value = "true") {
      return (true)
    }
    else {
      return (false)
    }
  </function>
  <function name="UIOptionUseGameColours" type="boolean">
    value = GetUIOption("UseGameColours")
    if (value = null or value = "true") {
      return (true)
    }
    else {
      return (false)
    }
  </function>
  <function name="GetLinkTextColour" type="string">
    if (UIOptionUseGameColours()) {
      return (game.defaultlinkforeground)
    }
    else {
      return (GetUIOption("OverrideLinkForeground"))
    }
  </function>
  <function name="ProcessTextSection" parameters="text, data" type="string"><![CDATA[
    containsUnprocessedSection = false
    open = Instr(text, "{")
      if (open > 0) {
        nestCount = 1
        searchStart = open + 1
        finished = false
        while (not finished) {
          nextOpen = Instr(searchStart, text, "{")
            nextClose = Instr(searchStart, text, "}")
          if (nextClose > 0) {
            if (nextOpen > 0 and nextOpen < nextClose) {
              nestCount = nestCount + 1
              searchStart = nextOpen + 1
            }
            else {
              nestCount = nestCount - 1
              searchStart = nextClose + 1
              if (nestCount = 0) {
                close = nextClose
                containsUnprocessedSection = true
                finished = true
              }
            }
          }
          else {
            finished = true
          }
        }
      }
      if (containsUnprocessedSection) {
        section = Mid(text, open + 1, close - open - 1)
        value = ProcessTextCommand(section, data)
        text = Left(text, open - 1) + value + ProcessTextSection(Mid(text, close + 1), data)
      }
      return (text)
  ]]></function>
  <function name="ProcessTextCommand" parameters="section, data" type="string">
    if (StartsWith(section, "if ")) {
      return (ProcessTextCommand_If(section, data))
    }
    else if (StartsWith(section, "object:")) {
      return (ProcessTextCommand_Object(section, data))
    }
    else if (StartsWith(section, "command:")) {
      return (ProcessTextCommand_Command(Mid(section, 9), data))
    }
    else if (StartsWith(section, "page:")) {
      return (ProcessTextCommand_Command(Mid(section, 6), data))
    }
    else if (StartsWith(section, "exit:")) {
      return (ProcessTextCommand_Exit(section, data))
    }
    else if (StartsWith(section, "once:")) {
      return (ProcessTextCommand_Once(section, data))
    }
    else if (StartsWith(section, "random:")) {
      return (ProcessTextCommand_Random(section, data))
    }
    else if (StartsWith(section, "rndalt:")) {
      return (ProcessTextCommand_RandomAlias(section, data))
    }
    else if (StartsWith(section, "img:")) {
      return (ProcessTextCommand_Img(section, data))
    }
    else if (StartsWith(section, "counter:")) {
      return (ProcessTextCommand_Counter(Mid(section, 9), data))
    }
    else if (StartsWith(section, "select:")) {
      return (ProcessTextCommand_Select(section, data))
    }
    else {
      dot = Instr(section, ".")
      if (dot = 0) {
        return ("{" + ProcessTextSection(section, data) + "}")
      }
      else {
        objectname = Left(section, dot - 1)
        attributename = Mid(section, dot + 1)
        object = GetObject(objectname)
        if (object = null) {
          return ("{" + ProcessTextSection(section, data) + "}")
        }
        else {
          if (HasAttribute(object, attributename)) {
            type = TypeOf(object, attributename)
            switch (type) {
              case ("string", "int", "double") {
                return (ToString(GetAttribute(object, attributename)))
              }
              case ("boolean") {
                result = GetAttribute(object, attributename)
                if (result) {
                  return ("true")
                }
                else {
                  return ("false")
                }
              }
              default {
                return ("(" + type + ")")
              }
            }
          }
          else {
            return ("")
          }
        }
      }
    }
  </function>
  <function name="ProcessTextCommand_Object" parameters="section, data" type="string"><![CDATA[
    objectname = Mid(section, 8)
    text = ""
    colon = Instr(objectname, ":")
    if (colon > 0) {
      text = Mid(objectname, colon + 1)
      objectname = Left(objectname, colon - 1)
    }
    object = GetObject(objectname)
    if (object = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      if (LengthOf(text) = 0) {
        text = SafeXML(GetDisplayAlias(object))
      }
      if (game.enablehyperlinks) {
        linkid = ProcessTextCommand_GetNextLinkId()
        colour = ""
        if (HasString(object, "linkcolour") and GetUIOption("UseGameColours") = "true") {
          colour = object.linkcolour
        }
        else {
          colour = GetLinkTextColour()
        }
        style = GetCurrentTextFormat(colour)
        return ("<a id=\"" + linkid + "\" style=\"" + style + "\" class=\"cmdlink elementmenu\" data-elementid=\"" + object.name + "\">" + text + "</a>")
      }
      else {
        return (text)
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_GetNextLinkId" type="string">
    if (not HasInt(game, "lastlinkid")) {
      game.lastlinkid = 0
    }
    game.lastlinkid = game.lastlinkid + 1
    return ("verblink" + game.lastlinkid)
  </function>
  <function name="ProcessTextCommand_Command" parameters="command, data" type="string"><![CDATA[
    text = command
    colon = Instr(command, ":")
    if (colon > 0) {
      text = Mid(command, colon + 1)
      command = Left(command, colon - 1)
    }
    style = GetCurrentLinkTextFormat()
    candidates = NewObjectList()
    foreach (cmd, ScopeCommands()) {
      if (IsRegexMatch(cmd.pattern, command, cmd.name)) {
        list add (candidates, cmd)
      }
    }
    elementid = ""
    if (ListCount(candidates) = 1) {
      cmd = ObjectListItem(candidates, 0)
      elementid = cmd.name
    }
    linkid = ProcessTextCommand_GetNextLinkId()
    dataattrs = ""
    if (game.deactivatecommandlinks) {
      dataattrs = dataattrs + "data-deactivateonclick=\"true\" "
    }
    dataattrs = dataattrs + "data-command=\"" + command + "\""
    return ("<a id=\"" + linkid + "\" style=\"" + style + "\" class=\"cmdlink commandlink\" data-elementid=\"" + elementid + "\" " + dataattrs + ">" + ProcessTextSection(text, data) + "</a>")
  ]]></function>
  <function name="ProcessTextCommand_Exit" parameters="section, data" type="string"><![CDATA[
    exitname = Mid(section, 6)
    exit = GetObject(exitname)
    if (exit = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      verbs = GetDisplayVerbs(exit)
      alias = GetDisplayAlias(exit)
      command = LCase(StringListItem(verbs, 0)) + " " + alias
      style = GetCurrentLinkTextFormat()
      return ("<a style=\"" + style + "\" class=\"cmdlink exitlink\" data-elementid=\"" + exit.name + "\" data-command=\"" + command + "\">" + alias + "</a>")
    }
  ]]></function>
  <function name="ProcessTextCommand_Once" parameters="section, data" type="string">
    if (not HasAttribute(game, "textprocessor_seen")) {
      game.textprocessor_seen = NewDictionary()
    }
    fulltext = StringDictionaryItem(data, "fulltext")
    if (not DictionaryContains(game.textprocessor_seen, fulltext)) {
      onceSectionsInThisText = NewList()
      dictionary add (game.textprocessor_seen, fulltext, onceSectionsInThisText)
    }
    else {
      onceSectionsInThisText = DictionaryItem(game.textprocessor_seen, fulltext)
    }
    if (not ListContains(onceSectionsInThisText, section)) {
      list add (onceSectionsInThisText, section)
      return (ProcessTextSection(Mid(section, 6), data))
    }
    else {
      return ("")
    }
  </function>
  <function name="ProcessTextCommand_Random" parameters="section, data" type="string">
    elements = Mid(section, 8)
    elementslist = Split(elements, ":")
    index = GetRandomInt(0, ListCount(elementslist) - 1)
    return (ProcessTextSection(ListItem(elementslist, index), data))
  </function>
  <function name="ProcessTextCommand_RandomAlias" parameters="section, data" type="string"><![CDATA[
    objectname = Mid(section, 8)
    object = GetObject(objectname)
    if (object = null) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      count = ListCount(object.alt)
      if (count > 0) {
        return (ListItem(object.alt, GetRandomInt(0, count - 1)))
      }
      else {
        return ("")
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_If" parameters="section, data" type="string"><![CDATA[
    command = Mid(section, 4)
    colon = Instr(command, ":")
    if (colon = 0) {
      return ("{if " + command + "}")
    }
    else {
      text = Mid(command, colon + 1)
      condition = Left(command, colon - 1)
      operator = Instr(condition, "<=")
      if (operator <> 0) {
        operatorlength = 2
      }
      if (operator = 0) {
        operator = Instr(condition, ">=")
        if (operator <> 0) {
          operatorlength = 2
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "<>")
        if (operator <> 0) {
          operatorlength = 2
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "<")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, ">")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "=")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        checkfor = true
        if (StartsWith(condition, "not ")) {
          checkfor = false
          condition = Mid(condition, 5)
        }
        dot = Instr(condition, ".")
        if (dot = 0) {
          result = GetBoolean(game, condition)
        }
        else {
          objectname = Left(condition, dot - 1)
          attributename = Mid(condition, dot + 1)
          object = GetObject(objectname)
          if (object = null) {
            result = false
          }
          else {
            result = GetBoolean(object, attributename)
          }
        }
        if (result = checkfor) {
          return (ProcessTextSection(text, data))
        }
        else {
          return ("")
        }
      }
      else {
        lhs = Left(condition, operator - 1)
        rhs = Mid(condition, operator + operatorlength)
        op = Mid(condition, operator, operatorlength)
        dot = Instr(lhs, ".")
        if (dot = 0) {
          objectname = ""
          attributename = ""
          if (HasInt(game, lhs)) {
            objectname = "game"
            attributename = lhs
          }
          else {
            return ("{if " + command + "}")
          }
        }
        else {
          objectname = Left(lhs, dot - 1)
          attributename = Mid(lhs, dot + 1)
        }
        object = GetObject(objectname)
        if (object = null) {
          return ("{if " + command + "}")
        }
        else {
          value = GetAttribute(object, attributename)
          if (op = "=") {
            if (ToString(value) = rhs) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<>") {
            if (not ToString(value) = rhs) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = ">") {
            if (ToDouble(ToString(value)) > ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<") {
            if (ToDouble(ToString(value)) < ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = ">=") {
            if (ToDouble(ToString(value)) >= ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<=") {
            if (ToDouble(ToString(value)) <= ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
        }
      }
    }
  ]]></function>
  <function name="ProcessTextCommand_Img" parameters="section, data" type="string"><![CDATA[
    filename = Mid(section, 5)
    return ("<img src=\"" + GetFileURL(filename) + "\" />")
  ]]></function>
  <function name="ProcessTextCommand_Counter" parameters="section, data" type="string">
    if (HasAttribute(game, section)) {
      return (ToString(GetAttribute(game, section)))
    }
    else {
      return ("0")
    }
  </function>
  <function name="ProcessTextCommand_Select" parameters="section, data" type="string"><![CDATA[
    elements = Mid(section, 8)
    elementslist = Split(elements, ":")
    objectandatt = StringListItem (elementslist, 0)
    list remove (elementslist, objectandatt)
    objectandattlist = Split(objectandatt, ".")
    if (not ListCount (objectandattlist) = 2) {
      return ("{" + ProcessTextSection(section, data) + "}")
    }
    else {
      object = GetObject(StringListItem(objectandattlist, 0))
      if (object = null) {
        return ("{" + ProcessTextSection(section, data) + "}")
      }
      else if (not HasInt (object, StringListItem(objectandattlist, 1))) {
        return ("{" + ProcessTextSection(section, data) + "}")
      }
      else {
        index = GetInt(object, StringListItem(objectandattlist, 1))
        if ((0 > index) or (index >= Listcount(elementslist))) {
          return ("{" + ProcessTextSection(section, data) + "}")
        }
        else {
          return (ProcessTextSection(ListItem(elementslist, index), data))
        }
      }
    }
  ]]></function>
  <function name="SetFramePicture" parameters="filename"><![CDATA[
    request (SetPanelContents, "<img src=\"" + GetFileURL(filename) + "\" onload=\"setPanelHeight()\"/>")
    game.panelcontents = filename
  ]]></function>
  <function name="ClearFramePicture">
    request (SetPanelContents, "")
    game.panelcontents = null
  </function>
  <function name="ClearScreen">
    request (ClearScreen, "")
  </function>
  <function name="SetForegroundColour" parameters="colour">
    request (Foreground, colour)
    game.defaultforeground = colour
  </function>
  <function name="SetBackgroundColour" parameters="colour">
    request (Background, colour)
    game.defaultbackground = colour
  </function>
  <function name="SetFontName" parameters="font">
    game.defaultfont = font
    game.defaultwebfont = ""
  </function>
  <function name="SetWebFontName" parameters="font">
    AddExternalStylesheet ("http://fonts.googleapis.com/css?family=" + Replace(font, " ", "+"))
    game.defaultwebfont = font
  </function>
  <function name="AddExternalStylesheet" parameters="stylesheet">
    if (game.externalstylesheets = null) {
      game.externalstylesheets = NewStringList()
    }
    if (not ListContains(game.externalstylesheets, stylesheet)) {
      list add (game.externalstylesheets, stylesheet)
      JS.addExternalStylesheet (stylesheet)
    }
  </function>
  <function name="SetFontSize" parameters="size">
    game.defaultfontsize = size
  </function>
  <function name="PrintCentered" parameters="text">
    SetAlignment ("center")
    msg (text)
    SetAlignment ("left")
  </function>
  <function name="ShowYouTube" parameters="id">
    JS.AddYouTube (id)
  </function>
  <function name="ShowVimeo" parameters="id">
    JS.AddVimeo (id)
  </function>
  <function name="WaitForKeyPress">
    request (Wait, "")
  </function>
  <function name="DisplayHttpLink" parameters="text, url, https"><![CDATA[
    pos = Instr(url, "://")
    if (pos > 0) {
      url = Mid(url, pos + 3)
    }
    if (https) {
      url = "https://" + url
    }
    else {
      url = "http://" + url
    }
    msg ("<a style=\"" + GetCurrentLinkTextFormat() + "\" href=\"" + url + "\">" + text + "</a>")
  ]]></function>
  <function name="DisplayMailtoLink" parameters="text, url"><![CDATA[
    if (Instr(url, "mailto:") = 0) {
      url = "mailto:" + url
    }
    msg ("<a style=\"" + GetCurrentLinkTextFormat() + "\" href=\"" + url + "\">" + text + "</a>")
  ]]></function>
  <function name="CommandLink" parameters="cmd, text" type="string">
    return ("{command:" + cmd + ":" + text + "}")
  </function>
  <function name="Log" parameters="text">
    request (Log, text)
  </function>
  <function name="SetBackgroundImage" parameters="filename">
    JS.SetBackgroundImage (GetFileURL(filename))
    game.backgroundimage = filename
  </function>
  <function name="SetBackgroundOpacity" parameters="opacity">
    JS.SetBackgroundOpacity (opacity)
    game.backgroundopacity = opacity
    game.setbackgroundopacity = true
  </function>
  <function name="DisplayList" parameters="list, numbers"><![CDATA[
    if (numbers) {
      result = "<ol>"
    }
    else {
      result = "<ul>"
    }
    foreach (item, list) {
      result = result + "<li>" + item + "</li>"
    }
    if (numbers) {
      result = result + "</ol>"
    }
    else {
      result = result + "</ul>"
    }
    msg (result)
  ]]></function>
  <function name="SetAlignment" parameters="align">
    JS.createNewDiv (align)
  </function>
  <function name="GetCurrentFontFamily" type="string">
    if (game.defaultwebfont = null) {
      return (game.defaultfont)
    }
    else {
      if (game.defaultwebfont = "") {
        return (game.defaultfont)
      }
      else {
        return ("'" + game.defaultwebfont + "', " + game.defaultfont)
      }
    }
  </function>
  <function name="Grid_SetScale" parameters="scale">
    JS.Grid_SetScale (scale)
  </function>
  <function name="Grid_CalculateMapCoordinates" parameters="room, playerobject"><![CDATA[
    if (room.parent <> null) {
      if (room.grid_parent_offset_auto) {
        room.grid_parent_offset_x = (room.parent.grid_width - room.grid_width) /2.0
        room.grid_parent_offset_y = (room.parent.grid_length - room.grid_length) /2.0
      }
      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") - room.grid_parent_offset_x)
      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") - room.grid_parent_offset_y)
      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
      room.parent.grid_render = true
      Grid_CalculateMapCoordinates (room.parent, playerobject)
    }
    // go through all exits in room, set x,y co-ordinates for the rooms they point to
    foreach (exit, AllExits()) {
      if (exit.parent = room and not GetBoolean(exit, "lookonly")) {
        if (DoesInherit(exit, "northdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width/2.0 + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.to.grid_width/2.0)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.to.grid_length) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "eastdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length/2.0 + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.to.grid_length/2.0)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y"))
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width/2.0 + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.to.grid_width/2.0)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "westdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length/2.0 + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.to.grid_width) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.to.grid_length/2.0)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y"))
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "northwestdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.to.grid_width) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.to.grid_length) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "northeastdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.to.grid_length) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") - exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southwestdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", (Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.to.grid_width) - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") - exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "southeastdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_x", Grid_GetGridCoordinateForPlayer(playerobject, exit, "x") + exit.grid_length)
          Grid_SetGridCoordinateForPlayer (playerobject, exit, "end_y", Grid_GetGridCoordinateForPlayer(playerobject, exit, "y") + exit.grid_length)
          exit.grid_render = true
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "updirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z") + exit.grid_length)
          exit.grid_render = false
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "downdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z") - exit.grid_length)
          exit.grid_render = false
          exit.to.grid_render = true
        }
        else if (DoesInherit(exit, "indirection") or DoesInherit(exit, "outdirection")) {
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "x", Grid_GetGridCoordinateForPlayer(playerobject, room, "x") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "y", Grid_GetGridCoordinateForPlayer(playerobject, room, "y") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)
          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, "z", Grid_GetGridCoordinateForPlayer(playerobject, room, "z"))
          exit.grid_render = false
          exit.to.grid_render = true
        }
      }
    }
  ]]></function>
  <function name="Grid_DrawPlayerInRoom" parameters="room">
    if (room.grid_render) {
      Grid_DrawRoom (room, false, game.pov)
      player_x = Grid_GetGridCoordinateForPlayer(game.pov, room, "x") + room.grid_width/2.0
      player_y = Grid_GetGridCoordinateForPlayer(game.pov, room, "y") + room.grid_length/2.0
      player_z = Grid_GetGridCoordinateForPlayer(game.pov, room, "z")
      // Grid_DrawPlayer(x, y, z, radius, border, borderWidth, fill)
      JS.Grid_DrawPlayer (player_x, player_y, player_z, 5, "black", 2, "yellow")
    }
  </function>
  <function name="Grid_DrawRoom" parameters="room, redraw, playerobject"><![CDATA[
    if (room.grid_render) {
      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, "grid_isdrawn")) {
        if (room.parent <> null) {
          Grid_DrawRoom (room.parent, redraw, playerobject)
        }
        JS.Grid_DrawBox (Grid_GetGridCoordinateForPlayer(game.pov, room, "x"), Grid_GetGridCoordinateForPlayer(game.pov, room, "y"), Grid_GetGridCoordinateForPlayer(game.pov, room, "z"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)
        if (LengthOf(room.grid_label) > 0) {
          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, "x") + room.grid_width/2.0
          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, "y") + room.grid_length/2.0) - 0.5
          // Grid_DrawLabel(x, y, z, text)
          JS.Grid_DrawLabel (label_x, label_y, room.grid_z, room.grid_label)
        }
        foreach (exit, AllExits()) {
          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {
            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, "x"), Grid_GetGridCoordinateForPlayer(game.pov, exit, "y"), Grid_GetGridCoordinateForPlayer(game.pov, exit, "end_x"), Grid_GetGridCoordinateForPlayer(game.pov, exit, "end_y"), "black", 1)
          }
        }
        Grid_SetRoomBooleanForPlayer (playerobject, room, "grid_isdrawn", true)
      }
    }
  ]]></function>
  <function name="Grid_ShowCustomLayer" parameters="visible">
    if (visible) {
      JS.Grid_ShowCustomLayer (true)
    }
    else {
      JS.Grid_ShowCustomLayer (false)
    }
  </function>
  <function name="Grid_ClearCustomLayer">
    JS.Grid_ClearCustomLayer ()
  </function>
  <function name="Grid_DrawLine" parameters="x1, y1, x2, y2, border, borderWidth">
    JS.Grid_DrawLine (x1, y1, x2, y2, border, borderWidth)
  </function>
  <function name="Grid_DrawArrow" parameters="id, x1, y1, x2, y2, border, borderWidth">
    JS.Grid_DrawArrow (id, x1, y1, x2, y2, border, borderWidth)
  </function>
  <function name="Grid_DrawGridLines" parameters="x1, y1, x2, y2, border">
    JS.Grid_DrawGridLines (x1, y1, x2, y2, border)
  </function>
  <function name="Grid_SetCentre" parameters="x, y">
    JS.Grid_SetCentre (x, y)
  </function>
  <function name="Grid_DrawSquare" parameters="id, x, y, width, height, text, fill">
    JS.Grid_DrawSquare (id, x, y, width, height, text, fill)
  </function>
  <function name="Grid_LoadSvg" parameters="data, id">
    JS.Grid_LoadSvg (data, id)
  </function>
  <function name="Grid_DrawSvg" parameters="id, symbolid, x, y, width, height">
    JS.Grid_DrawSvg (id, symbolid, x, y, width, height)
  </function>
  <function name="Grid_AddNewShapePoint" parameters="x, y">
    JS.Grid_AddNewShapePoint (x, y)
  </function>
  <function name="Grid_DrawShape" parameters="id, border, fill, opacity">
    JS.Grid_DrawShape (id, border, fill, opacity)
  </function>
  <function name="JS_GridSquareClick" parameters="parameterstring">
    parameters = Split(parameterstring, ";")
    x = ToInt(StringListItem(parameters, 0))
    y = ToInt(StringListItem(parameters, 1))
    GridSquareClick (x, y)
  </function>
  <function name="GridSquareClick" parameters="x, y">
    // Copy this function into your game to handle grid square clicks
  </function>
  <function name="Grid_Redraw">
    foreach (object, AllObjects()) {
      if (Grid_GetRoomBooleanForPlayer(game.pov, object, "grid_isdrawn")) {
        Grid_DrawRoom (object, true, game.pov)
      }
    }
  </function>
  <function name="Grid_SetGridCoordinateForPlayer" parameters="playerobject, room, coordinate, value">
    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)
    if (DictionaryContains(coordinates, coordinate)) {
      dictionary remove (coordinates, coordinate)
    }
    dictionary add (coordinates, coordinate, value * 1.0)
  </function>
  <function name="Grid_GetGridCoordinateForPlayer" parameters="playerobject, room, coordinate" type="double">
    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)
    return (DictionaryItem(coordinates, coordinate))
  </function>
  <function name="Grid_SetRoomBooleanForPlayer" parameters="playerobject, room, coordinate, value">
    datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)
    if (DictionaryContains(datadictionary, coordinate)) {
      dictionary remove (datadictionary, coordinate)
    }
    dictionary add (datadictionary, coordinate, value)
  </function>
  <function name="Grid_GetRoomBooleanForPlayer" parameters="playerobject, room, attribute" type="boolean">
    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)
    if (not DictionaryContains(coordinatedata, room.name)) {
      return (false)
    }
    else {
      datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)
      if (DictionaryContains(datadictionary, attribute)) {
        return (DictionaryItem(datadictionary, attribute))
      }
      else {
        return (false)
      }
    }
  </function>
  <function name="Grid_GetPlayerCoordinateDictionary" parameters="playerobject" type="dictionary">
    if (HasAttribute(playerobject, "grid_coordinates_delegate")) {
      return (Grid_GetPlayerCoordinateDictionary(playerobject.grid_coordinates_delegate))
    }
    else {
      if (not HasAttribute(playerobject, "grid_coordinates")) {
        playerobject.grid_coordinates = NewDictionary()
        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, "x", 0)
        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, "y", 0)
        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, "z", 0)
        playerobject.parent.grid_render = true
        Grid_CalculateMapCoordinates (playerobject.parent, playerobject)
      }
      return (playerobject.grid_coordinates)
    }
  </function>
  <function name="Grid_GetPlayerCoordinatesForRoom" parameters="playerobject, room" type="dictionary">
    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)
    if (not DictionaryContains(coordinatedata, room.name)) {
      dictionary add (coordinatedata, room.name, NewDictionary())
    }
    return (DictionaryItem(coordinatedata, room.name))
  </function>
  <function name="MergePOVCoordinates"><![CDATA[
    coordinateowner = GetCoordinateOwner(game.pov)
    foreach (obj, GetDirectChildren(game.pov.parent)) {
      if (obj <> game.pov and HasAttribute(obj, "grid_coordinates")) {
        objcoordinateowner = GetCoordinateOwner(obj)
        if (coordinateowner <> objcoordinateowner) {
          MapPOVCoordinates (objcoordinateowner, coordinateowner)
        }
      }
    }
  ]]></function>
  <function name="GetCoordinateOwner" parameters="playerobject" type="object">
    if (HasAttribute(playerobject, "grid_coordinates_delegate")) {
      return (GetCoordinateOwner(playerobject.grid_coordinates_delegate))
    }
    else {
      return (playerobject)
    }
  </function>
  <function name="MapPOVCoordinates" parameters="source, target">
    sourcecoordinates = Grid_GetPlayerCoordinateDictionary(source)
    targetcoordinates = Grid_GetPlayerCoordinateDictionary(target)
    xoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, "x") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, "x")
    yoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, "y") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, "y")
    zoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, "z") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, "z")
    foreach (roomname, sourcecoordinates) {
      coordinatedata = DictionaryItem(sourcecoordinates, roomname)
      if (not DictionaryContains(targetcoordinates, roomname)) {
        newroomdata = NewDictionary()
        dictionary add (targetcoordinates, roomname, newroomdata)
        MapPOVCoordinate (coordinatedata, newroomdata, "x", xoffset)
        MapPOVCoordinate (coordinatedata, newroomdata, "y", yoffset)
        MapPOVCoordinate (coordinatedata, newroomdata, "z", zoffset)
        MapPOVCoordinate (coordinatedata, newroomdata, "end_x", xoffset)
        MapPOVCoordinate (coordinatedata, newroomdata, "end_y", yoffset)
      }
      else {
        newroomdata = DictionaryItem(targetcoordinates, roomname)
      }
      if (DictionaryContains(coordinatedata, "grid_isdrawn")) {
        if (DictionaryContains(newroomdata, "grid_isdrawn")) {
          dictionary remove (newroomdata, "grid_isdrawn")
        }
        dictionary add (newroomdata, "grid_isdrawn", DictionaryItem(coordinatedata, "grid_isdrawn"))
      }
    }
    source.grid_coordinates_delegate = target
    Grid_Redraw
    Grid_DrawPlayerInRoom (game.pov.parent)
  </function>
  <function name="MapPOVCoordinate" parameters="sourcedata, targetdata, name, offset">
    if (DictionaryContains(sourcedata, name)) {
      value = DictionaryItem(sourcedata, name)
      dictionary add (targetdata, name, value + offset)
    }
  </function>
  <function name="DiceRoll" parameters="dicetype" type="int">
    dpos = Instr(dicetype, "d")
    if (dpos = 0) {
      error ("Invalid dice type: " + dicetype)
    }
    else {
      number_string = Left(dicetype, dpos - 1)
      sides_string = Mid(dicetype, dpos + 1)
      if (not (IsNumeric(number_string) and IsNumeric(sides_string))) {
        error ("Invalid dice type: " + dicetype)
      }
      else {
        number = ToInt(number_string)
        sides = ToInt(sides_string)
        total = 0
        for (i, 1, number) {
          total = total + GetRandomInt(1, sides)
        }
        return (total)
      }
    }
  </function>
  <function name="TextFX_Typewriter" parameters="text, speed">
    TextFX_Typewriter_Internal (text, speed, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)
  </function>
  <function name="TextFX_Typewriter_Internal" parameters="text, speed, font, color, size">
    JS.TextFX.Typewriter (text, speed, font, color, size)
  </function>
  <function name="TextFX_Unscramble" parameters="text, speed, reveal">
    TextFX_Unscramble_Internal (text, speed, reveal, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)
  </function>
  <function name="TextFX_Unscramble_Internal" parameters="text, speed, reveal, font, color, size">
    JS.TextFX.Unscramble (text, speed, reveal, font, color, size)
  </function>
  <function name="InitInterface"><![CDATA[
    if (game.setcustomwidth) {
      JS.setGameWidth (game.customwidth)
    }
    if (not game.showborder) {
      JS.hideBorder ()
    }
    if (game.setcustompadding) {
      JS.setGamePadding (game.custompaddingtop, game.custompaddingbottom, game.custompaddingleft, game.custompaddingright)
    }
    if (game.externalstylesheets <> null) {
      foreach (stylesheet, game.externalstylesheets) {
        JS.addExternalStylesheet (stylesheet)
      }
    }
    if (game.setbackgroundopacity) {
      SetBackgroundOpacity (game.backgroundopacity)
    }
    request (Background, game.defaultbackground)
    request (Foreground, game.defaultforeground)
    request (LinkForeground, game.defaultlinkforeground)
    if (LengthOf(game.backgroundimage) > 0) {
      SetBackgroundImage (game.backgroundimage)
    }
    request (SetCompassDirections, Join(game.compassdirections, ";"))
    request (SetInterfaceString, "InventoryLabel=Inventory")
    request (SetInterfaceString, "StatusLabel=Status")
    request (SetInterfaceString, "PlacesObjectsLabel=Places and Objects")
    request (SetInterfaceString, "CompassLabel=Compass")
    request (SetInterfaceString, "InButtonLabel=in")
    request (SetInterfaceString, "OutButtonLabel=out")
    request (SetInterfaceString, "EmptyListLabel=(empty)")
    request (SetInterfaceString, "NothingSelectedLabel=(nothing selected)")
    request (SetInterfaceString, "TypeHereLabel=Type here...")
    request (SetInterfaceString, "ContinueLabel=Continue...")
    JS.SetMenuBackground (game.menubackground)
    JS.SetMenuForeground (game.menuforeground)
    JS.SetMenuHoverBackground (game.menuhoverbackground)
    JS.SetMenuHoverForeground (game.menuhoverforeground)
    JS.SetMenuFontName (game.menufont)
    JS.SetMenuFontSize (game.menufontsize + "pt")
    if (not game.underlinehyperlinks) {
      JS.TurnOffHyperlinksUnderline ()
    }
    if (game.showpanes) {
      request (Show, "Panes")
    }
    else {
      request (Hide, "Panes")
    }
    if (game.showcommandbar) {
      request (Show, "Command")
    }
    else {
      request (Hide, "Command")
    }
    if (game.showlocation) {
      request (Show, "Location")
    }
    else {
      request (Hide, "Location")
    }
    if (HasString(game, "panelcontents")) {
      SetFramePicture (game.panelcontents)
    }
    if (game.gridmap) {
      JS.ShowGrid (game.mapsize)
      Grid_SetScale (game.mapscale)
      if (game.pov <> null) {
        if (game.pov.parent <> null) {
          Grid_Redraw
          Grid_DrawPlayerInRoom (game.pov.parent)
        }
      }
    }
    InitUserInterface
  ]]></function>
  <function name="InitUserInterface">
  </function>
  <function name="StartGame"><![CDATA[
    StartTurnOutputSection
    if (game.showtitle) {
      JS.StartOutputSection ("title")
      PrintCentered ("<span style=\"font-size:260%\">" + game.gamename + "</span>")
      if (game.subtitle <> null) {
        if (LengthOf(game.subtitle) > 0) {
          PrintCentered ("<span style=\"font-size:130%\">" + game.subtitle + "</span>")
        }
      }
      if (game.author <> null) {
        if (LengthOf(game.author) > 0) {
          PrintCentered ("<br/><span style=\"font-size:140%\">by " + game.author + "</span>")
        }
      }
      msg ("<div style=\"margin-top:20px\"></div>")
      JS.EndOutputSection ("title")
    }
    if (game.pov = null) {
      playerObject = GetObject("player")
      if (playerObject = null) {
        if (ListCount(AllObjects()) > 0) {
          firstRoom = ObjectListItem(AllObjects(), 0)
        }
        else {
          create ("room")
          firstRoom = room
        }
        create ("player")
        player.parent = firstRoom
      }
      game.pov = player
    }
    else {
      InitPOV (null, game.pov)
    }
    InitStatusAttributes
    UpdateStatusAttributes
    InitVerbsList
    if (HasScript(game, "start")) {
      do (game, "start")
    }
    UpdateStatusAttributes
    UpdateObjectLinks
    on ready {
      if (game.gridmap) {
        Grid_DrawPlayerInRoom (game.pov.parent)
      }
      if (game.displayroomdescriptiononstart) {
        OnEnterRoom (null)
      }
      UpdateStatusAttributes
      UpdateObjectLinks
    }
  ]]></function>
  <function name="RandomChance" parameters="percentile" type="boolean"><![CDATA[
    return (GetRandomInt(1,100) <= percentile)
  ]]></function>
  <function name="SetObjectFlagOn" parameters="object, flag">
    set (object, flag, true)
  </function>
  <function name="SetObjectFlagOff" parameters="object, flag">
    set (object, flag, false)
  </function>
  <function name="IncreaseObjectCounter" parameters="object, counter">
    if (not HasInt(object, counter)) {
      set (object, counter, 0)
    }
    set (object, counter, GetInt(object, counter) + 1)
  </function>
  <function name="DecreaseObjectCounter" parameters="object, counter">
    if (not HasInt(object, counter)) {
      set (object, counter, 0)
    }
    set (object, counter, GetInt(object, counter) - 1)
  </function>
  <function name="IsSwitchedOn" parameters="object" type="boolean">
    return (GetBoolean(object, "switchedon"))
  </function>
  <function name="AddToInventory" parameters="object">
    object.parent = game.pov
  </function>
  <function name="MoveObject" parameters="object, parent">
    object.parent = parent
  </function>
  <function name="MoveObjectHere" parameters="object">
    object.parent = game.pov.parent
  </function>
  <function name="RemoveObject" parameters="object">
    object.parent = null
  </function>
  <function name="MakeObjectVisible" parameters="object">
    object.visible = true
  </function>
  <function name="MakeObjectInvisible" parameters="object">
    object.visible = false
  </function>
  <function name="MakeExitVisible" parameters="object">
    object.visible = true
  </function>
  <function name="MakeExitInvisible" parameters="object">
    object.visible = false
  </function>
  <function name="HelperOpenObject" parameters="object">
    object.isopen = true
  </function>
  <function name="HelperCloseObject" parameters="object">
    object.isopen = false
  </function>
  <function name="CloneObject" parameters="object" type="object">
    newobject = Clone(object)
    if (not HasString(object, "alias")) {
      newobject.alias = object.name
    }
    return (newobject)
  </function>
  <function name="CloneObjectAndMove" parameters="object, newparent" type="object">
    newobject = CloneObject(object)
    newobject.parent = newparent
    return (newobject)
  </function>
  <function name="LockExit" parameters="exit">
    exit.locked = true
  </function>
  <function name="UnlockExit" parameters="exit">
    exit.locked = false
  </function>
  <function name="SwitchOn" parameters="object">
    object.switchedon = true
  </function>
  <function name="SwitchOff" parameters="object">
    object.switchedon = false
  </function>
  <function name="SetDark" parameters="object">
    object.dark = true
  </function>
  <function name="SetLight" parameters="object">
    object.dark = false
  </function>
  <function name="SetObjectLightstrength" parameters="object, strength">
    if (LengthOf(strength) = 0) {
      object.lightsource = false
    }
    else {
      object.lightsource = true
    }
    object.lightstrength = strength
  </function>
  <function name="SetExitLightstrength" parameters="exit, strength">
    if (LengthOf(strength) = 0) {
      exit.lightsource = false
    }
    else {
      exit.lightsource = true
    }
    exit.lightstrength = strength
  </function>
  <function name="ChangePOV" parameters="object"><![CDATA[
    if (game.pov <> object) {
      game.pov = object
      if (game.gridmap) {
        JS.Grid_ClearAllLayers ()
        Grid_Redraw
      }
      OnEnterRoom (null)
    }
  ]]></function>
  <function name="InitPOV" parameters="oldPOV, newPOV"><![CDATA[
    if (oldPOV <> null) {
      oldPOV.alias = oldPOV.external_alias
      oldPOV.alt = oldPOV.external_alt
      oldPOV.look = oldPOV.external_look
      oldPOV.gender = oldPOV.external_gender
      oldPOV.article = oldPOV.external_article
    }
    newPOV.external_alias = newPOV.alias
    newPOV.external_alt = newPOV.alt
    newPOV.external_look = newPOV.look
    newPOV.external_gender = newPOV.gender
    newPOV.external_article = newPOV.article
    if (not GetBoolean(newPOV, "pov_used")) {
      if (newPOV.alt = null) {
        newPOV.pov_alt = newPOV.pov_alt
      }
      else {
        newPOV.pov_alt = ListCombine(newPOV.alt, newPOV.pov_alt)
      }
      if (newPOV.alias <> null) {
        list add (newPOV.pov_alt, newPOV.alias)
      }
      if (game.showhealth) {
        newPOV.health = 100
        newPOV.changedhealth => {
          if (this.health > 100) {
            this.health = 100
          }
          else if (this.health <= 0) {
            this.health = 0
            if (HasScript(game, "onhealthzero")) {
              do (game, "onhealthzero")
            }
          }
        }
      }
      newPOV.pov_used = true
    }
    newPOV.alias = newPOV.pov_alias
    newPOV.alt = newPOV.pov_alt
    newPOV.look = newPOV.pov_look
    newPOV.gender = newPOV.pov_gender
    newPOV.article = newPOV.pov_article
  ]]></function>
  <function name="InitVerbsList">
    game.verbattributes = NewStringList()
    game.verbattributeslookup = NewObjectDictionary()
    foreach (cmd, AllCommands()) {
      if (HasString(cmd, "property")) {
        list add (game.verbattributes, cmd.property)
        dictionary add (game.verbattributeslookup, cmd.property, cmd)
      }
    }
  </function>
  <function name="GetDisplayVerbs" parameters="object" type="stringlist">
    if (Contains(game.pov, object)) {
      baselist = object.inventoryverbs
    }
    else {
      baselist = object.displayverbs
    }
    if (not game.autodisplayverbs or GetBoolean(object, "usestandardverblist")) {
      return (baselist)
    }
    else {
      if (HasAttribute(object, "generatedverbslist")) {
        verbs = object.generatedverbslist
      }
      else {
        verbs = NewStringList()
        foreach (attr, GetAttributeNames(object, false)) {
          if (ListContains(game.verbattributes, attr)) {
            cmd = ObjectDictionaryItem(game.verbattributeslookup, attr)
            if (HasString(cmd, "displayverb")) {
              displayverb = CapFirst(cmd.displayverb)
            }
            else {
              displayverb = CapFirst(attr)
            }
            if (not ListContains(baselist, displayverb)) {
              list add (verbs, displayverb)
            }
          }
        }
        object.generatedverbslist = verbs
      }
      if (GetBoolean(object, "useindividualverblist")) {
        return (verbs)
      }
      else {
        return (ListCombine(baselist, verbs))
      }
    }
  </function>
  <function name="ShowMenu" parameters="caption, options, allowCancel, callback"><![CDATA[
    outputsection = StartNewOutputSection()
    msg (caption)
    count = 0
    game.menuoptionskeys = NewStringList()
    foreach (option, options) {
      list add (game.menuoptionskeys, option)
      count = count + 1
      if (TypeOf(options) = "stringlist") {
        optionText = option
      }
      else {
        optionText = StringDictionaryItem(options, option)
      }
      msg (count + ": <a class=\"cmdlink\" style=\"" + GetCurrentLinkTextFormat() + "\" onclick=\"ASLEvent('ShowMenuResponse','" + option + "')\">" + optionText + "</a>")
    }
    EndOutputSection (outputsection)
    game.menuoptions = options
    game.menuallowcancel = allowCancel
    game.menucallback = callback
    game.menuoutputsection = outputsection
  ]]></function>
  <function name="ShowMenuResponse" parameters="option">
    if (game.menucallback = null) {
      error ("Unexpected menu response")
    }
    else {
      parameters = NewStringDictionary()
      dictionary add (parameters, "result", option)
      script = game.menucallback
      ClearMenu
      invoke (script, parameters)
    }
  </function>
  <function name="HandleMenuTextResponse" parameters="input" type="boolean"><![CDATA[
    handled = false
    if (IsInt(input)) {
      number = ToInt(input)
      if (number > 0 and number <= ListCount(game.menuoptionskeys)) {
        handled = true
        ShowMenuResponse (StringListItem(game.menuoptionskeys, number - 1))
      }
    }
    return (handled)
  ]]></function>
  <function name="ClearMenu">
    HideOutputSection (game.menuoutputsection)
    game.menuoutputsection = null
    game.menuoptions = null
    game.menucallback = null
  </function>
  <function name="StartNewOutputSection" type="string">
    if (not HasInt(game, "lastoutputsection")) {
      game.lastoutputsection = 0
    }
    game.lastoutputsection = game.lastoutputsection + 1
    name = "section" + game.lastoutputsection
    JS.StartOutputSection (name)
    return (name)
  </function>
  <function name="EndOutputSection" parameters="name">
    JS.EndOutputSection (name)
  </function>
  <function name="HideOutputSection" parameters="name">
    JS.HideOutputSection (name)
  </function>
  <function name="StartTurnOutputSection">
    if (HasString(game, "currentturnoutputsection")) {
      game.lastturnoutputsection = game.currentturnoutputsection
      EndOutputSection (game.currentturnoutputsection)
    }
    game.currentturnoutputsection = StartNewOutputSection()
  </function>
  <function name="HidePreviousTurnOutput">
    if (HasString(game, "lastturnoutputsection")) {
      HideOutputSection (game.lastturnoutputsection)
    }
  </function>
  <function name="Ask" parameters="question, callback">
    options = NewStringList()
    list add (options, "Yes")
    list add (options, "No")
    game.askcallback = callback
    ShowMenu (question, options, false) {
      parameters = NewDictionary()
      if (result = "Yes") {
        boolresult = true
      }
      else {
        boolresult = false
      }
      dictionary add (parameters, "result", boolresult)
      callback = game.askcallback
      game.askcallback = null
      invoke (callback, parameters)
    }
  </function>
</asl>